var cl=Object.defineProperty,Wa=Object.getOwnPropertySymbols,hl=Object.prototype.hasOwnProperty,dl=Object.prototype.propertyIsEnumerable,Va=(Se,We,et)=>We in Se?cl(Se,We,{enumerable:!0,configurable:!0,writable:!0,value:et}):Se[We]=et,Xa=(Se,We)=>{for(var et in We||(We={}))hl.call(We,et)&&Va(Se,et,We[et]);if(Wa)for(var et of Wa(We))dl.call(We,et)&&Va(Se,et,We[et]);return Se};!function(Se,We){"object"==typeof exports&&"undefined"!=typeof module?We(exports):"function"==typeof define&&define.amd?define(["exports"],We):We((Se="undefined"!=typeof globalThis?globalThis:Se||self).skinview3d={})}(this,function(Se){"use strict";class Ut{addEventListener(e,t){void 0===this._listeners&&(this._listeners={});const n=this._listeners;void 0===n[e]&&(n[e]=[]),-1===n[e].indexOf(t)&&n[e].push(t)}hasEventListener(e,t){if(void 0===this._listeners)return!1;const n=this._listeners;return void 0!==n[e]&&-1!==n[e].indexOf(t)}removeEventListener(e,t){if(void 0===this._listeners)return;const n=this._listeners[e];if(void 0!==n){const i=n.indexOf(t);-1!==i&&n.splice(i,1)}}dispatchEvent(e){if(void 0===this._listeners)return;const t=this._listeners[e.type];if(void 0!==t){e.target=this;const n=t.slice(0);for(let i=0,r=n.length;i<r;i++)n[i].call(this,e);e.target=null}}}const Ue=[];for(let a=0;a<256;a++)Ue[a]=(a<16?"0":"")+a.toString(16);const Jn=Math.PI/180,tr=180/Math.PI;function ln(){const a=4294967295*Math.random()|0,e=4294967295*Math.random()|0,t=4294967295*Math.random()|0,n=4294967295*Math.random()|0;return(Ue[255&a]+Ue[a>>8&255]+Ue[a>>16&255]+Ue[a>>24&255]+"-"+Ue[255&e]+Ue[e>>8&255]+"-"+Ue[e>>16&15|64]+Ue[e>>24&255]+"-"+Ue[63&t|128]+Ue[t>>8&255]+"-"+Ue[t>>16&255]+Ue[t>>24&255]+Ue[255&n]+Ue[n>>8&255]+Ue[n>>16&255]+Ue[n>>24&255]).toUpperCase()}function tt(a,e,t){return Math.max(e,Math.min(t,a))}function Kn(a,e,t){return(1-t)*a+t*e}function nr(a){return 0==(a&a-1)&&0!==a}function Ya(a){return Math.pow(2,Math.floor(Math.log(a)/Math.LN2))}class le{constructor(e=0,t=0){this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e,t){return void 0!==t?(console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this)}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e,t){return void 0!==t?(console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this)}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const t=this.x,n=this.y,i=e.elements;return this.x=i[0]*t+i[3]*n+i[6],this.y=i[1]*t+i[4]*n+i[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y;return t*t+n*n}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t,n){return void 0!==n&&console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){const n=Math.cos(t),i=Math.sin(t),r=this.x-e.x,c=this.y-e.y;return this.x=r*n-c*i+e.x,this.y=r*i+c*n+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}le.prototype.isVector2=!0;class nt{constructor(){this.elements=[1,0,0,0,1,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")}set(e,t,n,i,r,c,o,l,s){const h=this.elements;return h[0]=e,h[1]=i,h[2]=o,h[3]=t,h[4]=r,h[5]=l,h[6]=n,h[7]=c,h[8]=s,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],this}extractBasis(e,t,n){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,i=t.elements,r=this.elements,c=n[0],o=n[3],l=n[6],s=n[1],h=n[4],u=n[7],d=n[2],p=n[5],g=n[8],m=i[0],M=i[3],w=i[6],f=i[1],v=i[4],_=i[7],x=i[2],T=i[5],A=i[8];return r[0]=c*m+o*f+l*x,r[3]=c*M+o*v+l*T,r[6]=c*w+o*_+l*A,r[1]=s*m+h*f+u*x,r[4]=s*M+h*v+u*T,r[7]=s*w+h*_+u*A,r[2]=d*m+p*f+g*x,r[5]=d*M+p*v+g*T,r[8]=d*w+p*_+g*A,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[1],i=e[2],r=e[3],c=e[4],o=e[5],l=e[6],s=e[7],h=e[8];return t*c*h-t*o*s-n*r*h+n*o*l+i*r*s-i*c*l}invert(){const e=this.elements,t=e[0],n=e[1],i=e[2],r=e[3],c=e[4],o=e[5],l=e[6],s=e[7],h=e[8],u=h*c-o*s,d=o*l-h*r,p=s*r-c*l,g=t*u+n*d+i*p;if(0===g)return this.set(0,0,0,0,0,0,0,0,0);const m=1/g;return e[0]=u*m,e[1]=(i*s-h*n)*m,e[2]=(o*n-i*c)*m,e[3]=d*m,e[4]=(h*t-i*l)*m,e[5]=(i*r-o*t)*m,e[6]=p*m,e[7]=(n*l-s*t)*m,e[8]=(c*t-n*r)*m,this}transpose(){let e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){const t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,n,i,r,c,o){const l=Math.cos(r),s=Math.sin(r);return this.set(n*l,n*s,-n*(l*c+s*o)+c+e,-i*s,i*l,-i*(-s*c+l*o)+o+t,0,0,1),this}scale(e,t){const n=this.elements;return n[0]*=e,n[3]*=e,n[6]*=e,n[1]*=t,n[4]*=t,n[7]*=t,this}rotate(e){const t=Math.cos(e),n=Math.sin(e),i=this.elements,r=i[0],c=i[3],o=i[6],l=i[1],s=i[4],h=i[7];return i[0]=t*r+n*l,i[3]=t*c+n*s,i[6]=t*o+n*h,i[1]=-n*r+t*l,i[4]=-n*c+t*s,i[7]=-n*o+t*h,this}translate(e,t){const n=this.elements;return n[0]+=e*n[2],n[3]+=e*n[5],n[6]+=e*n[8],n[1]+=t*n[2],n[4]+=t*n[5],n[7]+=t*n[8],this}equals(e){const t=this.elements,n=e.elements;for(let i=0;i<9;i++)if(t[i]!==n[i])return!1;return!0}fromArray(e,t=0){for(let n=0;n<9;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e}clone(){return(new this.constructor).fromArray(this.elements)}}function ir(a){if(0===a.length)return-1/0;let e=a[0];for(let t=1,n=a.length;t<n;++t)a[t]>e&&(e=a[t]);return e}function $n(a){return document.createElementNS("http://www.w3.org/1999/xhtml",a)}let Wt;nt.prototype.isMatrix3=!0;let ja=0;class Be extends Ut{constructor(e=Be.DEFAULT_IMAGE,t=Be.DEFAULT_MAPPING,n=1001,i=1001,r=1006,c=1008,o=1023,l=1009,s=1,h=3e3){super(),Object.defineProperty(this,"id",{value:ja++}),this.uuid=ln(),this.name="",this.image=e,this.mipmaps=[],this.mapping=t,this.wrapS=n,this.wrapT=i,this.magFilter=r,this.minFilter=c,this.anisotropy=s,this.format=o,this.internalFormat=null,this.type=l,this.offset=new le(0,0),this.repeat=new le(1,1),this.center=new le(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new nt,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=h,this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return(new this.constructor).copy(this)}copy(e){return this.name=e.name,this.image=e.image,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.encoding=e.encoding,this.userData=JSON.parse(JSON.stringify(e.userData)),this}toJSON(e){const t=void 0===e||"string"==typeof e;if(!t&&void 0!==e.textures[this.uuid])return e.textures[this.uuid];const n={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};if(void 0!==this.image){const i=this.image;if(void 0===i.uuid&&(i.uuid=ln()),!t&&void 0===e.images[i.uuid]){let r;if(Array.isArray(i)){r=[];for(let c=0,o=i.length;c<o;c++)r.push(ei(i[c].isDataTexture?i[c].image:i[c]))}else r=ei(i);e.images[i.uuid]={uuid:i.uuid,url:r}}n.image=i.uuid}return"{}"!==JSON.stringify(this.userData)&&(n.userData=this.userData),t||(e.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(300!==this.mapping)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case 1e3:e.x=e.x-Math.floor(e.x);break;case 1001:e.x=e.x<0?0:1;break;case 1002:e.x=1===Math.abs(Math.floor(e.x)%2)?Math.ceil(e.x)-e.x:e.x-Math.floor(e.x)}if(e.y<0||e.y>1)switch(this.wrapT){case 1e3:e.y=e.y-Math.floor(e.y);break;case 1001:e.y=e.y<0?0:1;break;case 1002:e.y=1===Math.abs(Math.floor(e.y)%2)?Math.ceil(e.y)-e.y:e.y-Math.floor(e.y)}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){!0===e&&this.version++}}function ei(a){return"undefined"!=typeof HTMLImageElement&&a instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&a instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&a instanceof ImageBitmap?class{static getDataURL(e){if(/^data:/i.test(e.src)||"undefined"==typeof HTMLCanvasElement)return e.src;let t;if(e instanceof HTMLCanvasElement)t=e;else{void 0===Wt&&(Wt=$n("canvas")),Wt.width=e.width,Wt.height=e.height;const n=Wt.getContext("2d");e instanceof ImageData?n.putImageData(e,0,0):n.drawImage(e,0,0,e.width,e.height),t=Wt}return t.width>2048||t.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",e),t.toDataURL("image/jpeg",.6)):t.toDataURL("image/png")}}.getDataURL(a):a.data?{data:Array.prototype.slice.call(a.data),width:a.width,height:a.height,type:a.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}Be.DEFAULT_IMAGE=void 0,Be.DEFAULT_MAPPING=300,Be.prototype.isTexture=!0;class Fe{constructor(e=0,t=0,n=0,i=1){this.x=e,this.y=t,this.z=n,this.w=i}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,n,i){return this.x=e,this.y=t,this.z=n,this.w=i,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=void 0!==e.w?e.w:1,this}add(e,t){return void 0!==t?(console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this)}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e,t){return void 0!==t?(console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this)}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const t=this.x,n=this.y,i=this.z,r=this.w,c=e.elements;return this.x=c[0]*t+c[4]*n+c[8]*i+c[12]*r,this.y=c[1]*t+c[5]*n+c[9]*i+c[13]*r,this.z=c[2]*t+c[6]*n+c[10]*i+c[14]*r,this.w=c[3]*t+c[7]*n+c[11]*i+c[15]*r,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,n,i,r;const l=e.elements,s=l[0],h=l[4],u=l[8],d=l[1],p=l[5],g=l[9],m=l[2],M=l[6],w=l[10];if(Math.abs(h-d)<.01&&Math.abs(u-m)<.01&&Math.abs(g-M)<.01){if(Math.abs(h+d)<.1&&Math.abs(u+m)<.1&&Math.abs(g+M)<.1&&Math.abs(s+p+w-3)<.1)return this.set(1,0,0,0),this;t=Math.PI;const v=(s+1)/2,_=(p+1)/2,x=(w+1)/2,T=(h+d)/4,A=(u+m)/4,D=(g+M)/4;return v>_&&v>x?v<.01?(n=0,i=.707106781,r=.707106781):(n=Math.sqrt(v),i=T/n,r=A/n):_>x?_<.01?(n=.707106781,i=0,r=.707106781):(i=Math.sqrt(_),n=T/i,r=D/i):x<.01?(n=.707106781,i=.707106781,r=0):(r=Math.sqrt(x),n=A/r,i=D/r),this.set(n,i,r,t),this}let f=Math.sqrt((M-g)*(M-g)+(u-m)*(u-m)+(d-h)*(d-h));return Math.abs(f)<.001&&(f=1),this.x=(M-g)/f,this.y=(u-m)/f,this.z=(d-h)/f,this.w=Math.acos((s+p+w-1)/2),this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this.w=Math.max(e.w,Math.min(t.w,this.w)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this.w=Math.max(e,Math.min(t,this.w)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this.w=e.w+(t.w-e.w)*n,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t,n){return void 0!==n&&console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}Fe.prototype.isVector4=!0;class it extends Ut{constructor(e,t,n={}){super(),this.width=e,this.height=t,this.depth=1,this.scissor=new Fe(0,0,e,t),this.scissorTest=!1,this.viewport=new Fe(0,0,e,t),this.texture=new Be(void 0,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.encoding),this.texture.isRenderTargetTexture=!0,this.texture.image={width:e,height:t,depth:1},this.texture.generateMipmaps=void 0!==n.generateMipmaps&&n.generateMipmaps,this.texture.internalFormat=void 0!==n.internalFormat?n.internalFormat:null,this.texture.minFilter=void 0!==n.minFilter?n.minFilter:1006,this.depthBuffer=void 0===n.depthBuffer||n.depthBuffer,this.stencilBuffer=void 0!==n.stencilBuffer&&n.stencilBuffer,this.depthTexture=void 0!==n.depthTexture?n.depthTexture:null}setTexture(e){e.image={width:this.width,height:this.height,depth:this.depth},this.texture=e}setSize(e,t,n=1){this.width===e&&this.height===t&&this.depth===n||(this.width=e,this.height=t,this.depth=n,this.texture.image.width=e,this.texture.image.height=t,this.texture.image.depth=n,this.dispose()),this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return(new this.constructor).copy(this)}copy(e){return this.width=e.width,this.height=e.height,this.depth=e.depth,this.viewport.copy(e.viewport),this.texture=e.texture.clone(),this.texture.image=Xa({},this.texture.image),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,this.depthTexture=e.depthTexture,this}dispose(){this.dispatchEvent({type:"dispose"})}}it.prototype.isWebGLRenderTarget=!0;class ti extends it{constructor(e,t,n={}){super(e,t,n),this.samples=4,this.ignoreDepthForMultisampleCopy=void 0===n.ignoreDepth||n.ignoreDepth,this.useRenderToTexture=void 0!==n.useRenderToTexture&&n.useRenderToTexture,this.useRenderbuffer=!1===this.useRenderToTexture}copy(e){return super.copy.call(this,e),this.samples=e.samples,this.useRenderToTexture=e.useRenderToTexture,this.useRenderbuffer=e.useRenderbuffer,this}}ti.prototype.isWebGLMultisampleRenderTarget=!0;class St{constructor(e=0,t=0,n=0,i=1){this._x=e,this._y=t,this._z=n,this._w=i}static slerp(e,t,n,i){return console.warn("THREE.Quaternion: Static .slerp() has been deprecated. Use qm.slerpQuaternions( qa, qb, t ) instead."),n.slerpQuaternions(e,t,i)}static slerpFlat(e,t,n,i,r,c,o){let l=n[i+0],s=n[i+1],h=n[i+2],u=n[i+3];const d=r[c+0],p=r[c+1],g=r[c+2],m=r[c+3];if(0===o)return e[t+0]=l,e[t+1]=s,e[t+2]=h,void(e[t+3]=u);if(1===o)return e[t+0]=d,e[t+1]=p,e[t+2]=g,void(e[t+3]=m);if(u!==m||l!==d||s!==p||h!==g){let M=1-o;const w=l*d+s*p+h*g+u*m,f=w>=0?1:-1,v=1-w*w;if(v>Number.EPSILON){const x=Math.sqrt(v),T=Math.atan2(x,w*f);M=Math.sin(M*T)/x,o=Math.sin(o*T)/x}const _=o*f;if(l=l*M+d*_,s=s*M+p*_,h=h*M+g*_,u=u*M+m*_,M===1-o){const x=1/Math.sqrt(l*l+s*s+h*h+u*u);l*=x,s*=x,h*=x,u*=x}}e[t]=l,e[t+1]=s,e[t+2]=h,e[t+3]=u}static multiplyQuaternionsFlat(e,t,n,i,r,c){const o=n[i],l=n[i+1],s=n[i+2],h=n[i+3],u=r[c],d=r[c+1],p=r[c+2],g=r[c+3];return e[t]=o*g+h*u+l*p-s*d,e[t+1]=l*g+h*d+s*u-o*p,e[t+2]=s*g+h*p+o*d-l*u,e[t+3]=h*g-o*u-l*d-s*p,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,n,i){return this._x=e,this._y=t,this._z=n,this._w=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t){if(!e||!e.isEuler)throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");const n=e._x,i=e._y,r=e._z,c=e._order,o=Math.cos,l=Math.sin,s=o(n/2),h=o(i/2),u=o(r/2),d=l(n/2),p=l(i/2),g=l(r/2);switch(c){case"XYZ":this._x=d*h*u+s*p*g,this._y=s*p*u-d*h*g,this._z=s*h*g+d*p*u,this._w=s*h*u-d*p*g;break;case"YXZ":this._x=d*h*u+s*p*g,this._y=s*p*u-d*h*g,this._z=s*h*g-d*p*u,this._w=s*h*u+d*p*g;break;case"ZXY":this._x=d*h*u-s*p*g,this._y=s*p*u+d*h*g,this._z=s*h*g+d*p*u,this._w=s*h*u-d*p*g;break;case"ZYX":this._x=d*h*u-s*p*g,this._y=s*p*u+d*h*g,this._z=s*h*g-d*p*u,this._w=s*h*u+d*p*g;break;case"YZX":this._x=d*h*u+s*p*g,this._y=s*p*u+d*h*g,this._z=s*h*g-d*p*u,this._w=s*h*u-d*p*g;break;case"XZY":this._x=d*h*u-s*p*g,this._y=s*p*u-d*h*g,this._z=s*h*g+d*p*u,this._w=s*h*u+d*p*g;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+c)}return!1!==t&&this._onChangeCallback(),this}setFromAxisAngle(e,t){const n=t/2,i=Math.sin(n);return this._x=e.x*i,this._y=e.y*i,this._z=e.z*i,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(e){const t=e.elements,n=t[0],i=t[4],r=t[8],c=t[1],o=t[5],l=t[9],s=t[2],h=t[6],u=t[10],d=n+o+u;if(d>0){const p=.5/Math.sqrt(d+1);this._w=.25/p,this._x=(h-l)*p,this._y=(r-s)*p,this._z=(c-i)*p}else if(n>o&&n>u){const p=2*Math.sqrt(1+n-o-u);this._w=(h-l)/p,this._x=.25*p,this._y=(i+c)/p,this._z=(r+s)/p}else if(o>u){const p=2*Math.sqrt(1+o-n-u);this._w=(r-s)/p,this._x=(i+c)/p,this._y=.25*p,this._z=(l+h)/p}else{const p=2*Math.sqrt(1+u-n-o);this._w=(c-i)/p,this._x=(r+s)/p,this._y=(l+h)/p,this._z=.25*p}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let n=e.dot(t)+1;return n<Number.EPSILON?(n=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=n):(this._x=0,this._y=-e.z,this._z=e.y,this._w=n)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=n),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(tt(this.dot(e),-1,1)))}rotateTowards(e,t){const n=this.angleTo(e);if(0===n)return this;const i=Math.min(1,t/n);return this.slerp(e,i),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return 0===e?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e,t){return void 0!==t?(console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(e,t)):this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){const n=e._x,i=e._y,r=e._z,c=e._w,o=t._x,l=t._y,s=t._z,h=t._w;return this._x=n*h+c*o+i*s-r*l,this._y=i*h+c*l+r*o-n*s,this._z=r*h+c*s+n*l-i*o,this._w=c*h-n*o-i*l-r*s,this._onChangeCallback(),this}slerp(e,t){if(0===t)return this;if(1===t)return this.copy(e);const n=this._x,i=this._y,r=this._z,c=this._w;let o=c*e._w+n*e._x+i*e._y+r*e._z;if(o<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,o=-o):this.copy(e),o>=1)return this._w=c,this._x=n,this._y=i,this._z=r,this;const l=1-o*o;if(l<=Number.EPSILON){const p=1-t;return this._w=p*c+t*this._w,this._x=p*n+t*this._x,this._y=p*i+t*this._y,this._z=p*r+t*this._z,this.normalize(),this._onChangeCallback(),this}const s=Math.sqrt(l),h=Math.atan2(s,o),u=Math.sin((1-t)*h)/s,d=Math.sin(t*h)/s;return this._w=c*u+this._w*d,this._x=n*u+this._x*d,this._y=i*u+this._y*d,this._z=r*u+this._z*d,this._onChangeCallback(),this}slerpQuaternions(e,t,n){this.copy(e).slerp(t,n)}random(){const e=Math.random(),t=Math.sqrt(1-e),n=Math.sqrt(e),i=2*Math.PI*Math.random(),r=2*Math.PI*Math.random();return this.set(t*Math.cos(i),n*Math.sin(r),n*Math.cos(r),t*Math.sin(i))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}}St.prototype.isQuaternion=!0;class P{constructor(e=0,t=0,n=0){this.x=e,this.y=t,this.z=n}set(e,t,n){return void 0===n&&(n=this.z),this.x=e,this.y=t,this.z=n,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e,t){return void 0!==t?(console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this)}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e,t){return void 0!==t?(console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this)}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e,t){return void 0!==t?(console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(e,t)):(this.x*=e.x,this.y*=e.y,this.z*=e.z,this)}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return e&&e.isEuler||console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."),this.applyQuaternion(rr.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(rr.setFromAxisAngle(e,t))}applyMatrix3(e){const t=this.x,n=this.y,i=this.z,r=e.elements;return this.x=r[0]*t+r[3]*n+r[6]*i,this.y=r[1]*t+r[4]*n+r[7]*i,this.z=r[2]*t+r[5]*n+r[8]*i,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const t=this.x,n=this.y,i=this.z,r=e.elements,c=1/(r[3]*t+r[7]*n+r[11]*i+r[15]);return this.x=(r[0]*t+r[4]*n+r[8]*i+r[12])*c,this.y=(r[1]*t+r[5]*n+r[9]*i+r[13])*c,this.z=(r[2]*t+r[6]*n+r[10]*i+r[14])*c,this}applyQuaternion(e){const t=this.x,n=this.y,i=this.z,r=e.x,c=e.y,o=e.z,l=e.w,s=l*t+c*i-o*n,h=l*n+o*t-r*i,u=l*i+r*n-c*t,d=-r*t-c*n-o*i;return this.x=s*l+d*-r+h*-o-u*-c,this.y=h*l+d*-c+u*-r-s*-o,this.z=u*l+d*-o+s*-c-h*-r,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const t=this.x,n=this.y,i=this.z,r=e.elements;return this.x=r[0]*t+r[4]*n+r[8]*i,this.y=r[1]*t+r[5]*n+r[9]*i,this.z=r[2]*t+r[6]*n+r[10]*i,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this}cross(e,t){return void 0!==t?(console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(e,t)):this.crossVectors(this,e)}crossVectors(e,t){const n=e.x,i=e.y,r=e.z,c=t.x,o=t.y,l=t.z;return this.x=i*l-r*o,this.y=r*c-n*l,this.z=n*o-i*c,this}projectOnVector(e){const t=e.lengthSq();if(0===t)return this.set(0,0,0);const n=e.dot(this)/t;return this.copy(e).multiplyScalar(n)}projectOnPlane(e){return ni.copy(this).projectOnVector(e),this.sub(ni)}reflect(e){return this.sub(ni.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(0===t)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(tt(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y,i=this.z-e.z;return t*t+n*n+i*i}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,n){const i=Math.sin(t)*e;return this.x=i*Math.sin(n),this.y=Math.cos(t)*e,this.z=i*Math.cos(n),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,n){return this.x=e*Math.sin(t),this.y=n,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){const t=this.setFromMatrixColumn(e,0).length(),n=this.setFromMatrixColumn(e,1).length(),i=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=n,this.z=i,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,4*t)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,3*t)}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t,n){return void 0!==n&&console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const e=2*(Math.random()-.5),t=Math.random()*Math.PI*2,n=Math.sqrt(1-e**2);return this.x=n*Math.cos(t),this.y=n*Math.sin(t),this.z=e,this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}P.prototype.isVector3=!0;const ni=new P,rr=new St;class Vt{constructor(e=new P(1/0,1/0,1/0),t=new P(-1/0,-1/0,-1/0)){this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){let t=1/0,n=1/0,i=1/0,r=-1/0,c=-1/0,o=-1/0;for(let l=0,s=e.length;l<s;l+=3){const h=e[l],u=e[l+1],d=e[l+2];h<t&&(t=h),u<n&&(n=u),d<i&&(i=d),h>r&&(r=h),u>c&&(c=u),d>o&&(o=d)}return this.min.set(t,n,i),this.max.set(r,c,o),this}setFromBufferAttribute(e){let t=1/0,n=1/0,i=1/0,r=-1/0,c=-1/0,o=-1/0;for(let l=0,s=e.count;l<s;l++){const h=e.getX(l),u=e.getY(l),d=e.getZ(l);h<t&&(t=h),u<n&&(n=u),d<i&&(i=d),h>r&&(r=h),u>c&&(c=u),d>o&&(o=d)}return this.min.set(t,n,i),this.max.set(r,c,o),this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=cn.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}setFromObject(e){return this.makeEmpty(),this.expandByObject(e)}clone(){return(new this.constructor).copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e){e.updateWorldMatrix(!1,!1);const t=e.geometry;void 0!==t&&(null===t.boundingBox&&t.computeBoundingBox(),ii.copy(t.boundingBox),ii.applyMatrix4(e.matrixWorld),this.union(ii));const n=e.children;for(let i=0,r=n.length;i<r;i++)this.expandByObject(n[i]);return this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z)}intersectsSphere(e){return this.clampPoint(e.center,cn),cn.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,n;return e.normal.x>0?(t=e.normal.x*this.min.x,n=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,n=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,n+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,n+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,n+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,n+=e.normal.z*this.min.z),t<=-e.constant&&n>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(hn),bn.subVectors(this.max,hn),Xt.subVectors(e.a,hn),Yt.subVectors(e.b,hn),jt.subVectors(e.c,hn),wt.subVectors(Yt,Xt),At.subVectors(jt,Yt),zt.subVectors(Xt,jt);let t=[0,-wt.z,wt.y,0,-At.z,At.y,0,-zt.z,zt.y,wt.z,0,-wt.x,At.z,0,-At.x,zt.z,0,-zt.x,-wt.y,wt.x,0,-At.y,At.x,0,-zt.y,zt.x,0];return!!ri(t,Xt,Yt,jt,bn)&&(t=[1,0,0,0,1,0,0,0,1],!!ri(t,Xt,Yt,jt,bn)&&(Sn.crossVectors(wt,At),t=[Sn.x,Sn.y,Sn.z],ri(t,Xt,Yt,jt,bn)))}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return cn.copy(e).clamp(this.min,this.max).sub(e).length()}getBoundingSphere(e){return this.getCenter(e.center),e.radius=.5*this.getSize(cn).length(),e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()||(gt[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),gt[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),gt[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),gt[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),gt[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),gt[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),gt[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),gt[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(gt)),this}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}Vt.prototype.isBox3=!0;const gt=[new P,new P,new P,new P,new P,new P,new P,new P],cn=new P,ii=new Vt,Xt=new P,Yt=new P,jt=new P,wt=new P,At=new P,zt=new P,hn=new P,bn=new P,Sn=new P,Ot=new P;function ri(a,e,t,n,i){for(let r=0,c=a.length-3;r<=c;r+=3){Ot.fromArray(a,r);const o=i.x*Math.abs(Ot.x)+i.y*Math.abs(Ot.y)+i.z*Math.abs(Ot.z),l=e.dot(Ot),s=t.dot(Ot),h=n.dot(Ot);if(Math.max(-Math.max(l,s,h),Math.min(l,s,h))>o)return!1}return!0}const Qa=new Vt,ar=new P,wn=new P,ai=new P;class si{constructor(e=new P,t=-1){this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){const n=this.center;void 0!==t?n.copy(t):Qa.setFromPoints(e).getCenter(n);let i=0;for(let r=0,c=e.length;r<c;r++)i=Math.max(i,n.distanceToSquared(e[r]));return this.radius=Math.sqrt(i),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){const n=this.center.distanceToSquared(e);return t.copy(e),n>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){ai.subVectors(e,this.center);const t=ai.lengthSq();if(t>this.radius*this.radius){const n=Math.sqrt(t),i=.5*(n-this.radius);this.center.add(ai.multiplyScalar(i/n)),this.radius+=i}return this}union(e){return!0===this.center.equals(e.center)?wn.set(0,0,1).multiplyScalar(e.radius):wn.subVectors(e.center,this.center).normalize().multiplyScalar(e.radius),this.expandByPoint(ar.copy(e.center).add(wn)),this.expandByPoint(ar.copy(e.center).sub(wn)),this}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return(new this.constructor).copy(this)}}const xt=new P,oi=new P,An=new P,Tt=new P,li=new P,Tn=new P,ci=new P;class Ce{constructor(){this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")}set(e,t,n,i,r,c,o,l,s,h,u,d,p,g,m,M){const w=this.elements;return w[0]=e,w[4]=t,w[8]=n,w[12]=i,w[1]=r,w[5]=c,w[9]=o,w[13]=l,w[2]=s,w[6]=h,w[10]=u,w[14]=d,w[3]=p,w[7]=g,w[11]=m,w[15]=M,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return(new Ce).fromArray(this.elements)}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],t[9]=n[9],t[10]=n[10],t[11]=n[11],t[12]=n[12],t[13]=n[13],t[14]=n[14],t[15]=n[15],this}copyPosition(e){const t=this.elements,n=e.elements;return t[12]=n[12],t[13]=n[13],t[14]=n[14],this}setFromMatrix3(e){const t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,n){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(e,t,n){return this.set(e.x,t.x,n.x,0,e.y,t.y,n.y,0,e.z,t.z,n.z,0,0,0,0,1),this}extractRotation(e){const t=this.elements,n=e.elements,i=1/Qt.setFromMatrixColumn(e,0).length(),r=1/Qt.setFromMatrixColumn(e,1).length(),c=1/Qt.setFromMatrixColumn(e,2).length();return t[0]=n[0]*i,t[1]=n[1]*i,t[2]=n[2]*i,t[3]=0,t[4]=n[4]*r,t[5]=n[5]*r,t[6]=n[6]*r,t[7]=0,t[8]=n[8]*c,t[9]=n[9]*c,t[10]=n[10]*c,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){e&&e.isEuler||console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");const t=this.elements,n=e.x,i=e.y,r=e.z,c=Math.cos(n),o=Math.sin(n),l=Math.cos(i),s=Math.sin(i),h=Math.cos(r),u=Math.sin(r);if("XYZ"===e.order){const d=c*h,p=c*u,g=o*h,m=o*u;t[0]=l*h,t[4]=-l*u,t[8]=s,t[1]=p+g*s,t[5]=d-m*s,t[9]=-o*l,t[2]=m-d*s,t[6]=g+p*s,t[10]=c*l}else if("YXZ"===e.order){const d=l*h,p=l*u,g=s*h,m=s*u;t[0]=d+m*o,t[4]=g*o-p,t[8]=c*s,t[1]=c*u,t[5]=c*h,t[9]=-o,t[2]=p*o-g,t[6]=m+d*o,t[10]=c*l}else if("ZXY"===e.order){const d=l*h,p=l*u,g=s*h,m=s*u;t[0]=d-m*o,t[4]=-c*u,t[8]=g+p*o,t[1]=p+g*o,t[5]=c*h,t[9]=m-d*o,t[2]=-c*s,t[6]=o,t[10]=c*l}else if("ZYX"===e.order){const d=c*h,p=c*u,g=o*h,m=o*u;t[0]=l*h,t[4]=g*s-p,t[8]=d*s+m,t[1]=l*u,t[5]=m*s+d,t[9]=p*s-g,t[2]=-s,t[6]=o*l,t[10]=c*l}else if("YZX"===e.order){const d=c*l,p=c*s,g=o*l,m=o*s;t[0]=l*h,t[4]=m-d*u,t[8]=g*u+p,t[1]=u,t[5]=c*h,t[9]=-o*h,t[2]=-s*h,t[6]=p*u+g,t[10]=d-m*u}else if("XZY"===e.order){const d=c*l,p=c*s,g=o*l,m=o*s;t[0]=l*h,t[4]=-u,t[8]=s*h,t[1]=d*u+m,t[5]=c*h,t[9]=p*u-g,t[2]=g*u-p,t[6]=o*h,t[10]=m*u+d}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(Za,e,Ja)}lookAt(e,t,n){const i=this.elements;return Xe.subVectors(e,t),0===Xe.lengthSq()&&(Xe.z=1),Xe.normalize(),Et.crossVectors(n,Xe),0===Et.lengthSq()&&(1===Math.abs(n.z)?Xe.x+=1e-4:Xe.z+=1e-4,Xe.normalize(),Et.crossVectors(n,Xe)),Et.normalize(),En.crossVectors(Xe,Et),i[0]=Et.x,i[4]=En.x,i[8]=Xe.x,i[1]=Et.y,i[5]=En.y,i[9]=Xe.y,i[2]=Et.z,i[6]=En.z,i[10]=Xe.z,this}multiply(e,t){return void 0!==t?(console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(e,t)):this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,i=t.elements,r=this.elements,c=n[0],o=n[4],l=n[8],s=n[12],h=n[1],u=n[5],d=n[9],p=n[13],g=n[2],m=n[6],M=n[10],w=n[14],f=n[3],v=n[7],_=n[11],x=n[15],T=i[0],A=i[4],D=i[8],z=i[12],O=i[1],R=i[5],q=i[9],Z=i[13],I=i[2],Y=i[6],K=i[10],$=i[14],B=i[3],Q=i[7],ee=i[11],re=i[15];return r[0]=c*T+o*O+l*I+s*B,r[4]=c*A+o*R+l*Y+s*Q,r[8]=c*D+o*q+l*K+s*ee,r[12]=c*z+o*Z+l*$+s*re,r[1]=h*T+u*O+d*I+p*B,r[5]=h*A+u*R+d*Y+p*Q,r[9]=h*D+u*q+d*K+p*ee,r[13]=h*z+u*Z+d*$+p*re,r[2]=g*T+m*O+M*I+w*B,r[6]=g*A+m*R+M*Y+w*Q,r[10]=g*D+m*q+M*K+w*ee,r[14]=g*z+m*Z+M*$+w*re,r[3]=f*T+v*O+_*I+x*B,r[7]=f*A+v*R+_*Y+x*Q,r[11]=f*D+v*q+_*K+x*ee,r[15]=f*z+v*Z+_*$+x*re,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[4],i=e[8],r=e[12],c=e[1],o=e[5],l=e[9],s=e[13],h=e[2],u=e[6],d=e[10],p=e[14];return e[3]*(+r*l*u-i*s*u-r*o*d+n*s*d+i*o*p-n*l*p)+e[7]*(+t*l*p-t*s*d+r*c*d-i*c*p+i*s*h-r*l*h)+e[11]*(+t*s*u-t*o*p-r*c*u+n*c*p+r*o*h-n*s*h)+e[15]*(-i*o*h-t*l*u+t*o*d+i*c*u-n*c*d+n*l*h)}transpose(){const e=this.elements;let t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,n){const i=this.elements;return e.isVector3?(i[12]=e.x,i[13]=e.y,i[14]=e.z):(i[12]=e,i[13]=t,i[14]=n),this}invert(){const e=this.elements,t=e[0],n=e[1],i=e[2],r=e[3],c=e[4],o=e[5],l=e[6],s=e[7],h=e[8],u=e[9],d=e[10],p=e[11],g=e[12],m=e[13],M=e[14],w=e[15],f=u*M*s-m*d*s+m*l*p-o*M*p-u*l*w+o*d*w,v=g*d*s-h*M*s-g*l*p+c*M*p+h*l*w-c*d*w,_=h*m*s-g*u*s+g*o*p-c*m*p-h*o*w+c*u*w,x=g*u*l-h*m*l-g*o*d+c*m*d+h*o*M-c*u*M,T=t*f+n*v+i*_+r*x;if(0===T)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const A=1/T;return e[0]=f*A,e[1]=(m*d*r-u*M*r-m*i*p+n*M*p+u*i*w-n*d*w)*A,e[2]=(o*M*r-m*l*r+m*i*s-n*M*s-o*i*w+n*l*w)*A,e[3]=(u*l*r-o*d*r-u*i*s+n*d*s+o*i*p-n*l*p)*A,e[4]=v*A,e[5]=(h*M*r-g*d*r+g*i*p-t*M*p-h*i*w+t*d*w)*A,e[6]=(g*l*r-c*M*r-g*i*s+t*M*s+c*i*w-t*l*w)*A,e[7]=(c*d*r-h*l*r+h*i*s-t*d*s-c*i*p+t*l*p)*A,e[8]=_*A,e[9]=(g*u*r-h*m*r-g*n*p+t*m*p+h*n*w-t*u*w)*A,e[10]=(c*m*r-g*o*r+g*n*s-t*m*s-c*n*w+t*o*w)*A,e[11]=(h*o*r-c*u*r-h*n*s+t*u*s+c*n*p-t*o*p)*A,e[12]=x*A,e[13]=(h*m*i-g*u*i+g*n*d-t*m*d-h*n*M+t*u*M)*A,e[14]=(g*o*i-c*m*i-g*n*l+t*m*l+c*n*M-t*o*M)*A,e[15]=(c*u*i-h*o*i+h*n*l-t*u*l-c*n*d+t*o*d)*A,this}scale(e){const t=this.elements,n=e.x,i=e.y,r=e.z;return t[0]*=n,t[4]*=i,t[8]*=r,t[1]*=n,t[5]*=i,t[9]*=r,t[2]*=n,t[6]*=i,t[10]*=r,t[3]*=n,t[7]*=i,t[11]*=r,this}getMaxScaleOnAxis(){const e=this.elements;return Math.sqrt(Math.max(e[0]*e[0]+e[1]*e[1]+e[2]*e[2],e[4]*e[4]+e[5]*e[5]+e[6]*e[6],e[8]*e[8]+e[9]*e[9]+e[10]*e[10]))}makeTranslation(e,t,n){return this.set(1,0,0,e,0,1,0,t,0,0,1,n,0,0,0,1),this}makeRotationX(e){const t=Math.cos(e),n=Math.sin(e);return this.set(1,0,0,0,0,t,-n,0,0,n,t,0,0,0,0,1),this}makeRotationY(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,0,n,0,0,1,0,0,-n,0,t,0,0,0,0,1),this}makeRotationZ(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,0,n,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){const n=Math.cos(t),i=Math.sin(t),r=1-n,c=e.x,o=e.y,l=e.z,s=r*c,h=r*o;return this.set(s*c+n,s*o-i*l,s*l+i*o,0,s*o+i*l,h*o+n,h*l-i*c,0,s*l-i*o,h*l+i*c,r*l*l+n,0,0,0,0,1),this}makeScale(e,t,n){return this.set(e,0,0,0,0,t,0,0,0,0,n,0,0,0,0,1),this}makeShear(e,t,n,i,r,c){return this.set(1,n,r,0,e,1,c,0,t,i,1,0,0,0,0,1),this}compose(e,t,n){const i=this.elements,r=t._x,c=t._y,o=t._z,l=t._w,s=r+r,h=c+c,u=o+o,d=r*s,p=r*h,g=r*u,m=c*h,M=c*u,w=o*u,f=l*s,v=l*h,_=l*u,x=n.x,T=n.y,A=n.z;return i[0]=(1-(m+w))*x,i[1]=(p+_)*x,i[2]=(g-v)*x,i[3]=0,i[4]=(p-_)*T,i[5]=(1-(d+w))*T,i[6]=(M+f)*T,i[7]=0,i[8]=(g+v)*A,i[9]=(M-f)*A,i[10]=(1-(d+m))*A,i[11]=0,i[12]=e.x,i[13]=e.y,i[14]=e.z,i[15]=1,this}decompose(e,t,n){const i=this.elements;let r=Qt.set(i[0],i[1],i[2]).length();const c=Qt.set(i[4],i[5],i[6]).length(),o=Qt.set(i[8],i[9],i[10]).length();this.determinant()<0&&(r=-r),e.x=i[12],e.y=i[13],e.z=i[14],rt.copy(this);const l=1/r,s=1/c,h=1/o;return rt.elements[0]*=l,rt.elements[1]*=l,rt.elements[2]*=l,rt.elements[4]*=s,rt.elements[5]*=s,rt.elements[6]*=s,rt.elements[8]*=h,rt.elements[9]*=h,rt.elements[10]*=h,t.setFromRotationMatrix(rt),n.x=r,n.y=c,n.z=o,this}makePerspective(e,t,n,i,r,c){void 0===c&&console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");const o=this.elements,s=2*r/(n-i),h=(t+e)/(t-e),u=(n+i)/(n-i),d=-(c+r)/(c-r),p=-2*c*r/(c-r);return o[0]=2*r/(t-e),o[4]=0,o[8]=h,o[12]=0,o[1]=0,o[5]=s,o[9]=u,o[13]=0,o[2]=0,o[6]=0,o[10]=d,o[14]=p,o[3]=0,o[7]=0,o[11]=-1,o[15]=0,this}makeOrthographic(e,t,n,i,r,c){const o=this.elements,l=1/(t-e),s=1/(n-i),h=1/(c-r),u=(t+e)*l,d=(n+i)*s,p=(c+r)*h;return o[0]=2*l,o[4]=0,o[8]=0,o[12]=-u,o[1]=0,o[5]=2*s,o[9]=0,o[13]=-d,o[2]=0,o[6]=0,o[10]=-2*h,o[14]=-p,o[3]=0,o[7]=0,o[11]=0,o[15]=1,this}equals(e){const t=this.elements,n=e.elements;for(let i=0;i<16;i++)if(t[i]!==n[i])return!1;return!0}fromArray(e,t=0){for(let n=0;n<16;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e[t+9]=n[9],e[t+10]=n[10],e[t+11]=n[11],e[t+12]=n[12],e[t+13]=n[13],e[t+14]=n[14],e[t+15]=n[15],e}}Ce.prototype.isMatrix4=!0;const Qt=new P,rt=new Ce,Za=new P(0,0,0),Ja=new P(1,1,1),Et=new P,En=new P,Xe=new P,sr=new Ce,or=new St;class qt{constructor(e=0,t=0,n=0,i=qt.DefaultOrder){this._x=e,this._y=t,this._z=n,this._order=i}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,n,i=this._order){return this._x=e,this._y=t,this._z=n,this._order=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t=this._order,n=!0){const i=e.elements,r=i[0],c=i[4],o=i[8],l=i[1],s=i[5],h=i[9],u=i[2],d=i[6],p=i[10];switch(t){case"XYZ":this._y=Math.asin(tt(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(-h,p),this._z=Math.atan2(-c,r)):(this._x=Math.atan2(d,s),this._z=0);break;case"YXZ":this._x=Math.asin(-tt(h,-1,1)),Math.abs(h)<.9999999?(this._y=Math.atan2(o,p),this._z=Math.atan2(l,s)):(this._y=Math.atan2(-u,r),this._z=0);break;case"ZXY":this._x=Math.asin(tt(d,-1,1)),Math.abs(d)<.9999999?(this._y=Math.atan2(-u,p),this._z=Math.atan2(-c,s)):(this._y=0,this._z=Math.atan2(l,r));break;case"ZYX":this._y=Math.asin(-tt(u,-1,1)),Math.abs(u)<.9999999?(this._x=Math.atan2(d,p),this._z=Math.atan2(l,r)):(this._x=0,this._z=Math.atan2(-c,s));break;case"YZX":this._z=Math.asin(tt(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(-h,s),this._y=Math.atan2(-u,r)):(this._x=0,this._y=Math.atan2(o,p));break;case"XZY":this._z=Math.asin(-tt(c,-1,1)),Math.abs(c)<.9999999?(this._x=Math.atan2(d,s),this._y=Math.atan2(o,r)):(this._x=Math.atan2(-h,p),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,!0===n&&this._onChangeCallback(),this}setFromQuaternion(e,t,n){return sr.makeRotationFromQuaternion(e),this.setFromRotationMatrix(sr,t,n)}setFromVector3(e,t=this._order){return this.set(e.x,e.y,e.z,t)}reorder(e){return or.setFromEuler(this),this.setFromQuaternion(or,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],void 0!==e[3]&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}toVector3(e){return e?e.set(this._x,this._y,this._z):new P(this._x,this._y,this._z)}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}}qt.prototype.isEuler=!0,qt.DefaultOrder="XYZ",qt.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"];class lr{constructor(){this.mask=1}set(e){this.mask=(1<<e|0)>>>0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return 0!=(this.mask&e.mask)}isEnabled(e){return 0!=(this.mask&(1<<e|0))}}let Ka=0;const cr=new P,Zt=new St,_t=new Ce,Ln=new P,dn=new P,$a=new P,es=new St,hr=new P(1,0,0),dr=new P(0,1,0),ur=new P(0,0,1),ts={type:"added"},pr={type:"removed"};class Ye extends Ut{constructor(){super(),Object.defineProperty(this,"id",{value:Ka++}),this.uuid=ln(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=Ye.DefaultUp.clone();const e=new P,t=new qt,n=new St,i=new P(1,1,1);t._onChange(function(){n.setFromEuler(t,!1)}),n._onChange(function(){t.setFromQuaternion(n,void 0,!1)}),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:i},modelViewMatrix:{value:new Ce},normalMatrix:{value:new nt}}),this.matrix=new Ce,this.matrixWorld=new Ce,this.matrixAutoUpdate=Ye.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.layers=new lr,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return Zt.setFromAxisAngle(e,t),this.quaternion.multiply(Zt),this}rotateOnWorldAxis(e,t){return Zt.setFromAxisAngle(e,t),this.quaternion.premultiply(Zt),this}rotateX(e){return this.rotateOnAxis(hr,e)}rotateY(e){return this.rotateOnAxis(dr,e)}rotateZ(e){return this.rotateOnAxis(ur,e)}translateOnAxis(e,t){return cr.copy(e).applyQuaternion(this.quaternion),this.position.add(cr.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(hr,e)}translateY(e){return this.translateOnAxis(dr,e)}translateZ(e){return this.translateOnAxis(ur,e)}localToWorld(e){return e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return e.applyMatrix4(_t.copy(this.matrixWorld).invert())}lookAt(e,t,n){e.isVector3?Ln.copy(e):Ln.set(e,t,n);const i=this.parent;this.updateWorldMatrix(!0,!1),dn.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?_t.lookAt(dn,Ln,this.up):_t.lookAt(Ln,dn,this.up),this.quaternion.setFromRotationMatrix(_t),i&&(_t.extractRotation(i.matrixWorld),Zt.setFromRotationMatrix(_t),this.quaternion.premultiply(Zt.invert()))}add(e){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(null!==e.parent&&e.parent.remove(e),e.parent=this,this.children.push(e),e.dispatchEvent(ts)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}remove(e){if(arguments.length>1){for(let n=0;n<arguments.length;n++)this.remove(arguments[n]);return this}const t=this.children.indexOf(e);return-1!==t&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(pr)),this}removeFromParent(){const e=this.parent;return null!==e&&e.remove(this),this}clear(){for(let e=0;e<this.children.length;e++){const t=this.children[e];t.parent=null,t.dispatchEvent(pr)}return this.children.length=0,this}attach(e){return this.updateWorldMatrix(!0,!1),_t.copy(this.matrixWorld).invert(),null!==e.parent&&(e.parent.updateWorldMatrix(!0,!1),_t.multiply(e.parent.matrixWorld)),e.applyMatrix4(_t),this.add(e),e.updateWorldMatrix(!1,!0),this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,t){if(this[e]===t)return this;for(let n=0,i=this.children.length;n<i;n++){const r=this.children[n].getObjectByProperty(e,t);if(void 0!==r)return r}}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(dn,e,$a),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(dn,es,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(e){e(this);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverse(e)}traverseVisible(e){if(!1===this.visible)return;e(this);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverseVisible(e)}traverseAncestors(e){const t=this.parent;null!==t&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].updateMatrixWorld(e)}updateWorldMatrix(e,t){const n=this.parent;if(!0===e&&null!==n&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),!0===t){const i=this.children;for(let r=0,c=i.length;r<c;r++)i[r].updateWorldMatrix(!1,!0)}}toJSON(e){const t=void 0===e||"string"==typeof e,n={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{}},n.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});const i={};function r(o,l){return void 0===o[l.uuid]&&(o[l.uuid]=l.toJSON(e)),l.uuid}if(i.uuid=this.uuid,i.type=this.type,""!==this.name&&(i.name=this.name),!0===this.castShadow&&(i.castShadow=!0),!0===this.receiveShadow&&(i.receiveShadow=!0),!1===this.visible&&(i.visible=!1),!1===this.frustumCulled&&(i.frustumCulled=!1),0!==this.renderOrder&&(i.renderOrder=this.renderOrder),"{}"!==JSON.stringify(this.userData)&&(i.userData=this.userData),i.layers=this.layers.mask,i.matrix=this.matrix.toArray(),!1===this.matrixAutoUpdate&&(i.matrixAutoUpdate=!1),this.isInstancedMesh&&(i.type="InstancedMesh",i.count=this.count,i.instanceMatrix=this.instanceMatrix.toJSON(),null!==this.instanceColor&&(i.instanceColor=this.instanceColor.toJSON())),this.isScene)this.background&&(this.background.isColor?i.background=this.background.toJSON():this.background.isTexture&&(i.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&(i.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){i.geometry=r(e.geometries,this.geometry);const o=this.geometry.parameters;if(void 0!==o&&void 0!==o.shapes){const l=o.shapes;if(Array.isArray(l))for(let s=0,h=l.length;s<h;s++)r(e.shapes,l[s]);else r(e.shapes,l)}}if(this.isSkinnedMesh&&(i.bindMode=this.bindMode,i.bindMatrix=this.bindMatrix.toArray(),void 0!==this.skeleton&&(r(e.skeletons,this.skeleton),i.skeleton=this.skeleton.uuid)),void 0!==this.material)if(Array.isArray(this.material)){const o=[];for(let l=0,s=this.material.length;l<s;l++)o.push(r(e.materials,this.material[l]));i.material=o}else i.material=r(e.materials,this.material);if(this.children.length>0){i.children=[];for(let o=0;o<this.children.length;o++)i.children.push(this.children[o].toJSON(e).object)}if(this.animations.length>0){i.animations=[];for(let o=0;o<this.animations.length;o++)i.animations.push(r(e.animations,this.animations[o]))}if(t){const o=c(e.geometries),l=c(e.materials),s=c(e.textures),h=c(e.images),u=c(e.shapes),d=c(e.skeletons),p=c(e.animations);o.length>0&&(n.geometries=o),l.length>0&&(n.materials=l),s.length>0&&(n.textures=s),h.length>0&&(n.images=h),u.length>0&&(n.shapes=u),d.length>0&&(n.skeletons=d),p.length>0&&(n.animations=p)}return n.object=i,n;function c(o){const l=[];for(const s in o){const h=o[s];delete h.metadata,l.push(h)}return l}}clone(e){return(new this.constructor).copy(this,e)}copy(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.userData=JSON.parse(JSON.stringify(e.userData)),!0===t)for(let n=0;n<e.children.length;n++)this.add(e.children[n].clone());return this}}Ye.DefaultUp=new P(0,1,0),Ye.DefaultMatrixAutoUpdate=!0,Ye.prototype.isObject3D=!0;const at=new P,vt=new P,hi=new P,yt=new P,Jt=new P,Kt=new P,fr=new P,di=new P,ui=new P,pi=new P;class Mt{constructor(e=new P,t=new P,n=new P){this.a=e,this.b=t,this.c=n}static getNormal(e,t,n,i){i.subVectors(n,t),at.subVectors(e,t),i.cross(at);const r=i.lengthSq();return r>0?i.multiplyScalar(1/Math.sqrt(r)):i.set(0,0,0)}static getBarycoord(e,t,n,i,r){at.subVectors(i,t),vt.subVectors(n,t),hi.subVectors(e,t);const c=at.dot(at),o=at.dot(vt),l=at.dot(hi),s=vt.dot(vt),h=vt.dot(hi),u=c*s-o*o;if(0===u)return r.set(-2,-1,-1);const d=1/u,p=(s*l-o*h)*d,g=(c*h-o*l)*d;return r.set(1-p-g,g,p)}static containsPoint(e,t,n,i){return this.getBarycoord(e,t,n,i,yt),yt.x>=0&&yt.y>=0&&yt.x+yt.y<=1}static getUV(e,t,n,i,r,c,o,l){return this.getBarycoord(e,t,n,i,yt),l.set(0,0),l.addScaledVector(r,yt.x),l.addScaledVector(c,yt.y),l.addScaledVector(o,yt.z),l}static isFrontFacing(e,t,n,i){return at.subVectors(n,t),vt.subVectors(e,t),at.cross(vt).dot(i)<0}set(e,t,n){return this.a.copy(e),this.b.copy(t),this.c.copy(n),this}setFromPointsAndIndices(e,t,n,i){return this.a.copy(e[t]),this.b.copy(e[n]),this.c.copy(e[i]),this}setFromAttributeAndIndices(e,t,n,i){return this.a.fromBufferAttribute(e,t),this.b.fromBufferAttribute(e,n),this.c.fromBufferAttribute(e,i),this}clone(){return(new this.constructor).copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return at.subVectors(this.c,this.b),vt.subVectors(this.a,this.b),.5*at.cross(vt).length()}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return Mt.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return Mt.getBarycoord(e,this.a,this.b,this.c,t)}getUV(e,t,n,i,r){return Mt.getUV(e,this.a,this.b,this.c,t,n,i,r)}containsPoint(e){return Mt.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return Mt.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){const n=this.a,i=this.b,r=this.c;let c,o;Jt.subVectors(i,n),Kt.subVectors(r,n),di.subVectors(e,n);const l=Jt.dot(di),s=Kt.dot(di);if(l<=0&&s<=0)return t.copy(n);ui.subVectors(e,i);const h=Jt.dot(ui),u=Kt.dot(ui);if(h>=0&&u<=h)return t.copy(i);const d=l*u-h*s;if(d<=0&&l>=0&&h<=0)return c=l/(l-h),t.copy(n).addScaledVector(Jt,c);pi.subVectors(e,r);const p=Jt.dot(pi),g=Kt.dot(pi);if(g>=0&&p<=g)return t.copy(r);const m=p*s-l*g;if(m<=0&&s>=0&&g<=0)return o=s/(s-g),t.copy(n).addScaledVector(Kt,o);const M=h*g-p*u;if(M<=0&&u-h>=0&&p-g>=0)return fr.subVectors(r,i),o=(u-h)/(u-h+(p-g)),t.copy(i).addScaledVector(fr,o);const w=1/(M+m+d);return c=m*w,o=d*w,t.copy(n).addScaledVector(Jt,c).addScaledVector(Kt,o)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}let ns=0;class $t extends Ut{constructor(){super(),Object.defineProperty(this,"id",{value:ns++}),this.uuid=ln(),this.name="",this.type="Material",this.fog=!0,this.blending=1,this.side=0,this.vertexColors=!1,this.opacity=1,this.format=1023,this.transparent=!1,this.blendSrc=204,this.blendDst=205,this.blendEquation=100,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=3,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=519,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=7680,this.stencilZFail=7680,this.stencilZPass=7680,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(void 0!==e)for(const t in e){const n=e[t];if(void 0===n){console.warn("THREE.Material: '"+t+"' parameter is undefined.");continue}if("shading"===t){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=1===n;continue}const i=this[t];void 0!==i?i&&i.isColor?i.set(n):i&&i.isVector3&&n&&n.isVector3?i.copy(n):this[t]=n:console.warn("THREE."+this.type+": '"+t+"' is not a property of this material.")}}toJSON(e){const t=void 0===e||"string"==typeof e;t&&(e={textures:{},images:{}});const n={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};function i(r){const c=[];for(const o in r){const l=r[o];delete l.metadata,c.push(l)}return c}if(n.uuid=this.uuid,n.type=this.type,""!==this.name&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),void 0!==this.roughness&&(n.roughness=this.roughness),void 0!==this.metalness&&(n.metalness=this.metalness),void 0!==this.sheen&&(n.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(n.sheenColor=this.sheenColor.getHex()),void 0!==this.sheenRoughness&&(n.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity&&1!==this.emissiveIntensity&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),void 0!==this.specularIntensity&&(n.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(n.specularColor=this.specularColor.getHex()),void 0!==this.shininess&&(n.shininess=this.shininess),void 0!==this.clearcoat&&(n.clearcoat=this.clearcoat),void 0!==this.clearcoatRoughness&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(e).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(e).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(e).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(e).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(e).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(n.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(n.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(e).uuid,void 0!==this.combine&&(n.combine=this.combine)),void 0!==this.envMapIntensity&&(n.envMapIntensity=this.envMapIntensity),void 0!==this.reflectivity&&(n.reflectivity=this.reflectivity),void 0!==this.refractionRatio&&(n.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(e).uuid),void 0!==this.transmission&&(n.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(n.transmissionMap=this.transmissionMap.toJSON(e).uuid),void 0!==this.thickness&&(n.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(n.thicknessMap=this.thicknessMap.toJSON(e).uuid),void 0!==this.attenuationDistance&&(n.attenuationDistance=this.attenuationDistance),void 0!==this.attenuationColor&&(n.attenuationColor=this.attenuationColor.getHex()),void 0!==this.size&&(n.size=this.size),null!==this.shadowSide&&(n.shadowSide=this.shadowSide),void 0!==this.sizeAttenuation&&(n.sizeAttenuation=this.sizeAttenuation),1!==this.blending&&(n.blending=this.blending),0!==this.side&&(n.side=this.side),this.vertexColors&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),1023!==this.format&&(n.format=this.format),!0===this.transparent&&(n.transparent=this.transparent),n.depthFunc=this.depthFunc,n.depthTest=this.depthTest,n.depthWrite=this.depthWrite,n.colorWrite=this.colorWrite,n.stencilWrite=this.stencilWrite,n.stencilWriteMask=this.stencilWriteMask,n.stencilFunc=this.stencilFunc,n.stencilRef=this.stencilRef,n.stencilFuncMask=this.stencilFuncMask,n.stencilFail=this.stencilFail,n.stencilZFail=this.stencilZFail,n.stencilZPass=this.stencilZPass,this.rotation&&0!==this.rotation&&(n.rotation=this.rotation),!0===this.polygonOffset&&(n.polygonOffset=!0),0!==this.polygonOffsetFactor&&(n.polygonOffsetFactor=this.polygonOffsetFactor),0!==this.polygonOffsetUnits&&(n.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth&&1!==this.linewidth&&(n.linewidth=this.linewidth),void 0!==this.dashSize&&(n.dashSize=this.dashSize),void 0!==this.gapSize&&(n.gapSize=this.gapSize),void 0!==this.scale&&(n.scale=this.scale),!0===this.dithering&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),!0===this.alphaToCoverage&&(n.alphaToCoverage=this.alphaToCoverage),!0===this.premultipliedAlpha&&(n.premultipliedAlpha=this.premultipliedAlpha),!0===this.wireframe&&(n.wireframe=this.wireframe),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),"round"!==this.wireframeLinecap&&(n.wireframeLinecap=this.wireframeLinecap),"round"!==this.wireframeLinejoin&&(n.wireframeLinejoin=this.wireframeLinejoin),!0===this.flatShading&&(n.flatShading=this.flatShading),!1===this.visible&&(n.visible=!1),!1===this.toneMapped&&(n.toneMapped=!1),"{}"!==JSON.stringify(this.userData)&&(n.userData=this.userData),t){const r=i(e.textures),c=i(e.images);r.length>0&&(n.textures=r),c.length>0&&(n.images=c)}return n}clone(){return(new this.constructor).copy(this)}copy(e){this.name=e.name,this.fog=e.fog,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.format=e.format,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const t=e.clippingPlanes;let n=null;if(null!==t){const i=t.length;n=new Array(i);for(let r=0;r!==i;++r)n[r]=t[r].clone()}return this.clippingPlanes=n,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){!0===e&&this.version++}}$t.prototype.isMaterial=!0;const mr={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},st={h:0,s:0,l:0},Pn={h:0,s:0,l:0};function fi(a,e,t){return t<0&&(t+=1),t>1&&(t-=1),t<1/6?a+6*(e-a)*t:t<.5?e:t<2/3?a+6*(e-a)*(2/3-t):a}function mi(a){return a<.04045?.0773993808*a:Math.pow(.9478672986*a+.0521327014,2.4)}function gi(a){return a<.0031308?12.92*a:1.055*Math.pow(a,.41666)-.055}class ye{constructor(e,t,n){return void 0===t&&void 0===n?this.set(e):this.setRGB(e,t,n)}set(e){return e&&e.isColor?this.copy(e):"number"==typeof e?this.setHex(e):"string"==typeof e&&this.setStyle(e),this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(255&e)/255,this}setRGB(e,t,n){return this.r=e,this.g=t,this.b=n,this}setHSL(e,t,n){if(e=(e%1+1)%1,t=tt(t,0,1),n=tt(n,0,1),0===t)this.r=this.g=this.b=n;else{const r=n<=.5?n*(1+t):n+t-n*t,c=2*n-r;this.r=fi(c,r,e+1/3),this.g=fi(c,r,e),this.b=fi(c,r,e-1/3)}return this}setStyle(e){function t(i){void 0!==i&&parseFloat(i)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let n;if(n=/^((?:rgb|hsl)a?)\(([^\)]*)\)/.exec(e)){let i;const c=n[2];switch(n[1]){case"rgb":case"rgba":if(i=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(c))return this.r=Math.min(255,parseInt(i[1],10))/255,this.g=Math.min(255,parseInt(i[2],10))/255,this.b=Math.min(255,parseInt(i[3],10))/255,t(i[4]),this;if(i=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(c))return this.r=Math.min(100,parseInt(i[1],10))/100,this.g=Math.min(100,parseInt(i[2],10))/100,this.b=Math.min(100,parseInt(i[3],10))/100,t(i[4]),this;break;case"hsl":case"hsla":if(i=/^\s*(\d*\.?\d+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(c)){const o=parseFloat(i[1])/360,l=parseInt(i[2],10)/100,s=parseInt(i[3],10)/100;return t(i[4]),this.setHSL(o,l,s)}}}else if(n=/^\#([A-Fa-f\d]+)$/.exec(e)){const i=n[1],r=i.length;if(3===r)return this.r=parseInt(i.charAt(0)+i.charAt(0),16)/255,this.g=parseInt(i.charAt(1)+i.charAt(1),16)/255,this.b=parseInt(i.charAt(2)+i.charAt(2),16)/255,this;if(6===r)return this.r=parseInt(i.charAt(0)+i.charAt(1),16)/255,this.g=parseInt(i.charAt(2)+i.charAt(3),16)/255,this.b=parseInt(i.charAt(4)+i.charAt(5),16)/255,this}return e&&e.length>0?this.setColorName(e):this}setColorName(e){const t=mr[e.toLowerCase()];return void 0!==t?this.setHex(t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copySRGBToLinear(e){return this.r=mi(e.r),this.g=mi(e.g),this.b=mi(e.b),this}copyLinearToSRGB(e){return this.r=gi(e.r),this.g=gi(e.g),this.b=gi(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(){return 255*this.r<<16^255*this.g<<8^255*this.b<<0}getHexString(){return("000000"+this.getHex().toString(16)).slice(-6)}getHSL(e){const t=this.r,n=this.g,i=this.b,r=Math.max(t,n,i),c=Math.min(t,n,i);let o,l;const s=(c+r)/2;if(c===r)o=0,l=0;else{const h=r-c;switch(l=s<=.5?h/(r+c):h/(2-r-c),r){case t:o=(n-i)/h+(n<i?6:0);break;case n:o=(i-t)/h+2;break;case i:o=(t-n)/h+4}o/=6}return e.h=o,e.s=l,e.l=s,e}getStyle(){return"rgb("+(255*this.r|0)+","+(255*this.g|0)+","+(255*this.b|0)+")"}offsetHSL(e,t,n){return this.getHSL(st),st.h+=e,st.s+=t,st.l+=n,this.setHSL(st.h,st.s,st.l),this}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,n){return this.r=e.r+(t.r-e.r)*n,this.g=e.g+(t.g-e.g)*n,this.b=e.b+(t.b-e.b)*n,this}lerpHSL(e,t){this.getHSL(st),e.getHSL(Pn);const n=Kn(st.h,Pn.h,t),i=Kn(st.s,Pn.s,t),r=Kn(st.l,Pn.l,t);return this.setHSL(n,i,r),this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),!0===e.normalized&&(this.r/=255,this.g/=255,this.b/=255),this}toJSON(){return this.getHex()}}ye.NAMES=mr,ye.prototype.isColor=!0,ye.prototype.r=1,ye.prototype.g=1,ye.prototype.b=1;class xi extends $t{constructor(e){super(),this.type="MeshBasicMaterial",this.color=new ye(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this}}xi.prototype.isMeshBasicMaterial=!0;const Te=new P,Fn=new le;class Ze{constructor(e,t,n){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.name="",this.array=e,this.itemSize=t,this.count=void 0!==e?e.length/t:0,this.normalized=!0===n,this.usage=35044,this.updateRange={offset:0,count:-1},this.version=0}onUploadCallback(){}set needsUpdate(e){!0===e&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this}copyAt(e,t,n){e*=this.itemSize,n*=t.itemSize;for(let i=0,r=this.itemSize;i<r;i++)this.array[e+i]=t.array[n+i];return this}copyArray(e){return this.array.set(e),this}copyColorsArray(e){const t=this.array;let n=0;for(let i=0,r=e.length;i<r;i++){let c=e[i];void 0===c&&(console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined",i),c=new ye),t[n++]=c.r,t[n++]=c.g,t[n++]=c.b}return this}copyVector2sArray(e){const t=this.array;let n=0;for(let i=0,r=e.length;i<r;i++){let c=e[i];void 0===c&&(console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined",i),c=new le),t[n++]=c.x,t[n++]=c.y}return this}copyVector3sArray(e){const t=this.array;let n=0;for(let i=0,r=e.length;i<r;i++){let c=e[i];void 0===c&&(console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined",i),c=new P),t[n++]=c.x,t[n++]=c.y,t[n++]=c.z}return this}copyVector4sArray(e){const t=this.array;let n=0;for(let i=0,r=e.length;i<r;i++){let c=e[i];void 0===c&&(console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined",i),c=new Fe),t[n++]=c.x,t[n++]=c.y,t[n++]=c.z,t[n++]=c.w}return this}applyMatrix3(e){if(2===this.itemSize)for(let t=0,n=this.count;t<n;t++)Fn.fromBufferAttribute(this,t),Fn.applyMatrix3(e),this.setXY(t,Fn.x,Fn.y);else if(3===this.itemSize)for(let t=0,n=this.count;t<n;t++)Te.fromBufferAttribute(this,t),Te.applyMatrix3(e),this.setXYZ(t,Te.x,Te.y,Te.z);return this}applyMatrix4(e){for(let t=0,n=this.count;t<n;t++)Te.x=this.getX(t),Te.y=this.getY(t),Te.z=this.getZ(t),Te.applyMatrix4(e),this.setXYZ(t,Te.x,Te.y,Te.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)Te.x=this.getX(t),Te.y=this.getY(t),Te.z=this.getZ(t),Te.applyNormalMatrix(e),this.setXYZ(t,Te.x,Te.y,Te.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)Te.x=this.getX(t),Te.y=this.getY(t),Te.z=this.getZ(t),Te.transformDirection(e),this.setXYZ(t,Te.x,Te.y,Te.z);return this}set(e,t=0){return this.array.set(e,t),this}getX(e){return this.array[e*this.itemSize]}setX(e,t){return this.array[e*this.itemSize]=t,this}getY(e){return this.array[e*this.itemSize+1]}setY(e,t){return this.array[e*this.itemSize+1]=t,this}getZ(e){return this.array[e*this.itemSize+2]}setZ(e,t){return this.array[e*this.itemSize+2]=t,this}getW(e){return this.array[e*this.itemSize+3]}setW(e,t){return this.array[e*this.itemSize+3]=t,this}setXY(e,t,n){return this.array[0+(e*=this.itemSize)]=t,this.array[e+1]=n,this}setXYZ(e,t,n,i){return this.array[0+(e*=this.itemSize)]=t,this.array[e+1]=n,this.array[e+2]=i,this}setXYZW(e,t,n,i,r){return this.array[0+(e*=this.itemSize)]=t,this.array[e+1]=n,this.array[e+2]=i,this.array[e+3]=r,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.prototype.slice.call(this.array),normalized:this.normalized};return""!==this.name&&(e.name=this.name),35044!==this.usage&&(e.usage=this.usage),0===this.updateRange.offset&&-1===this.updateRange.count||(e.updateRange=this.updateRange),e}}Ze.prototype.isBufferAttribute=!0;class gr extends Ze{constructor(e,t,n){super(new Uint16Array(e),t,n)}}class xr extends Ze{constructor(e,t,n){super(new Uint32Array(e),t,n)}}(class extends Ze{constructor(a,e,t){super(new Uint16Array(a),e,t)}}).prototype.isFloat16BufferAttribute=!0;class ot extends Ze{constructor(e,t,n){super(new Float32Array(e),t,n)}}let is=0;const Je=new Ce,_i=new Ye,en=new P,je=new Vt,un=new Vt,De=new P;class ut extends Ut{constructor(){super(),Object.defineProperty(this,"id",{value:is++}),this.uuid=ln(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return this.index=Array.isArray(e)?new(ir(e)>65535?xr:gr)(e,1):e,this}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return void 0!==this.attributes[e]}addGroup(e,t,n=0){this.groups.push({start:e,count:t,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){const t=this.attributes.position;void 0!==t&&(t.applyMatrix4(e),t.needsUpdate=!0);const n=this.attributes.normal;if(void 0!==n){const r=(new nt).getNormalMatrix(e);n.applyNormalMatrix(r),n.needsUpdate=!0}const i=this.attributes.tangent;return void 0!==i&&(i.transformDirection(e),i.needsUpdate=!0),null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this}applyQuaternion(e){return Je.makeRotationFromQuaternion(e),this.applyMatrix4(Je),this}rotateX(e){return Je.makeRotationX(e),this.applyMatrix4(Je),this}rotateY(e){return Je.makeRotationY(e),this.applyMatrix4(Je),this}rotateZ(e){return Je.makeRotationZ(e),this.applyMatrix4(Je),this}translate(e,t,n){return Je.makeTranslation(e,t,n),this.applyMatrix4(Je),this}scale(e,t,n){return Je.makeScale(e,t,n),this.applyMatrix4(Je),this}lookAt(e){return _i.lookAt(e),_i.updateMatrix(),this.applyMatrix4(_i.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(en).negate(),this.translate(en.x,en.y,en.z),this}setFromPoints(e){const t=[];for(let n=0,i=e.length;n<i;n++){const r=e[n];t.push(r.x,r.y,r.z||0)}return this.setAttribute("position",new ot(t,3)),this}computeBoundingBox(){null===this.boundingBox&&(this.boundingBox=new Vt);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute)return console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),void this.boundingBox.set(new P(-1/0,-1/0,-1/0),new P(1/0,1/0,1/0));if(void 0!==e){if(this.boundingBox.setFromBufferAttribute(e),t)for(let n=0,i=t.length;n<i;n++)je.setFromBufferAttribute(t[n]),this.morphTargetsRelative?(De.addVectors(this.boundingBox.min,je.min),this.boundingBox.expandByPoint(De),De.addVectors(this.boundingBox.max,je.max),this.boundingBox.expandByPoint(De)):(this.boundingBox.expandByPoint(je.min),this.boundingBox.expandByPoint(je.max))}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){null===this.boundingSphere&&(this.boundingSphere=new si);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute)return console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),void this.boundingSphere.set(new P,1/0);if(e){const n=this.boundingSphere.center;if(je.setFromBufferAttribute(e),t)for(let r=0,c=t.length;r<c;r++)un.setFromBufferAttribute(t[r]),this.morphTargetsRelative?(De.addVectors(je.min,un.min),je.expandByPoint(De),De.addVectors(je.max,un.max),je.expandByPoint(De)):(je.expandByPoint(un.min),je.expandByPoint(un.max));je.getCenter(n);let i=0;for(let r=0,c=e.count;r<c;r++)De.fromBufferAttribute(e,r),i=Math.max(i,n.distanceToSquared(De));if(t)for(let r=0,c=t.length;r<c;r++){const o=t[r],l=this.morphTargetsRelative;for(let s=0,h=o.count;s<h;s++)De.fromBufferAttribute(o,s),l&&(en.fromBufferAttribute(e,s),De.add(en)),i=Math.max(i,n.distanceToSquared(De))}this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const e=this.index,t=this.attributes;if(null===e||void 0===t.position||void 0===t.normal||void 0===t.uv)return void console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");const n=e.array,i=t.position.array,r=t.normal.array,c=t.uv.array,o=i.length/3;void 0===t.tangent&&this.setAttribute("tangent",new Ze(new Float32Array(4*o),4));const l=t.tangent.array,s=[],h=[];for(let O=0;O<o;O++)s[O]=new P,h[O]=new P;const u=new P,d=new P,p=new P,g=new le,m=new le,M=new le,w=new P,f=new P;function v(O,R,q){u.fromArray(i,3*O),d.fromArray(i,3*R),p.fromArray(i,3*q),g.fromArray(c,2*O),m.fromArray(c,2*R),M.fromArray(c,2*q),d.sub(u),p.sub(u),m.sub(g),M.sub(g);const Z=1/(m.x*M.y-M.x*m.y);isFinite(Z)&&(w.copy(d).multiplyScalar(M.y).addScaledVector(p,-m.y).multiplyScalar(Z),f.copy(p).multiplyScalar(m.x).addScaledVector(d,-M.x).multiplyScalar(Z),s[O].add(w),s[R].add(w),s[q].add(w),h[O].add(f),h[R].add(f),h[q].add(f))}let _=this.groups;0===_.length&&(_=[{start:0,count:n.length}]);for(let O=0,R=_.length;O<R;++O){const q=_[O],Z=q.start;for(let I=Z,Y=Z+q.count;I<Y;I+=3)v(n[I+0],n[I+1],n[I+2])}const x=new P,T=new P,A=new P,D=new P;function z(O){A.fromArray(r,3*O),D.copy(A);const R=s[O];x.copy(R),x.sub(A.multiplyScalar(A.dot(R))).normalize(),T.crossVectors(D,R);const q=T.dot(h[O])<0?-1:1;l[4*O]=x.x,l[4*O+1]=x.y,l[4*O+2]=x.z,l[4*O+3]=q}for(let O=0,R=_.length;O<R;++O){const q=_[O],Z=q.start;for(let I=Z,Y=Z+q.count;I<Y;I+=3)z(n[I+0]),z(n[I+1]),z(n[I+2])}}computeVertexNormals(){const e=this.index,t=this.getAttribute("position");if(void 0!==t){let n=this.getAttribute("normal");if(void 0===n)n=new Ze(new Float32Array(3*t.count),3),this.setAttribute("normal",n);else for(let d=0,p=n.count;d<p;d++)n.setXYZ(d,0,0,0);const i=new P,r=new P,c=new P,o=new P,l=new P,s=new P,h=new P,u=new P;if(e)for(let d=0,p=e.count;d<p;d+=3){const g=e.getX(d+0),m=e.getX(d+1),M=e.getX(d+2);i.fromBufferAttribute(t,g),r.fromBufferAttribute(t,m),c.fromBufferAttribute(t,M),h.subVectors(c,r),u.subVectors(i,r),h.cross(u),o.fromBufferAttribute(n,g),l.fromBufferAttribute(n,m),s.fromBufferAttribute(n,M),o.add(h),l.add(h),s.add(h),n.setXYZ(g,o.x,o.y,o.z),n.setXYZ(m,l.x,l.y,l.z),n.setXYZ(M,s.x,s.y,s.z)}else for(let d=0,p=t.count;d<p;d+=3)i.fromBufferAttribute(t,d+0),r.fromBufferAttribute(t,d+1),c.fromBufferAttribute(t,d+2),h.subVectors(c,r),u.subVectors(i,r),h.cross(u),n.setXYZ(d+0,h.x,h.y,h.z),n.setXYZ(d+1,h.x,h.y,h.z),n.setXYZ(d+2,h.x,h.y,h.z);this.normalizeNormals(),n.needsUpdate=!0}}merge(e,t){if(!e||!e.isBufferGeometry)return void console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",e);void 0===t&&(t=0,console.warn("THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge."));const n=this.attributes;for(const i in n){if(void 0===e.attributes[i])continue;const r=n[i].array,c=e.attributes[i],o=c.array,l=c.itemSize*t,s=Math.min(o.length,r.length-l);for(let h=0,u=l;h<s;h++,u++)r[u]=o[h]}return this}normalizeNormals(){const e=this.attributes.normal;for(let t=0,n=e.count;t<n;t++)De.fromBufferAttribute(e,t),De.normalize(),e.setXYZ(t,De.x,De.y,De.z)}toNonIndexed(){function e(o,l){const s=o.array,h=o.itemSize,u=o.normalized,d=new s.constructor(l.length*h);let p=0,g=0;for(let m=0,M=l.length;m<M;m++){p=o.isInterleavedBufferAttribute?l[m]*o.data.stride+o.offset:l[m]*h;for(let w=0;w<h;w++)d[g++]=s[p++]}return new Ze(d,h,u)}if(null===this.index)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const t=new ut,n=this.index.array,i=this.attributes;for(const o in i){const l=e(i[o],n);t.setAttribute(o,l)}const r=this.morphAttributes;for(const o in r){const l=[],s=r[o];for(let h=0,u=s.length;h<u;h++){const d=e(s[h],n);l.push(d)}t.morphAttributes[o]=l}t.morphTargetsRelative=this.morphTargetsRelative;const c=this.groups;for(let o=0,l=c.length;o<l;o++){const s=c[o];t.addGroup(s.start,s.count,s.materialIndex)}return t}toJSON(){const e={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,""!==this.name&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),void 0!==this.parameters){const l=this.parameters;for(const s in l)void 0!==l[s]&&(e[s]=l[s]);return e}e.data={attributes:{}};const t=this.index;null!==t&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const n=this.attributes;for(const l in n)e.data.attributes[l]=n[l].toJSON(e.data);const i={};let r=!1;for(const l in this.morphAttributes){const s=this.morphAttributes[l],h=[];for(let u=0,d=s.length;u<d;u++)h.push(s[u].toJSON(e.data));h.length>0&&(i[l]=h,r=!0)}r&&(e.data.morphAttributes=i,e.data.morphTargetsRelative=this.morphTargetsRelative);const c=this.groups;c.length>0&&(e.data.groups=JSON.parse(JSON.stringify(c)));const o=this.boundingSphere;return null!==o&&(e.data.boundingSphere={center:o.center.toArray(),radius:o.radius}),e}clone(){return(new this.constructor).copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const t={};this.name=e.name;const n=e.index;null!==n&&this.setIndex(n.clone(t));const i=e.attributes;for(const s in i)this.setAttribute(s,i[s].clone(t));const r=e.morphAttributes;for(const s in r){const h=[],u=r[s];for(let d=0,p=u.length;d<p;d++)h.push(u[d].clone(t));this.morphAttributes[s]=h}this.morphTargetsRelative=e.morphTargetsRelative;const c=e.groups;for(let s=0,h=c.length;s<h;s++){const u=c[s];this.addGroup(u.start,u.count,u.materialIndex)}const o=e.boundingBox;null!==o&&(this.boundingBox=o.clone());const l=e.boundingSphere;return null!==l&&(this.boundingSphere=l.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,void 0!==e.parameters&&(this.parameters=Object.assign({},e.parameters)),this}dispose(){this.dispatchEvent({type:"dispose"})}}ut.prototype.isBufferGeometry=!0;const _r=new Ce,tn=new class qa{constructor(e=new P,t=new P(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t.copy(this.direction).multiplyScalar(e).add(this.origin)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,xt)),this}closestPointToPoint(e,t){t.subVectors(e,this.origin);const n=t.dot(this.direction);return n<0?t.copy(this.origin):t.copy(this.direction).multiplyScalar(n).add(this.origin)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const t=xt.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(xt.copy(this.direction).multiplyScalar(t).add(this.origin),xt.distanceToSquared(e))}distanceSqToSegment(e,t,n,i){oi.copy(e).add(t).multiplyScalar(.5),An.copy(t).sub(e).normalize(),Tt.copy(this.origin).sub(oi);const r=.5*e.distanceTo(t),c=-this.direction.dot(An),o=Tt.dot(this.direction),l=-Tt.dot(An),s=Tt.lengthSq(),h=Math.abs(1-c*c);let u,d,p,g;if(h>0)if(u=c*l-o,d=c*o-l,g=r*h,u>=0)if(d>=-g)if(d<=g){const m=1/h;u*=m,d*=m,p=u*(u+c*d+2*o)+d*(c*u+d+2*l)+s}else d=r,u=Math.max(0,-(c*d+o)),p=-u*u+d*(d+2*l)+s;else d=-r,u=Math.max(0,-(c*d+o)),p=-u*u+d*(d+2*l)+s;else d<=-g?(u=Math.max(0,-(-c*r+o)),d=u>0?-r:Math.min(Math.max(-r,-l),r),p=-u*u+d*(d+2*l)+s):d<=g?(u=0,d=Math.min(Math.max(-r,-l),r),p=d*(d+2*l)+s):(u=Math.max(0,-(c*r+o)),d=u>0?r:Math.min(Math.max(-r,-l),r),p=-u*u+d*(d+2*l)+s);else d=c>0?-r:r,u=Math.max(0,-(c*d+o)),p=-u*u+d*(d+2*l)+s;return n&&n.copy(this.direction).multiplyScalar(u).add(this.origin),i&&i.copy(An).multiplyScalar(d).add(oi),p}intersectSphere(e,t){xt.subVectors(e.center,this.origin);const n=xt.dot(this.direction),i=xt.dot(xt)-n*n,r=e.radius*e.radius;if(i>r)return null;const c=Math.sqrt(r-i),o=n-c,l=n+c;return o<0&&l<0?null:this.at(o<0?l:o,t)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const t=e.normal.dot(this.direction);if(0===t)return 0===e.distanceToPoint(this.origin)?0:null;const n=-(this.origin.dot(e.normal)+e.constant)/t;return n>=0?n:null}intersectPlane(e,t){const n=this.distanceToPlane(e);return null===n?null:this.at(n,t)}intersectsPlane(e){const t=e.distanceToPoint(this.origin);return 0===t||e.normal.dot(this.direction)*t<0}intersectBox(e,t){let n,i,r,c,o,l;const s=1/this.direction.x,h=1/this.direction.y,u=1/this.direction.z,d=this.origin;return s>=0?(n=(e.min.x-d.x)*s,i=(e.max.x-d.x)*s):(n=(e.max.x-d.x)*s,i=(e.min.x-d.x)*s),h>=0?(r=(e.min.y-d.y)*h,c=(e.max.y-d.y)*h):(r=(e.max.y-d.y)*h,c=(e.min.y-d.y)*h),n>c||r>i?null:((r>n||n!=n)&&(n=r),(c<i||i!=i)&&(i=c),u>=0?(o=(e.min.z-d.z)*u,l=(e.max.z-d.z)*u):(o=(e.max.z-d.z)*u,l=(e.min.z-d.z)*u),n>l||o>i?null:((o>n||n!=n)&&(n=o),(l<i||i!=i)&&(i=l),i<0?null:this.at(n>=0?n:i,t)))}intersectsBox(e){return null!==this.intersectBox(e,xt)}intersectTriangle(e,t,n,i,r){li.subVectors(t,e),Tn.subVectors(n,e),ci.crossVectors(li,Tn);let c,o=this.direction.dot(ci);if(o>0){if(i)return null;c=1}else{if(!(o<0))return null;c=-1,o=-o}Tt.subVectors(this.origin,e);const l=c*this.direction.dot(Tn.crossVectors(Tt,Tn));if(l<0)return null;const s=c*this.direction.dot(li.cross(Tt));if(s<0||l+s>o)return null;const h=-c*Tt.dot(ci);return h<0?null:this.at(h/o,r)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return(new this.constructor).copy(this)}},vi=new si,Lt=new P,Pt=new P,Ft=new P,yi=new P,Mi=new P,bi=new P,Cn=new P,Nn=new P,Dn=new P,In=new le,Rn=new le,Un=new le,Si=new P,zn=new P;class Ee extends Ye{constructor(e=new ut,t=new xi){super(),this.type="Mesh",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e){return super.copy(e),void 0!==e.morphTargetInfluences&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),void 0!==e.morphTargetDictionary&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=e.material,this.geometry=e.geometry,this}updateMorphTargets(){const e=this.geometry;if(e.isBufferGeometry){const t=e.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(void 0!==i){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,c=i.length;r<c;r++){const o=i[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[o]=r}}}}else{const t=e.morphTargets;void 0!==t&&t.length>0&&console.error("THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}}raycast(e,t){const n=this.geometry,i=this.material,r=this.matrixWorld;if(void 0===i||(null===n.boundingSphere&&n.computeBoundingSphere(),vi.copy(n.boundingSphere),vi.applyMatrix4(r),!1===e.ray.intersectsSphere(vi))||(_r.copy(r).invert(),tn.copy(e.ray).applyMatrix4(_r),null!==n.boundingBox&&!1===tn.intersectsBox(n.boundingBox)))return;let c;if(n.isBufferGeometry){const o=n.index,l=n.attributes.position,s=n.morphAttributes.position,h=n.morphTargetsRelative,u=n.attributes.uv,d=n.attributes.uv2,p=n.groups,g=n.drawRange;if(null!==o)if(Array.isArray(i))for(let m=0,M=p.length;m<M;m++){const w=p[m],f=i[w.materialIndex];for(let v=Math.max(w.start,g.start),_=Math.min(o.count,Math.min(w.start+w.count,g.start+g.count));v<_;v+=3){const x=o.getX(v),T=o.getX(v+1),A=o.getX(v+2);c=On(this,f,e,tn,l,s,h,u,d,x,T,A),c&&(c.faceIndex=Math.floor(v/3),c.face.materialIndex=w.materialIndex,t.push(c))}}else for(let m=Math.max(0,g.start),M=Math.min(o.count,g.start+g.count);m<M;m+=3){const w=o.getX(m),f=o.getX(m+1),v=o.getX(m+2);c=On(this,i,e,tn,l,s,h,u,d,w,f,v),c&&(c.faceIndex=Math.floor(m/3),t.push(c))}else if(void 0!==l)if(Array.isArray(i))for(let m=0,M=p.length;m<M;m++){const w=p[m],f=i[w.materialIndex];for(let v=Math.max(w.start,g.start),_=Math.min(l.count,Math.min(w.start+w.count,g.start+g.count));v<_;v+=3)c=On(this,f,e,tn,l,s,h,u,d,v,v+1,v+2),c&&(c.faceIndex=Math.floor(v/3),c.face.materialIndex=w.materialIndex,t.push(c))}else for(let m=Math.max(0,g.start),M=Math.min(l.count,g.start+g.count);m<M;m+=3)c=On(this,i,e,tn,l,s,h,u,d,m,m+1,m+2),c&&(c.faceIndex=Math.floor(m/3),t.push(c))}else n.isGeometry&&console.error("THREE.Mesh.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}}function On(a,e,t,n,i,r,c,o,l,s,h,u){Lt.fromBufferAttribute(i,s),Pt.fromBufferAttribute(i,h),Ft.fromBufferAttribute(i,u);const d=a.morphTargetInfluences;if(r&&d){Cn.set(0,0,0),Nn.set(0,0,0),Dn.set(0,0,0);for(let g=0,m=r.length;g<m;g++){const M=d[g],w=r[g];0!==M&&(yi.fromBufferAttribute(w,s),Mi.fromBufferAttribute(w,h),bi.fromBufferAttribute(w,u),c?(Cn.addScaledVector(yi,M),Nn.addScaledVector(Mi,M),Dn.addScaledVector(bi,M)):(Cn.addScaledVector(yi.sub(Lt),M),Nn.addScaledVector(Mi.sub(Pt),M),Dn.addScaledVector(bi.sub(Ft),M)))}Lt.add(Cn),Pt.add(Nn),Ft.add(Dn)}a.isSkinnedMesh&&(a.boneTransform(s,Lt),a.boneTransform(h,Pt),a.boneTransform(u,Ft));const p=function(g,m,M,w,f,v,_,x){let T;if(T=1===m.side?w.intersectTriangle(_,v,f,!0,x):w.intersectTriangle(f,v,_,2!==m.side,x),null===T)return null;zn.copy(x),zn.applyMatrix4(g.matrixWorld);const A=M.ray.origin.distanceTo(zn);return A<M.near||A>M.far?null:{distance:A,point:zn.clone(),object:g}}(a,e,t,n,Lt,Pt,Ft,Si);if(p){o&&(In.fromBufferAttribute(o,s),Rn.fromBufferAttribute(o,h),Un.fromBufferAttribute(o,u),p.uv=Mt.getUV(Si,Lt,Pt,Ft,In,Rn,Un,new le)),l&&(In.fromBufferAttribute(l,s),Rn.fromBufferAttribute(l,h),Un.fromBufferAttribute(l,u),p.uv2=Mt.getUV(Si,Lt,Pt,Ft,In,Rn,Un,new le));const g={a:s,b:h,c:u,normal:new P,materialIndex:0};Mt.getNormal(Lt,Pt,Ft,g.normal),p.face=g}return p}Ee.prototype.isMesh=!0;class Ne extends ut{constructor(e=1,t=1,n=1,i=1,r=1,c=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:n,widthSegments:i,heightSegments:r,depthSegments:c};const o=this;i=Math.floor(i),r=Math.floor(r),c=Math.floor(c);const l=[],s=[],h=[],u=[];let d=0,p=0;function g(m,M,w,f,v,_,x,T,A,D,z){const O=_/A,R=x/D,q=_/2,Z=x/2,I=T/2,Y=A+1,K=D+1;let $=0,B=0;const Q=new P;for(let ee=0;ee<K;ee++){const re=ee*R-Z;for(let ae=0;ae<Y;ae++)Q[m]=(ae*O-q)*f,Q[M]=re*v,Q[w]=I,s.push(Q.x,Q.y,Q.z),Q[m]=0,Q[M]=0,Q[w]=T>0?1:-1,h.push(Q.x,Q.y,Q.z),u.push(ae/A),u.push(1-ee/D),$+=1}for(let ee=0;ee<D;ee++)for(let re=0;re<A;re++){const pe=d+re+Y*(ee+1),E=d+(re+1)+Y*(ee+1),S=d+(re+1)+Y*ee;l.push(d+re+Y*ee,pe,S),l.push(pe,E,S),B+=6}o.addGroup(p,B,z),p+=B,d+=$}g("z","y","x",-1,-1,n,t,e,c,r,0),g("z","y","x",1,-1,n,t,-e,c,r,1),g("x","z","y",1,1,e,n,t,i,c,2),g("x","z","y",1,-1,e,n,-t,i,c,3),g("x","y","z",1,-1,e,t,n,i,r,4),g("x","y","z",-1,-1,e,t,-n,i,r,5),this.setIndex(l),this.setAttribute("position",new ot(s,3)),this.setAttribute("normal",new ot(h,3)),this.setAttribute("uv",new ot(u,2))}static fromJSON(e){return new Ne(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}function nn(a){const e={};for(const t in a){e[t]={};for(const n in a[t]){const i=a[t][n];e[t][n]=i&&(i.isColor||i.isMatrix3||i.isMatrix4||i.isVector2||i.isVector3||i.isVector4||i.isTexture||i.isQuaternion)?i.clone():Array.isArray(i)?i.slice():i}}return e}function Ge(a){const e={};for(let t=0;t<a.length;t++){const n=nn(a[t]);for(const i in n)e[i]=n[i]}return e}const vr={clone:nn,merge:Ge};class Ct extends $t{constructor(e){super(),this.type="ShaderMaterial",this.defines={},this.uniforms={},this.vertexShader="void main(){gl_Position=projectionMatrix*modelViewMatrix*vec4(position,1.0);}",this.fragmentShader="void main(){gl_FragColor=vec4(1.0,0.0,0.0,1.0);}",this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,void 0!==e&&(void 0!==e.attributes&&console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."),this.setValues(e))}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=nn(e.uniforms),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){const t=super.toJSON(e);t.glslVersion=this.glslVersion,t.uniforms={};for(const i in this.uniforms){const r=this.uniforms[i].value;t.uniforms[i]=r&&r.isTexture?{type:"t",value:r.toJSON(e).uuid}:r&&r.isColor?{type:"c",value:r.getHex()}:r&&r.isVector2?{type:"v2",value:r.toArray()}:r&&r.isVector3?{type:"v3",value:r.toArray()}:r&&r.isVector4?{type:"v4",value:r.toArray()}:r&&r.isMatrix3?{type:"m3",value:r.toArray()}:r&&r.isMatrix4?{type:"m4",value:r.toArray()}:{value:r}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader;const n={};for(const i in this.extensions)!0===this.extensions[i]&&(n[i]=!0);return Object.keys(n).length>0&&(t.extensions=n),t}}Ct.prototype.isShaderMaterial=!0;class wi extends Ye{constructor(){super(),this.type="Camera",this.matrixWorldInverse=new Ce,this.projectionMatrix=new Ce,this.projectionMatrixInverse=new Ce}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(-t[8],-t[9],-t[10]).normalize()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return(new this.constructor).copy(this)}}wi.prototype.isCamera=!0;class Qe extends wi{constructor(e=50,t=1,n=.1,i=2e3){super(),this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=n,this.far=i,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=null===e.view?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){const t=.5*this.getFilmHeight()/e;this.fov=2*tr*Math.atan(t),this.updateProjectionMatrix()}getFocalLength(){const e=Math.tan(.5*Jn*this.fov);return.5*this.getFilmHeight()/e}getEffectiveFOV(){return 2*tr*Math.atan(Math.tan(.5*Jn*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}setViewOffset(e,t,n,i,r,c){this.aspect=e/t,null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=r,this.view.height=c,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=this.near;let t=e*Math.tan(.5*Jn*this.fov)/this.zoom,n=2*t,i=this.aspect*n,r=-.5*i;const c=this.view;if(null!==this.view&&this.view.enabled){const l=c.fullWidth,s=c.fullHeight;r+=c.offsetX*i/l,t-=c.offsetY*n/s,i*=c.width/l,n*=c.height/s}const o=this.filmOffset;0!==o&&(r+=e*o/this.getFilmWidth()),this.projectionMatrix.makePerspective(r,r+i,t,t-n,e,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,null!==this.view&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}Qe.prototype.isPerspectiveCamera=!0;class rs extends Ye{constructor(e,t,n){if(super(),this.type="CubeCamera",!0!==n.isWebGLCubeRenderTarget)return void console.error("THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.");this.renderTarget=n;const i=new Qe(90,1,e,t);i.layers=this.layers,i.up.set(0,-1,0),i.lookAt(new P(1,0,0)),this.add(i);const r=new Qe(90,1,e,t);r.layers=this.layers,r.up.set(0,-1,0),r.lookAt(new P(-1,0,0)),this.add(r);const c=new Qe(90,1,e,t);c.layers=this.layers,c.up.set(0,0,1),c.lookAt(new P(0,1,0)),this.add(c);const o=new Qe(90,1,e,t);o.layers=this.layers,o.up.set(0,0,-1),o.lookAt(new P(0,-1,0)),this.add(o);const l=new Qe(90,1,e,t);l.layers=this.layers,l.up.set(0,-1,0),l.lookAt(new P(0,0,1)),this.add(l);const s=new Qe(90,1,e,t);s.layers=this.layers,s.up.set(0,-1,0),s.lookAt(new P(0,0,-1)),this.add(s)}update(e,t){null===this.parent&&this.updateMatrixWorld();const n=this.renderTarget,[i,r,c,o,l,s]=this.children,h=e.xr.enabled,u=e.getRenderTarget();e.xr.enabled=!1;const d=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,e.setRenderTarget(n,0),e.render(t,i),e.setRenderTarget(n,1),e.render(t,r),e.setRenderTarget(n,2),e.render(t,c),e.setRenderTarget(n,3),e.render(t,o),e.setRenderTarget(n,4),e.render(t,l),n.texture.generateMipmaps=d,e.setRenderTarget(n,5),e.render(t,s),e.setRenderTarget(u),e.xr.enabled=h}}class Ai extends Be{constructor(e,t,n,i,r,c,o,l,s,h){super(e=void 0!==e?e:[],t=void 0!==t?t:301,n,i,r,c,o,l,s,h),this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}Ai.prototype.isCubeTexture=!0;class yr extends it{constructor(e,t,n){Number.isInteger(t)&&(console.warn("THREE.WebGLCubeRenderTarget: constructor signature is now WebGLCubeRenderTarget( size, options )"),t=n),super(e,e,t),this.texture=new Ai(void 0,(t=t||{}).mapping,t.wrapS,t.wrapT,t.magFilter,t.minFilter,t.format,t.type,t.anisotropy,t.encoding),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=void 0!==t.generateMipmaps&&t.generateMipmaps,this.texture.minFilter=void 0!==t.minFilter?t.minFilter:1006,this.texture._needsFlipEnvMap=!1}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.format=1023,this.texture.encoding=t.encoding,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const n_uniforms={tEquirect:{value:null}},n_vertexShader="varying vec3 vWorldDirection;vec3 transformDirection(in vec3 dir,in mat4 matrix){return normalize((matrix*vec4(dir,0.0)).xyz);}void main(){vWorldDirection=transformDirection(position,modelMatrix);\n#include <begin_vertex>\n#include <project_vertex>\n}",n_fragmentShader="uniform sampler2D tEquirect;varying vec3 vWorldDirection;\n#include <common>\nvoid main(){vec3 direction=normalize(vWorldDirection);vec2 sampleUV=equirectUv(direction);gl_FragColor=texture2D(tEquirect,sampleUV);}",i=new Ne(5,5,5),r=new Ct({name:"CubemapFromEquirect",uniforms:nn(n_uniforms),vertexShader:n_vertexShader,fragmentShader:n_fragmentShader,side:1,blending:0});r.uniforms.tEquirect.value=t;const c=new Ee(i,r),o=t.minFilter;return 1008===t.minFilter&&(t.minFilter=1006),new rs(1,10,this).update(e,c),t.minFilter=o,c.geometry.dispose(),c.material.dispose(),this}clear(e,t,n,i){const r=e.getRenderTarget();for(let c=0;c<6;c++)e.setRenderTarget(this,c),e.clear(t,n,i);e.setRenderTarget(r)}}yr.prototype.isWebGLCubeRenderTarget=!0;const Ti=new P,as=new P,ss=new nt;class Nt{constructor(e=new P(1,0,0),t=0){this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,n,i){return this.normal.set(e,t,n),this.constant=i,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,n){const i=Ti.subVectors(n,t).cross(as.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(i,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t.copy(this.normal).multiplyScalar(-this.distanceToPoint(e)).add(e)}intersectLine(e,t){const n=e.delta(Ti),i=this.normal.dot(n);if(0===i)return 0===this.distanceToPoint(e.start)?t.copy(e.start):null;const r=-(e.start.dot(this.normal)+this.constant)/i;return r<0||r>1?null:t.copy(n).multiplyScalar(r).add(e.start)}intersectsLine(e){const t=this.distanceToPoint(e.start),n=this.distanceToPoint(e.end);return t<0&&n>0||n<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){const n=t||ss.getNormalMatrix(e),i=this.coplanarPoint(Ti).applyMatrix4(e),r=this.normal.applyMatrix3(n).normalize();return this.constant=-i.dot(r),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return(new this.constructor).copy(this)}}Nt.prototype.isPlane=!0;const an=new si,Bn=new P;class Ei{constructor(e=new Nt,t=new Nt,n=new Nt,i=new Nt,r=new Nt,c=new Nt){this.planes=[e,t,n,i,r,c]}set(e,t,n,i,r,c){const o=this.planes;return o[0].copy(e),o[1].copy(t),o[2].copy(n),o[3].copy(i),o[4].copy(r),o[5].copy(c),this}copy(e){const t=this.planes;for(let n=0;n<6;n++)t[n].copy(e.planes[n]);return this}setFromProjectionMatrix(e){const t=this.planes,n=e.elements,i=n[0],r=n[1],c=n[2],o=n[3],l=n[4],s=n[5],h=n[6],u=n[7],d=n[8],p=n[9],g=n[10],m=n[11],M=n[12],w=n[13],f=n[14],v=n[15];return t[0].setComponents(o-i,u-l,m-d,v-M).normalize(),t[1].setComponents(o+i,u+l,m+d,v+M).normalize(),t[2].setComponents(o+r,u+s,m+p,v+w).normalize(),t[3].setComponents(o-r,u-s,m-p,v-w).normalize(),t[4].setComponents(o-c,u-h,m-g,v-f).normalize(),t[5].setComponents(o+c,u+h,m+g,v+f).normalize(),this}intersectsObject(e){const t=e.geometry;return null===t.boundingSphere&&t.computeBoundingSphere(),an.copy(t.boundingSphere).applyMatrix4(e.matrixWorld),this.intersectsSphere(an)}intersectsSprite(e){return an.center.set(0,0,0),an.radius=.7071067811865476,an.applyMatrix4(e.matrixWorld),this.intersectsSphere(an)}intersectsSphere(e){const t=this.planes,n=e.center,i=-e.radius;for(let r=0;r<6;r++)if(t[r].distanceToPoint(n)<i)return!1;return!0}intersectsBox(e){const t=this.planes;for(let n=0;n<6;n++){const i=t[n];if(Bn.x=i.normal.x>0?e.max.x:e.min.x,Bn.y=i.normal.y>0?e.max.y:e.min.y,Bn.z=i.normal.z>0?e.max.z:e.min.z,i.distanceToPoint(Bn)<0)return!1}return!0}containsPoint(e){const t=this.planes;for(let n=0;n<6;n++)if(t[n].distanceToPoint(e)<0)return!1;return!0}clone(){return(new this.constructor).copy(this)}}function Mr(){let a=null,e=!1,t=null,n=null;function i(r,c){t(r,c),n=a.requestAnimationFrame(i)}return{start:function(){!0!==e&&null!==t&&(n=a.requestAnimationFrame(i),e=!0)},stop:function(){a.cancelAnimationFrame(n),e=!1},setAnimationLoop:function(r){t=r},setContext:function(r){a=r}}}function os(a,e){const t=e.isWebGL2,n=new WeakMap;return{get:function(i){return i.isInterleavedBufferAttribute&&(i=i.data),n.get(i)},remove:function(i){i.isInterleavedBufferAttribute&&(i=i.data);const r=n.get(i);r&&(a.deleteBuffer(r.buffer),n.delete(i))},update:function(i,r){if(i.isGLBufferAttribute){const o=n.get(i);return void((!o||o.version<i.version)&&n.set(i,{buffer:i.buffer,type:i.type,bytesPerElement:i.elementSize,version:i.version}))}i.isInterleavedBufferAttribute&&(i=i.data);const c=n.get(i);void 0===c?n.set(i,function(o,l){const s=o.array,h=o.usage,u=a.createBuffer();a.bindBuffer(l,u),a.bufferData(l,s,h),o.onUploadCallback();let d=5126;return s instanceof Float32Array?d=5126:s instanceof Float64Array?console.warn("THREE.WebGLAttributes: Unsupported data buffer format: Float64Array."):s instanceof Uint16Array?o.isFloat16BufferAttribute?t?d=5131:console.warn("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2."):d=5123:s instanceof Int16Array?d=5122:s instanceof Uint32Array?d=5125:s instanceof Int32Array?d=5124:s instanceof Int8Array?d=5120:(s instanceof Uint8Array||s instanceof Uint8ClampedArray)&&(d=5121),{buffer:u,type:d,bytesPerElement:s.BYTES_PER_ELEMENT,version:o.version}}(i,r)):c.version<i.version&&(function(o,l,s){const h=l.array,u=l.updateRange;a.bindBuffer(s,o),-1===u.count?a.bufferSubData(s,0,h):(t?a.bufferSubData(s,u.offset*h.BYTES_PER_ELEMENT,h,u.offset,u.count):a.bufferSubData(s,u.offset*h.BYTES_PER_ELEMENT,h.subarray(u.offset,u.offset+u.count)),u.count=-1)}(c.buffer,i,r),c.version=i.version)}}}class Li extends ut{constructor(e=1,t=1,n=1,i=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:n,heightSegments:i};const r=e/2,c=t/2,o=Math.floor(n),l=Math.floor(i),s=o+1,h=l+1,u=e/o,d=t/l,p=[],g=[],m=[],M=[];for(let w=0;w<h;w++){const f=w*d-c;for(let v=0;v<s;v++)g.push(v*u-r,-f,0),m.push(0,0,1),M.push(v/o),M.push(1-w/l)}for(let w=0;w<l;w++)for(let f=0;f<o;f++){const _=f+s*(w+1),x=f+1+s*(w+1),T=f+1+s*w;p.push(f+s*w,_,T),p.push(_,x,T)}this.setIndex(p),this.setAttribute("position",new ot(g,3)),this.setAttribute("normal",new ot(m,3)),this.setAttribute("uv",new ot(M,2))}static fromJSON(e){return new Li(e.width,e.height,e.widthSegments,e.heightSegments)}}const _e={alphamap_fragment:"#ifdef USE_ALPHAMAP\ndiffuseColor.a*=texture2D(alphaMap,vUv).g;\n#endif",alphamap_pars_fragment:"#ifdef USE_ALPHAMAP\nuniform sampler2D alphaMap;\n#endif",alphatest_fragment:"#ifdef USE_ALPHATEST\nif(diffuseColor.a<alphaTest)discard;\n#endif",alphatest_pars_fragment:"#ifdef USE_ALPHATEST\nuniform float alphaTest;\n#endif",aomap_fragment:"#ifdef USE_AOMAP\nfloat ambientOcclusion=(texture2D(aoMap,vUv2).r-1.0)*aoMapIntensity+1.0;reflectedLight.indirectDiffuse*=ambientOcclusion;\n#if defined(USE_ENVMAP)&&defined(STANDARD)\nfloat dotNV=saturate(dot(geometry.normal,geometry.viewDir));reflectedLight.indirectSpecular*=computeSpecularOcclusion(dotNV,ambientOcclusion,material.roughness);\n#endif\n#endif",aomap_pars_fragment:"#ifdef USE_AOMAP\nuniform sampler2D aoMap;uniform float aoMapIntensity;\n#endif",begin_vertex:"vec3 transformed=vec3(position);",beginnormal_vertex:"vec3 objectNormal=vec3(normal);\n#ifdef USE_TANGENT\nvec3 objectTangent=vec3(tangent.xyz);\n#endif",bsdfs:"vec3 BRDF_Lambert(const in vec3 diffuseColor){return RECIPROCAL_PI*diffuseColor;}vec3 F_Schlick(const in vec3 f0,const in float f90,const in float dotVH){float fresnel=exp2((-5.55473*dotVH-6.98316)*dotVH);return f0*(1.0-fresnel)+(f90*fresnel);}float V_GGX_SmithCorrelated(const in float alpha,const in float dotNL,const in float dotNV){float a2=pow2(alpha);float gv=dotNL*sqrt(a2+(1.0-a2)*pow2(dotNV));float gl=dotNV*sqrt(a2+(1.0-a2)*pow2(dotNL));return 0.5/max(gv+gl,EPSILON);}float D_GGX(const in float alpha,const in float dotNH){float a2=pow2(alpha);float denom=pow2(dotNH)*(a2-1.0)+1.0;return RECIPROCAL_PI*a2/pow2(denom);}vec3 BRDF_GGX(const in vec3 lightDir,const in vec3 viewDir,const in vec3 normal,const in vec3 f0,const in float f90,const in float roughness){float alpha=pow2(roughness);vec3 halfDir=normalize(lightDir+viewDir);float dotNL=saturate(dot(normal,lightDir));float dotNV=saturate(dot(normal,viewDir));float dotNH=saturate(dot(normal,halfDir));float dotVH=saturate(dot(viewDir,halfDir));vec3 F=F_Schlick(f0,f90,dotVH);float V=V_GGX_SmithCorrelated(alpha,dotNL,dotNV);float D=D_GGX(alpha,dotNH);return F*(V*D);}vec2 LTC_Uv(const in vec3 N,const in vec3 V,const in float roughness){const float LUT_SIZE=64.0;const float LUT_SCALE=(LUT_SIZE-1.0)/LUT_SIZE;const float LUT_BIAS=0.5/LUT_SIZE;float dotNV=saturate(dot(N,V));vec2 uv=vec2(roughness,sqrt(1.0-dotNV));uv=uv*LUT_SCALE+LUT_BIAS;return uv;}float LTC_ClippedSphereFormFactor(const in vec3 f){float l=length(f);return max((l*l+f.z)/(l+1.0),0.0);}vec3 LTC_EdgeVectorFormFactor(const in vec3 v1,const in vec3 v2){float x=dot(v1,v2);float y=abs(x);float a=0.8543985+(0.4965155+0.0145206*y)*y;float b=3.4175940+(4.1616724+y)*y;float v=a/b;float theta_sintheta=(x>0.0)?v:0.5*inversesqrt(max(1.0-x*x,1e-7))-v;return cross(v1,v2)*theta_sintheta;}vec3 LTC_Evaluate(const in vec3 N,const in vec3 V,const in vec3 P,const in mat3 mInv,const in vec3 rectCoords[4]){vec3 v1=rectCoords[1]-rectCoords[0];vec3 v2=rectCoords[3]-rectCoords[0];vec3 lightNormal=cross(v1,v2);if(dot(lightNormal,P-rectCoords[0])<0.0)return vec3(0.0);vec3 T1,T2;T1=normalize(V-N*dot(V,N));T2=-cross(N,T1);mat3 mat=mInv*transposeMat3(mat3(T1,T2,N));vec3 coords[4];coords[0]=mat*(rectCoords[0]-P);coords[1]=mat*(rectCoords[1]-P);coords[2]=mat*(rectCoords[2]-P);coords[3]=mat*(rectCoords[3]-P);coords[0]=normalize(coords[0]);coords[1]=normalize(coords[1]);coords[2]=normalize(coords[2]);coords[3]=normalize(coords[3]);vec3 vectorFormFactor=vec3(0.0);vectorFormFactor+=LTC_EdgeVectorFormFactor(coords[0],coords[1]);vectorFormFactor+=LTC_EdgeVectorFormFactor(coords[1],coords[2]);vectorFormFactor+=LTC_EdgeVectorFormFactor(coords[2],coords[3]);vectorFormFactor+=LTC_EdgeVectorFormFactor(coords[3],coords[0]);float result=LTC_ClippedSphereFormFactor(vectorFormFactor);return vec3(result);}float G_BlinnPhong_Implicit(){return 0.25;}float D_BlinnPhong(const in float shininess,const in float dotNH){return RECIPROCAL_PI*(shininess*0.5+1.0)*pow(dotNH,shininess);}vec3 BRDF_BlinnPhong(const in vec3 lightDir,const in vec3 viewDir,const in vec3 normal,const in vec3 specularColor,const in float shininess){vec3 halfDir=normalize(lightDir+viewDir);float dotNH=saturate(dot(normal,halfDir));float dotVH=saturate(dot(viewDir,halfDir));vec3 F=F_Schlick(specularColor,1.0,dotVH);float G=G_BlinnPhong_Implicit();float D=D_BlinnPhong(shininess,dotNH);return F*(G*D);}\n#if defined(USE_SHEEN)\nfloat D_Charlie(float roughness,float dotNH){float alpha=pow2(roughness);float invAlpha=1.0/alpha;float cos2h=dotNH*dotNH;float sin2h=max(1.0-cos2h,0.0078125);return(2.0+invAlpha)*pow(sin2h,invAlpha*0.5)/(2.0*PI);}float V_Neubelt(float dotNV,float dotNL){return saturate(1.0/(4.0*(dotNL+dotNV-dotNL*dotNV)));}vec3 BRDF_Sheen(const in vec3 lightDir,const in vec3 viewDir,const in vec3 normal,vec3 sheenColor,const in float sheenRoughness){vec3 halfDir=normalize(lightDir+viewDir);float dotNL=saturate(dot(normal,lightDir));float dotNV=saturate(dot(normal,viewDir));float dotNH=saturate(dot(normal,halfDir));float D=D_Charlie(sheenRoughness,dotNH);float V=V_Neubelt(dotNV,dotNL);return sheenColor*(D*V);}\n#endif",bumpmap_pars_fragment:"#ifdef USE_BUMPMAP\nuniform sampler2D bumpMap;uniform float bumpScale;vec2 dHdxy_fwd(){vec2 dSTdx=dFdx(vUv);vec2 dSTdy=dFdy(vUv);float Hll=bumpScale*texture2D(bumpMap,vUv).x;float dBx=bumpScale*texture2D(bumpMap,vUv+dSTdx).x-Hll;float dBy=bumpScale*texture2D(bumpMap,vUv+dSTdy).x-Hll;return vec2(dBx,dBy);}vec3 perturbNormalArb(vec3 surf_pos,vec3 surf_norm,vec2 dHdxy,float faceDirection){vec3 vSigmaX=vec3(dFdx(surf_pos.x),dFdx(surf_pos.y),dFdx(surf_pos.z));vec3 vSigmaY=vec3(dFdy(surf_pos.x),dFdy(surf_pos.y),dFdy(surf_pos.z));vec3 vN=surf_norm;vec3 R1=cross(vSigmaY,vN);vec3 R2=cross(vN,vSigmaX);float fDet=dot(vSigmaX,R1)*faceDirection;vec3 vGrad=sign(fDet)*(dHdxy.x*R1+dHdxy.y*R2);return normalize(abs(fDet)*surf_norm-vGrad);}\n#endif",clipping_planes_fragment:"#if NUM_CLIPPING_PLANES>0\nvec4 plane;\n#pragma unroll_loop_start\nfor(int i=0;i<UNION_CLIPPING_PLANES;i++){plane=clippingPlanes[i];if(dot(vClipPosition,plane.xyz)>plane.w)discard;}\n#pragma unroll_loop_end\n#if UNION_CLIPPING_PLANES<NUM_CLIPPING_PLANES\nbool clipped=true;\n#pragma unroll_loop_start\nfor(int i=UNION_CLIPPING_PLANES;i<NUM_CLIPPING_PLANES;i++){plane=clippingPlanes[i];clipped=(dot(vClipPosition,plane.xyz)>plane.w)&&clipped;}\n#pragma unroll_loop_end\nif(clipped)discard;\n#endif\n#endif",clipping_planes_pars_fragment:"#if NUM_CLIPPING_PLANES>0\nvarying vec3 vClipPosition;uniform vec4 clippingPlanes[NUM_CLIPPING_PLANES];\n#endif",clipping_planes_pars_vertex:"#if NUM_CLIPPING_PLANES>0\nvarying vec3 vClipPosition;\n#endif",clipping_planes_vertex:"#if NUM_CLIPPING_PLANES>0\nvClipPosition=-mvPosition.xyz;\n#endif",color_fragment:"#if defined(USE_COLOR_ALPHA)\ndiffuseColor*=vColor;\n#elif defined(USE_COLOR)\ndiffuseColor.rgb*=vColor;\n#endif",color_pars_fragment:"#if defined(USE_COLOR_ALPHA)\nvarying vec4 vColor;\n#elif defined(USE_COLOR)\nvarying vec3 vColor;\n#endif",color_pars_vertex:"#if defined(USE_COLOR_ALPHA)\nvarying vec4 vColor;\n#elif defined(USE_COLOR)||defined(USE_INSTANCING_COLOR)\nvarying vec3 vColor;\n#endif",color_vertex:"#if defined(USE_COLOR_ALPHA)\nvColor=vec4(1.0);\n#elif defined(USE_COLOR)||defined(USE_INSTANCING_COLOR)\nvColor=vec3(1.0);\n#endif\n#ifdef USE_COLOR\nvColor*=color;\n#endif\n#ifdef USE_INSTANCING_COLOR\nvColor.xyz*=instanceColor.xyz;\n#endif",common:"#define PI 3.141592653589793\n#define PI2 6.283185307179586\n#define PI_HALF 1.5707963267948966\n#define RECIPROCAL_PI 0.3183098861837907\n#define RECIPROCAL_PI2 0.15915494309189535\n#define EPSILON 1e-6\n#ifndef saturate\n#define saturate(a)clamp(a,0.0,1.0)\n#endif\n#define whiteComplement(a)(1.0-saturate(a))\nfloat pow2(const in float x){return x*x;}float pow3(const in float x){return x*x*x;}float pow4(const in float x){float x2=x*x;return x2*x2;}float max3(const in vec3 v){return max(max(v.x,v.y),v.z);}float average(const in vec3 color){return dot(color,vec3(0.3333));}highp float rand(const in vec2 uv){const highp float a=12.9898,b=78.233,c=43758.5453;highp float dt=dot(uv.xy,vec2(a,b)),sn=mod(dt,PI);return fract(sin(sn)*c);}\n#ifdef HIGH_PRECISION\nfloat precisionSafeLength(vec3 v){return length(v);}\n#else\nfloat precisionSafeLength(vec3 v){float maxComponent=max3(abs(v));return length(v/maxComponent)*maxComponent;}\n#endif\nstruct IncidentLight{vec3 color;vec3 direction;bool visible;};struct ReflectedLight{vec3 directDiffuse;vec3 directSpecular;vec3 indirectDiffuse;vec3 indirectSpecular;};struct GeometricContext{vec3 position;vec3 normal;vec3 viewDir;\n#ifdef USE_CLEARCOAT\nvec3 clearcoatNormal;\n#endif\n};vec3 transformDirection(in vec3 dir,in mat4 matrix){return normalize((matrix*vec4(dir,0.0)).xyz);}vec3 inverseTransformDirection(in vec3 dir,in mat4 matrix){return normalize((vec4(dir,0.0)*matrix).xyz);}mat3 transposeMat3(const in mat3 m){mat3 tmp;tmp[0]=vec3(m[0].x,m[1].x,m[2].x);tmp[1]=vec3(m[0].y,m[1].y,m[2].y);tmp[2]=vec3(m[0].z,m[1].z,m[2].z);return tmp;}float linearToRelativeLuminance(const in vec3 color){vec3 weights=vec3(0.2126,0.7152,0.0722);return dot(weights,color.rgb);}bool isPerspectiveMatrix(mat4 m){return m[2][3]==-1.0;}vec2 equirectUv(in vec3 dir){float u=atan(dir.z,dir.x)*RECIPROCAL_PI2+0.5;float v=asin(clamp(dir.y,-1.0,1.0))*RECIPROCAL_PI+0.5;return vec2(u,v);}",cube_uv_reflection_fragment:"#ifdef ENVMAP_TYPE_CUBE_UV\n#define cubeUV_maxMipLevel 8.0\n#define cubeUV_minMipLevel 4.0\n#define cubeUV_maxTileSize 256.0\n#define cubeUV_minTileSize 16.0\nfloat getFace(vec3 direction){vec3 absDirection=abs(direction);float face=-1.0;if(absDirection.x>absDirection.z){if(absDirection.x>absDirection.y)face=direction.x>0.0?0.0:3.0;else face=direction.y>0.0?1.0:4.0;}else{if(absDirection.z>absDirection.y)face=direction.z>0.0?2.0:5.0;else face=direction.y>0.0?1.0:4.0;}return face;}vec2 getUV(vec3 direction,float face){vec2 uv;if(face==0.0){uv=vec2(direction.z,direction.y)/abs(direction.x);}else if(face==1.0){uv=vec2(-direction.x,-direction.z)/abs(direction.y);}else if(face==2.0){uv=vec2(-direction.x,direction.y)/abs(direction.z);}else if(face==3.0){uv=vec2(-direction.z,direction.y)/abs(direction.x);}else if(face==4.0){uv=vec2(-direction.x,direction.z)/abs(direction.y);}else{uv=vec2(direction.x,direction.y)/abs(direction.z);}return 0.5*(uv+1.0);}vec3 bilinearCubeUV(sampler2D envMap,vec3 direction,float mipInt){float face=getFace(direction);float filterInt=max(cubeUV_minMipLevel-mipInt,0.0);mipInt=max(mipInt,cubeUV_minMipLevel);float faceSize=exp2(mipInt);float texelSize=1.0/(3.0*cubeUV_maxTileSize);vec2 uv=getUV(direction,face)*(faceSize-1.0)+0.5;if(face>2.0){uv.y+=faceSize;face-=3.0;}uv.x+=face*faceSize;if(mipInt<cubeUV_maxMipLevel){uv.y+=2.0*cubeUV_maxTileSize;}uv.y+=filterInt*2.0*cubeUV_minTileSize;uv.x+=3.0*max(0.0,cubeUV_maxTileSize-2.0*faceSize);uv*=texelSize;return texture2D(envMap,uv).rgb;}\n#define r0 1.0\n#define v0 0.339\n#define m0-2.0\n#define r1 0.8\n#define v1 0.276\n#define m1-1.0\n#define r4 0.4\n#define v4 0.046\n#define m4 2.0\n#define r5 0.305\n#define v5 0.016\n#define m5 3.0\n#define r6 0.21\n#define v6 0.0038\n#define m6 4.0\nfloat roughnessToMip(float roughness){float mip=0.0;if(roughness>=r1){mip=(r0-roughness)*(m1-m0)/(r0-r1)+m0;}else if(roughness>=r4){mip=(r1-roughness)*(m4-m1)/(r1-r4)+m1;}else if(roughness>=r5){mip=(r4-roughness)*(m5-m4)/(r4-r5)+m4;}else if(roughness>=r6){mip=(r5-roughness)*(m6-m5)/(r5-r6)+m5;}else{mip=-2.0*log2(1.16*roughness);}return mip;}vec4 textureCubeUV(sampler2D envMap,vec3 sampleDir,float roughness){float mip=clamp(roughnessToMip(roughness),m0,cubeUV_maxMipLevel);float mipF=fract(mip);float mipInt=floor(mip);vec3 color0=bilinearCubeUV(envMap,sampleDir,mipInt);if(mipF==0.0){return vec4(color0,1.0);}else{vec3 color1=bilinearCubeUV(envMap,sampleDir,mipInt+1.0);return vec4(mix(color0,color1,mipF),1.0);}}\n#endif",defaultnormal_vertex:"vec3 transformedNormal=objectNormal;\n#ifdef USE_INSTANCING\nmat3 m=mat3(instanceMatrix);transformedNormal/=vec3(dot(m[0],m[0]),dot(m[1],m[1]),dot(m[2],m[2]));transformedNormal=m*transformedNormal;\n#endif\ntransformedNormal=normalMatrix*transformedNormal;\n#ifdef FLIP_SIDED\ntransformedNormal=-transformedNormal;\n#endif\n#ifdef USE_TANGENT\nvec3 transformedTangent=(modelViewMatrix*vec4(objectTangent,0.0)).xyz;\n#ifdef FLIP_SIDED\ntransformedTangent=-transformedTangent;\n#endif\n#endif",displacementmap_pars_vertex:"#ifdef USE_DISPLACEMENTMAP\nuniform sampler2D displacementMap;uniform float displacementScale;uniform float displacementBias;\n#endif",displacementmap_vertex:"#ifdef USE_DISPLACEMENTMAP\ntransformed+=normalize(objectNormal)*(texture2D(displacementMap,vUv).x*displacementScale+displacementBias);\n#endif",emissivemap_fragment:"#ifdef USE_EMISSIVEMAP\nvec4 emissiveColor=texture2D(emissiveMap,vUv);emissiveColor.rgb=emissiveMapTexelToLinear(emissiveColor).rgb;totalEmissiveRadiance*=emissiveColor.rgb;\n#endif",emissivemap_pars_fragment:"#ifdef USE_EMISSIVEMAP\nuniform sampler2D emissiveMap;\n#endif",encodings_fragment:"gl_FragColor=linearToOutputTexel(gl_FragColor);",encodings_pars_fragment:"vec4 LinearToLinear(in vec4 value){return value;}vec4 sRGBToLinear(in vec4 value){return vec4(mix(pow(value.rgb*0.9478672986+vec3(0.0521327014),vec3(2.4)),value.rgb*0.0773993808,vec3(lessThanEqual(value.rgb,vec3(0.04045)))),value.a);}vec4 LinearTosRGB(in vec4 value){return vec4(mix(pow(value.rgb,vec3(0.41666))*1.055-vec3(0.055),value.rgb*12.92,vec3(lessThanEqual(value.rgb,vec3(0.0031308)))),value.a);}",envmap_fragment:"#ifdef USE_ENVMAP\n#ifdef ENV_WORLDPOS\nvec3 cameraToFrag;if(isOrthographic){cameraToFrag=normalize(vec3(-viewMatrix[0][2],-viewMatrix[1][2],-viewMatrix[2][2]));}else{cameraToFrag=normalize(vWorldPosition-cameraPosition);}vec3 worldNormal=inverseTransformDirection(normal,viewMatrix);\n#ifdef ENVMAP_MODE_REFLECTION\nvec3 reflectVec=reflect(cameraToFrag,worldNormal);\n#else\nvec3 reflectVec=refract(cameraToFrag,worldNormal,refractionRatio);\n#endif\n#else\nvec3 reflectVec=vReflect;\n#endif\n#ifdef ENVMAP_TYPE_CUBE\nvec4 envColor=textureCube(envMap,vec3(flipEnvMap*reflectVec.x,reflectVec.yz));envColor=envMapTexelToLinear(envColor);\n#elif defined(ENVMAP_TYPE_CUBE_UV)\nvec4 envColor=textureCubeUV(envMap,reflectVec,0.0);\n#else\nvec4 envColor=vec4(0.0);\n#endif\n#ifdef ENVMAP_BLENDING_MULTIPLY\noutgoingLight=mix(outgoingLight,outgoingLight*envColor.xyz,specularStrength*reflectivity);\n#elif defined(ENVMAP_BLENDING_MIX)\noutgoingLight=mix(outgoingLight,envColor.xyz,specularStrength*reflectivity);\n#elif defined(ENVMAP_BLENDING_ADD)\noutgoingLight+=envColor.xyz*specularStrength*reflectivity;\n#endif\n#endif",envmap_common_pars_fragment:"#ifdef USE_ENVMAP\nuniform float envMapIntensity;uniform float flipEnvMap;\n#ifdef ENVMAP_TYPE_CUBE\nuniform samplerCube envMap;\n#else\nuniform sampler2D envMap;\n#endif\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\nuniform float reflectivity;\n#if defined(USE_BUMPMAP)||defined(USE_NORMALMAP)||defined(PHONG)\n#define ENV_WORLDPOS\n#endif\n#ifdef ENV_WORLDPOS\nvarying vec3 vWorldPosition;uniform float refractionRatio;\n#else\nvarying vec3 vReflect;\n#endif\n#endif",envmap_pars_vertex:"#ifdef USE_ENVMAP\n#if defined(USE_BUMPMAP)||defined(USE_NORMALMAP)||defined(PHONG)\n#define ENV_WORLDPOS\n#endif\n#ifdef ENV_WORLDPOS\nvarying vec3 vWorldPosition;\n#else\nvarying vec3 vReflect;uniform float refractionRatio;\n#endif\n#endif",envmap_physical_pars_fragment:"#if defined(USE_ENVMAP)\n#ifdef ENVMAP_MODE_REFRACTION\nuniform float refractionRatio;\n#endif\nvec3 getIBLIrradiance(const in vec3 normal){\n#if defined(ENVMAP_TYPE_CUBE_UV)\nvec3 worldNormal=inverseTransformDirection(normal,viewMatrix);vec4 envMapColor=textureCubeUV(envMap,worldNormal,1.0);return PI*envMapColor.rgb*envMapIntensity;\n#else\nreturn vec3(0.0);\n#endif\n}vec3 getIBLRadiance(const in vec3 viewDir,const in vec3 normal,const in float roughness){\n#if defined(ENVMAP_TYPE_CUBE_UV)\nvec3 reflectVec;\n#ifdef ENVMAP_MODE_REFLECTION\nreflectVec=reflect(-viewDir,normal);reflectVec=normalize(mix(reflectVec,normal,roughness*roughness));\n#else\nreflectVec=refract(-viewDir,normal,refractionRatio);\n#endif\nreflectVec=inverseTransformDirection(reflectVec,viewMatrix);vec4 envMapColor=textureCubeUV(envMap,reflectVec,roughness);return envMapColor.rgb*envMapIntensity;\n#else\nreturn vec3(0.0);\n#endif\n}\n#endif",envmap_vertex:"#ifdef USE_ENVMAP\n#ifdef ENV_WORLDPOS\nvWorldPosition=worldPosition.xyz;\n#else\nvec3 cameraToVertex;if(isOrthographic){cameraToVertex=normalize(vec3(-viewMatrix[0][2],-viewMatrix[1][2],-viewMatrix[2][2]));}else{cameraToVertex=normalize(worldPosition.xyz-cameraPosition);}vec3 worldNormal=inverseTransformDirection(transformedNormal,viewMatrix);\n#ifdef ENVMAP_MODE_REFLECTION\nvReflect=reflect(cameraToVertex,worldNormal);\n#else\nvReflect=refract(cameraToVertex,worldNormal,refractionRatio);\n#endif\n#endif\n#endif",fog_vertex:"#ifdef USE_FOG\nvFogDepth=-mvPosition.z;\n#endif",fog_pars_vertex:"#ifdef USE_FOG\nvarying float vFogDepth;\n#endif",fog_fragment:"#ifdef USE_FOG\n#ifdef FOG_EXP2\nfloat fogFactor=1.0-exp(-fogDensity*fogDensity*vFogDepth*vFogDepth);\n#else\nfloat fogFactor=smoothstep(fogNear,fogFar,vFogDepth);\n#endif\ngl_FragColor.rgb=mix(gl_FragColor.rgb,fogColor,fogFactor);\n#endif",fog_pars_fragment:"#ifdef USE_FOG\nuniform vec3 fogColor;varying float vFogDepth;\n#ifdef FOG_EXP2\nuniform float fogDensity;\n#else\nuniform float fogNear;uniform float fogFar;\n#endif\n#endif",gradientmap_pars_fragment:"#ifdef USE_GRADIENTMAP\nuniform sampler2D gradientMap;\n#endif\nvec3 getGradientIrradiance(vec3 normal,vec3 lightDirection){float dotNL=dot(normal,lightDirection);vec2 coord=vec2(dotNL*0.5+0.5,0.0);\n#ifdef USE_GRADIENTMAP\nreturn vec3(texture2D(gradientMap,coord).r);\n#else\nreturn(coord.x<0.7)?vec3(0.7):vec3(1.0);\n#endif\n}",lightmap_fragment:"#ifdef USE_LIGHTMAP\nvec4 lightMapTexel=texture2D(lightMap,vUv2);vec3 lightMapIrradiance=lightMapTexelToLinear(lightMapTexel).rgb*lightMapIntensity;\n#ifndef PHYSICALLY_CORRECT_LIGHTS\nlightMapIrradiance*=PI;\n#endif\nreflectedLight.indirectDiffuse+=lightMapIrradiance;\n#endif",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\nuniform sampler2D lightMap;uniform float lightMapIntensity;\n#endif",lights_lambert_vertex:"vec3 diffuse=vec3(1.0);GeometricContext geometry;geometry.position=mvPosition.xyz;geometry.normal=normalize(transformedNormal);geometry.viewDir=(isOrthographic)?vec3(0,0,1):normalize(-mvPosition.xyz);GeometricContext backGeometry;backGeometry.position=geometry.position;backGeometry.normal=-geometry.normal;backGeometry.viewDir=geometry.viewDir;vLightFront=vec3(0.0);vIndirectFront=vec3(0.0);\n#ifdef DOUBLE_SIDED\nvLightBack=vec3(0.0);vIndirectBack=vec3(0.0);\n#endif\nIncidentLight directLight;float dotNL;vec3 directLightColor_Diffuse;vIndirectFront+=getAmbientLightIrradiance(ambientLightColor);vIndirectFront+=getLightProbeIrradiance(lightProbe,geometry.normal);\n#ifdef DOUBLE_SIDED\nvIndirectBack+=getAmbientLightIrradiance(ambientLightColor);vIndirectBack+=getLightProbeIrradiance(lightProbe,backGeometry.normal);\n#endif\n#if NUM_POINT_LIGHTS>0\n#pragma unroll_loop_start\nfor(int i=0;i<NUM_POINT_LIGHTS;i++){getPointLightInfo(pointLights[i],geometry,directLight);dotNL=dot(geometry.normal,directLight.direction);directLightColor_Diffuse=directLight.color;vLightFront+=saturate(dotNL)*directLightColor_Diffuse;\n#ifdef DOUBLE_SIDED\nvLightBack+=saturate(-dotNL)*directLightColor_Diffuse;\n#endif\n}\n#pragma unroll_loop_end\n#endif\n#if NUM_SPOT_LIGHTS>0\n#pragma unroll_loop_start\nfor(int i=0;i<NUM_SPOT_LIGHTS;i++){getSpotLightInfo(spotLights[i],geometry,directLight);dotNL=dot(geometry.normal,directLight.direction);directLightColor_Diffuse=directLight.color;vLightFront+=saturate(dotNL)*directLightColor_Diffuse;\n#ifdef DOUBLE_SIDED\nvLightBack+=saturate(-dotNL)*directLightColor_Diffuse;\n#endif\n}\n#pragma unroll_loop_end\n#endif\n#if NUM_DIR_LIGHTS>0\n#pragma unroll_loop_start\nfor(int i=0;i<NUM_DIR_LIGHTS;i++){getDirectionalLightInfo(directionalLights[i],geometry,directLight);dotNL=dot(geometry.normal,directLight.direction);directLightColor_Diffuse=directLight.color;vLightFront+=saturate(dotNL)*directLightColor_Diffuse;\n#ifdef DOUBLE_SIDED\nvLightBack+=saturate(-dotNL)*directLightColor_Diffuse;\n#endif\n}\n#pragma unroll_loop_end\n#endif\n#if NUM_HEMI_LIGHTS>0\n#pragma unroll_loop_start\nfor(int i=0;i<NUM_HEMI_LIGHTS;i++){vIndirectFront+=getHemisphereLightIrradiance(hemisphereLights[i],geometry.normal);\n#ifdef DOUBLE_SIDED\nvIndirectBack+=getHemisphereLightIrradiance(hemisphereLights[i],backGeometry.normal);\n#endif\n}\n#pragma unroll_loop_end\n#endif",lights_pars_begin:"uniform bool receiveShadow;uniform vec3 ambientLightColor;uniform vec3 lightProbe[9];vec3 shGetIrradianceAt(in vec3 normal,in vec3 shCoefficients[9]){float x=normal.x,y=normal.y,z=normal.z;vec3 result=shCoefficients[0]*0.886227;result+=shCoefficients[1]*2.0*0.511664*y;result+=shCoefficients[2]*2.0*0.511664*z;result+=shCoefficients[3]*2.0*0.511664*x;result+=shCoefficients[4]*2.0*0.429043*x*y;result+=shCoefficients[5]*2.0*0.429043*y*z;result+=shCoefficients[6]*(0.743125*z*z-0.247708);result+=shCoefficients[7]*2.0*0.429043*x*z;result+=shCoefficients[8]*0.429043*(x*x-y*y);return result;}vec3 getLightProbeIrradiance(const in vec3 lightProbe[9],const in vec3 normal){vec3 worldNormal=inverseTransformDirection(normal,viewMatrix);vec3 irradiance=shGetIrradianceAt(worldNormal,lightProbe);return irradiance;}vec3 getAmbientLightIrradiance(const in vec3 ambientLightColor){vec3 irradiance=ambientLightColor;return irradiance;}float getDistanceAttenuation(const in float lightDistance,const in float cutoffDistance,const in float decayExponent){\n#if defined(PHYSICALLY_CORRECT_LIGHTS)\nfloat distanceFalloff=1.0/max(pow(lightDistance,decayExponent),0.01);if(cutoffDistance>0.0){distanceFalloff*=pow2(saturate(1.0-pow4(lightDistance/cutoffDistance)));}return distanceFalloff;\n#else\nif(cutoffDistance>0.0&&decayExponent>0.0){return pow(saturate(-lightDistance/cutoffDistance+1.0),decayExponent);}return 1.0;\n#endif\n}float getSpotAttenuation(const in float coneCosine,const in float penumbraCosine,const in float angleCosine){return smoothstep(coneCosine,penumbraCosine,angleCosine);}\n#if NUM_DIR_LIGHTS>0\nstruct DirectionalLight{vec3 direction;vec3 color;};uniform DirectionalLight directionalLights[NUM_DIR_LIGHTS];void getDirectionalLightInfo(const in DirectionalLight directionalLight,const in GeometricContext geometry,out IncidentLight light){light.color=directionalLight.color;light.direction=directionalLight.direction;light.visible=true;}\n#endif\n#if NUM_POINT_LIGHTS>0\nstruct PointLight{vec3 position;vec3 color;float distance;float decay;};uniform PointLight pointLights[NUM_POINT_LIGHTS];void getPointLightInfo(const in PointLight pointLight,const in GeometricContext geometry,out IncidentLight light){vec3 lVector=pointLight.position-geometry.position;light.direction=normalize(lVector);float lightDistance=length(lVector);light.color=pointLight.color;light.color*=getDistanceAttenuation(lightDistance,pointLight.distance,pointLight.decay);light.visible=(light.color!=vec3(0.0));}\n#endif\n#if NUM_SPOT_LIGHTS>0\nstruct SpotLight{vec3 position;vec3 direction;vec3 color;float distance;float decay;float coneCos;float penumbraCos;};uniform SpotLight spotLights[NUM_SPOT_LIGHTS];void getSpotLightInfo(const in SpotLight spotLight,const in GeometricContext geometry,out IncidentLight light){vec3 lVector=spotLight.position-geometry.position;light.direction=normalize(lVector);float angleCos=dot(light.direction,spotLight.direction);float spotAttenuation=getSpotAttenuation(spotLight.coneCos,spotLight.penumbraCos,angleCos);if(spotAttenuation>0.0){float lightDistance=length(lVector);light.color=spotLight.color*spotAttenuation;light.color*=getDistanceAttenuation(lightDistance,spotLight.distance,spotLight.decay);light.visible=(light.color!=vec3(0.0));}else{light.color=vec3(0.0);light.visible=false;}}\n#endif\n#if NUM_RECT_AREA_LIGHTS>0\nstruct RectAreaLight{vec3 color;vec3 position;vec3 halfWidth;vec3 halfHeight;};uniform sampler2D ltc_1;uniform sampler2D ltc_2;uniform RectAreaLight rectAreaLights[NUM_RECT_AREA_LIGHTS];\n#endif\n#if NUM_HEMI_LIGHTS>0\nstruct HemisphereLight{vec3 direction;vec3 skyColor;vec3 groundColor;};uniform HemisphereLight hemisphereLights[NUM_HEMI_LIGHTS];vec3 getHemisphereLightIrradiance(const in HemisphereLight hemiLight,const in vec3 normal){float dotNL=dot(normal,hemiLight.direction);float hemiDiffuseWeight=0.5*dotNL+0.5;vec3 irradiance=mix(hemiLight.groundColor,hemiLight.skyColor,hemiDiffuseWeight);return irradiance;}\n#endif",lights_toon_fragment:"ToonMaterial material;material.diffuseColor=diffuseColor.rgb;",lights_toon_pars_fragment:"varying vec3 vViewPosition;struct ToonMaterial{vec3 diffuseColor;};void RE_Direct_Toon(const in IncidentLight directLight,const in GeometricContext geometry,const in ToonMaterial material,inout ReflectedLight reflectedLight){vec3 irradiance=getGradientIrradiance(geometry.normal,directLight.direction)*directLight.color;reflectedLight.directDiffuse+=irradiance*BRDF_Lambert(material.diffuseColor);}void RE_IndirectDiffuse_Toon(const in vec3 irradiance,const in GeometricContext geometry,const in ToonMaterial material,inout ReflectedLight reflectedLight){reflectedLight.indirectDiffuse+=irradiance*BRDF_Lambert(material.diffuseColor);}\n#define RE_Direct RE_Direct_Toon\n#define RE_IndirectDiffuse RE_IndirectDiffuse_Toon\n#define Material_LightProbeLOD(material)(0)",lights_phong_fragment:"BlinnPhongMaterial material;material.diffuseColor=diffuseColor.rgb;material.specularColor=specular;material.specularShininess=shininess;material.specularStrength=specularStrength;",lights_phong_pars_fragment:"varying vec3 vViewPosition;struct BlinnPhongMaterial{vec3 diffuseColor;vec3 specularColor;float specularShininess;float specularStrength;};void RE_Direct_BlinnPhong(const in IncidentLight directLight,const in GeometricContext geometry,const in BlinnPhongMaterial material,inout ReflectedLight reflectedLight){float dotNL=saturate(dot(geometry.normal,directLight.direction));vec3 irradiance=dotNL*directLight.color;reflectedLight.directDiffuse+=irradiance*BRDF_Lambert(material.diffuseColor);reflectedLight.directSpecular+=irradiance*BRDF_BlinnPhong(directLight.direction,geometry.viewDir,geometry.normal,material.specularColor,material.specularShininess)*material.specularStrength;}void RE_IndirectDiffuse_BlinnPhong(const in vec3 irradiance,const in GeometricContext geometry,const in BlinnPhongMaterial material,inout ReflectedLight reflectedLight){reflectedLight.indirectDiffuse+=irradiance*BRDF_Lambert(material.diffuseColor);}\n#define RE_Direct RE_Direct_BlinnPhong\n#define RE_IndirectDiffuse RE_IndirectDiffuse_BlinnPhong\n#define Material_LightProbeLOD(material)(0)",lights_physical_fragment:"PhysicalMaterial material;material.diffuseColor=diffuseColor.rgb*(1.0-metalnessFactor);vec3 dxy=max(abs(dFdx(geometryNormal)),abs(dFdy(geometryNormal)));float geometryRoughness=max(max(dxy.x,dxy.y),dxy.z);material.roughness=max(roughnessFactor,0.0525);material.roughness+=geometryRoughness;material.roughness=min(material.roughness,1.0);\n#ifdef IOR\n#ifdef SPECULAR\nfloat specularIntensityFactor=specularIntensity;vec3 specularColorFactor=specularColor;\n#ifdef USE_SPECULARINTENSITYMAP\nspecularIntensityFactor*=texture2D(specularIntensityMap,vUv).a;\n#endif\n#ifdef USE_SPECULARCOLORMAP\nspecularColorFactor*=specularColorMapTexelToLinear(texture2D(specularColorMap,vUv)).rgb;\n#endif\nmaterial.specularF90=mix(specularIntensityFactor,1.0,metalnessFactor);\n#else\nfloat specularIntensityFactor=1.0;vec3 specularColorFactor=vec3(1.0);material.specularF90=1.0;\n#endif\nmaterial.specularColor=mix(min(pow2((ior-1.0)/(ior+1.0))*specularColorFactor,vec3(1.0))*specularIntensityFactor,diffuseColor.rgb,metalnessFactor);\n#else\nmaterial.specularColor=mix(vec3(0.04),diffuseColor.rgb,metalnessFactor);material.specularF90=1.0;\n#endif\n#ifdef USE_CLEARCOAT\nmaterial.clearcoat=clearcoat;material.clearcoatRoughness=clearcoatRoughness;material.clearcoatF0=vec3(0.04);material.clearcoatF90=1.0;\n#ifdef USE_CLEARCOATMAP\nmaterial.clearcoat*=texture2D(clearcoatMap,vUv).x;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\nmaterial.clearcoatRoughness*=texture2D(clearcoatRoughnessMap,vUv).y;\n#endif\nmaterial.clearcoat=saturate(material.clearcoat);material.clearcoatRoughness=max(material.clearcoatRoughness,0.0525);material.clearcoatRoughness+=geometryRoughness;material.clearcoatRoughness=min(material.clearcoatRoughness,1.0);\n#endif\n#ifdef USE_SHEEN\nmaterial.sheenColor=sheenColor;\n#ifdef USE_SHEENCOLORMAP\nmaterial.sheenColor*=sheenColorMapTexelToLinear(texture2D(sheenColorMap,vUv)).rgb;\n#endif\nmaterial.sheenRoughness=clamp(sheenRoughness,0.07,1.0);\n#ifdef USE_SHEENROUGHNESSMAP\nmaterial.sheenRoughness*=texture2D(sheenRoughnessMap,vUv).a;\n#endif\n#endif",lights_physical_pars_fragment:"struct PhysicalMaterial{vec3 diffuseColor;float roughness;vec3 specularColor;float specularF90;\n#ifdef USE_CLEARCOAT\nfloat clearcoat;float clearcoatRoughness;vec3 clearcoatF0;float clearcoatF90;\n#endif\n#ifdef USE_SHEEN\nvec3 sheenColor;float sheenRoughness;\n#endif\n};vec3 clearcoatSpecular=vec3(0.0);vec3 sheenSpecular=vec3(0.0);float IBLSheenBRDF(const in vec3 normal,const in vec3 viewDir,const in float roughness){float dotNV=saturate(dot(normal,viewDir));float r2=roughness*roughness;float a=roughness<0.25?-339.2*r2+161.4*roughness-25.9:-8.48*r2+14.3*roughness-9.95;float b=roughness<0.25?44.0*r2-23.7*roughness+3.26:1.97*r2-3.27*roughness+0.72;float DG=exp(a*dotNV+b)+(roughness<0.25?0.0:0.1*(roughness-0.25));return saturate(DG*RECIPROCAL_PI);}vec2 DFGApprox(const in vec3 normal,const in vec3 viewDir,const in float roughness){float dotNV=saturate(dot(normal,viewDir));const vec4 c0=vec4(-1,-0.0275,-0.572,0.022);const vec4 c1=vec4(1,0.0425,1.04,-0.04);vec4 r=roughness*c0+c1;float a004=min(r.x*r.x,exp2(-9.28*dotNV))*r.x+r.y;vec2 fab=vec2(-1.04,1.04)*a004+r.zw;return fab;}vec3 EnvironmentBRDF(const in vec3 normal,const in vec3 viewDir,const in vec3 specularColor,const in float specularF90,const in float roughness){vec2 fab=DFGApprox(normal,viewDir,roughness);return specularColor*fab.x+specularF90*fab.y;}void computeMultiscattering(const in vec3 normal,const in vec3 viewDir,const in vec3 specularColor,const in float specularF90,const in float roughness,inout vec3 singleScatter,inout vec3 multiScatter){vec2 fab=DFGApprox(normal,viewDir,roughness);vec3 FssEss=specularColor*fab.x+specularF90*fab.y;float Ess=fab.x+fab.y;float Ems=1.0-Ess;vec3 Favg=specularColor+(1.0-specularColor)*0.047619;vec3 Fms=FssEss*Favg/(1.0-Ems*Favg);singleScatter+=FssEss;multiScatter+=Fms*Ems;}\n#if NUM_RECT_AREA_LIGHTS>0\nvoid RE_Direct_RectArea_Physical(const in RectAreaLight rectAreaLight,const in GeometricContext geometry,const in PhysicalMaterial material,inout ReflectedLight reflectedLight){vec3 normal=geometry.normal;vec3 viewDir=geometry.viewDir;vec3 position=geometry.position;vec3 lightPos=rectAreaLight.position;vec3 halfWidth=rectAreaLight.halfWidth;vec3 halfHeight=rectAreaLight.halfHeight;vec3 lightColor=rectAreaLight.color;float roughness=material.roughness;vec3 rectCoords[4];rectCoords[0]=lightPos+halfWidth-halfHeight;rectCoords[1]=lightPos-halfWidth-halfHeight;rectCoords[2]=lightPos-halfWidth+halfHeight;rectCoords[3]=lightPos+halfWidth+halfHeight;vec2 uv=LTC_Uv(normal,viewDir,roughness);vec4 t1=texture2D(ltc_1,uv);vec4 t2=texture2D(ltc_2,uv);mat3 mInv=mat3(vec3(t1.x,0,t1.y),vec3(0,1,0),vec3(t1.z,0,t1.w));vec3 fresnel=(material.specularColor*t2.x+(vec3(1.0)-material.specularColor)*t2.y);reflectedLight.directSpecular+=lightColor*fresnel*LTC_Evaluate(normal,viewDir,position,mInv,rectCoords);reflectedLight.directDiffuse+=lightColor*material.diffuseColor*LTC_Evaluate(normal,viewDir,position,mat3(1.0),rectCoords);}\n#endif\nvoid RE_Direct_Physical(const in IncidentLight directLight,const in GeometricContext geometry,const in PhysicalMaterial material,inout ReflectedLight reflectedLight){float dotNL=saturate(dot(geometry.normal,directLight.direction));vec3 irradiance=dotNL*directLight.color;\n#ifdef USE_CLEARCOAT\nfloat dotNLcc=saturate(dot(geometry.clearcoatNormal,directLight.direction));vec3 ccIrradiance=dotNLcc*directLight.color;clearcoatSpecular+=ccIrradiance*BRDF_GGX(directLight.direction,geometry.viewDir,geometry.clearcoatNormal,material.clearcoatF0,material.clearcoatF90,material.clearcoatRoughness);\n#endif\n#ifdef USE_SHEEN\nsheenSpecular+=irradiance*BRDF_Sheen(directLight.direction,geometry.viewDir,geometry.normal,material.sheenColor,material.sheenRoughness);\n#endif\nreflectedLight.directSpecular+=irradiance*BRDF_GGX(directLight.direction,geometry.viewDir,geometry.normal,material.specularColor,material.specularF90,material.roughness);reflectedLight.directDiffuse+=irradiance*BRDF_Lambert(material.diffuseColor);}void RE_IndirectDiffuse_Physical(const in vec3 irradiance,const in GeometricContext geometry,const in PhysicalMaterial material,inout ReflectedLight reflectedLight){reflectedLight.indirectDiffuse+=irradiance*BRDF_Lambert(material.diffuseColor);}void RE_IndirectSpecular_Physical(const in vec3 radiance,const in vec3 irradiance,const in vec3 clearcoatRadiance,const in GeometricContext geometry,const in PhysicalMaterial material,inout ReflectedLight reflectedLight){\n#ifdef USE_CLEARCOAT\nclearcoatSpecular+=clearcoatRadiance*EnvironmentBRDF(geometry.clearcoatNormal,geometry.viewDir,material.clearcoatF0,material.clearcoatF90,material.clearcoatRoughness);\n#endif\n#ifdef USE_SHEEN\nsheenSpecular+=irradiance*material.sheenColor*IBLSheenBRDF(geometry.normal,geometry.viewDir,material.sheenRoughness);\n#endif\nvec3 singleScattering=vec3(0.0);vec3 multiScattering=vec3(0.0);vec3 cosineWeightedIrradiance=irradiance*RECIPROCAL_PI;computeMultiscattering(geometry.normal,geometry.viewDir,material.specularColor,material.specularF90,material.roughness,singleScattering,multiScattering);vec3 diffuse=material.diffuseColor*(1.0-(singleScattering+multiScattering));reflectedLight.indirectSpecular+=radiance*singleScattering;reflectedLight.indirectSpecular+=multiScattering*cosineWeightedIrradiance;reflectedLight.indirectDiffuse+=diffuse*cosineWeightedIrradiance;}\n#define RE_Direct RE_Direct_Physical\n#define RE_Direct_RectArea RE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse RE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular RE_IndirectSpecular_Physical\nfloat computeSpecularOcclusion(const in float dotNV,const in float ambientOcclusion,const in float roughness){return saturate(pow(dotNV+ambientOcclusion,exp2(-16.0*roughness-1.0))-1.0+ambientOcclusion);}",lights_fragment_begin:"GeometricContext geometry;geometry.position=-vViewPosition;geometry.normal=normal;geometry.viewDir=(isOrthographic)?vec3(0,0,1):normalize(vViewPosition);\n#ifdef USE_CLEARCOAT\ngeometry.clearcoatNormal=clearcoatNormal;\n#endif\nIncidentLight directLight;\n#if (NUM_POINT_LIGHTS>0)&&defined(RE_Direct)\nPointLight pointLight;\n#if defined(USE_SHADOWMAP)&&NUM_POINT_LIGHT_SHADOWS>0\nPointLightShadow pointLightShadow;\n#endif\n#pragma unroll_loop_start\nfor(int i=0;i<NUM_POINT_LIGHTS;i++){pointLight=pointLights[i];getPointLightInfo(pointLight,geometry,directLight);\n#if defined(USE_SHADOWMAP)&&(UNROLLED_LOOP_INDEX<NUM_POINT_LIGHT_SHADOWS)\npointLightShadow=pointLightShadows[i];directLight.color*=all(bvec2(directLight.visible,receiveShadow))?getPointShadow(pointShadowMap[i],pointLightShadow.shadowMapSize,pointLightShadow.shadowBias,pointLightShadow.shadowRadius,vPointShadowCoord[i],pointLightShadow.shadowCameraNear,pointLightShadow.shadowCameraFar):1.0;\n#endif\nRE_Direct(directLight,geometry,material,reflectedLight);}\n#pragma unroll_loop_end\n#endif\n#if (NUM_SPOT_LIGHTS>0)&&defined(RE_Direct)\nSpotLight spotLight;\n#if defined(USE_SHADOWMAP)&&NUM_SPOT_LIGHT_SHADOWS>0\nSpotLightShadow spotLightShadow;\n#endif\n#pragma unroll_loop_start\nfor(int i=0;i<NUM_SPOT_LIGHTS;i++){spotLight=spotLights[i];getSpotLightInfo(spotLight,geometry,directLight);\n#if defined(USE_SHADOWMAP)&&(UNROLLED_LOOP_INDEX<NUM_SPOT_LIGHT_SHADOWS)\nspotLightShadow=spotLightShadows[i];directLight.color*=all(bvec2(directLight.visible,receiveShadow))?getShadow(spotShadowMap[i],spotLightShadow.shadowMapSize,spotLightShadow.shadowBias,spotLightShadow.shadowRadius,vSpotShadowCoord[i]):1.0;\n#endif\nRE_Direct(directLight,geometry,material,reflectedLight);}\n#pragma unroll_loop_end\n#endif\n#if (NUM_DIR_LIGHTS>0)&&defined(RE_Direct)\nDirectionalLight directionalLight;\n#if defined(USE_SHADOWMAP)&&NUM_DIR_LIGHT_SHADOWS>0\nDirectionalLightShadow directionalLightShadow;\n#endif\n#pragma unroll_loop_start\nfor(int i=0;i<NUM_DIR_LIGHTS;i++){directionalLight=directionalLights[i];getDirectionalLightInfo(directionalLight,geometry,directLight);\n#if defined(USE_SHADOWMAP)&&(UNROLLED_LOOP_INDEX<NUM_DIR_LIGHT_SHADOWS)\ndirectionalLightShadow=directionalLightShadows[i];directLight.color*=all(bvec2(directLight.visible,receiveShadow))?getShadow(directionalShadowMap[i],directionalLightShadow.shadowMapSize,directionalLightShadow.shadowBias,directionalLightShadow.shadowRadius,vDirectionalShadowCoord[i]):1.0;\n#endif\nRE_Direct(directLight,geometry,material,reflectedLight);}\n#pragma unroll_loop_end\n#endif\n#if (NUM_RECT_AREA_LIGHTS>0)&&defined(RE_Direct_RectArea)\nRectAreaLight rectAreaLight;\n#pragma unroll_loop_start\nfor(int i=0;i<NUM_RECT_AREA_LIGHTS;i++){rectAreaLight=rectAreaLights[i];RE_Direct_RectArea(rectAreaLight,geometry,material,reflectedLight);}\n#pragma unroll_loop_end\n#endif\n#if defined(RE_IndirectDiffuse)\nvec3 iblIrradiance=vec3(0.0);vec3 irradiance=getAmbientLightIrradiance(ambientLightColor);irradiance+=getLightProbeIrradiance(lightProbe,geometry.normal);\n#if (NUM_HEMI_LIGHTS>0)\n#pragma unroll_loop_start\nfor(int i=0;i<NUM_HEMI_LIGHTS;i++){irradiance+=getHemisphereLightIrradiance(hemisphereLights[i],geometry.normal);}\n#pragma unroll_loop_end\n#endif\n#endif\n#if defined(RE_IndirectSpecular)\nvec3 radiance=vec3(0.0);vec3 clearcoatRadiance=vec3(0.0);\n#endif",lights_fragment_maps:"#if defined(RE_IndirectDiffuse)\n#ifdef USE_LIGHTMAP\nvec4 lightMapTexel=texture2D(lightMap,vUv2);vec3 lightMapIrradiance=lightMapTexelToLinear(lightMapTexel).rgb*lightMapIntensity;\n#ifndef PHYSICALLY_CORRECT_LIGHTS\nlightMapIrradiance*=PI;\n#endif\nirradiance+=lightMapIrradiance;\n#endif\n#if defined(USE_ENVMAP)&&defined(STANDARD)&&defined(ENVMAP_TYPE_CUBE_UV)\niblIrradiance+=getIBLIrradiance(geometry.normal);\n#endif\n#endif\n#if defined(USE_ENVMAP)&&defined(RE_IndirectSpecular)\nradiance+=getIBLRadiance(geometry.viewDir,geometry.normal,material.roughness);\n#ifdef USE_CLEARCOAT\nclearcoatRadiance+=getIBLRadiance(geometry.viewDir,geometry.clearcoatNormal,material.clearcoatRoughness);\n#endif\n#endif",lights_fragment_end:"#if defined(RE_IndirectDiffuse)\nRE_IndirectDiffuse(irradiance,geometry,material,reflectedLight);\n#endif\n#if defined(RE_IndirectSpecular)\nRE_IndirectSpecular(radiance,iblIrradiance,clearcoatRadiance,geometry,material,reflectedLight);\n#endif",logdepthbuf_fragment:"#if defined(USE_LOGDEPTHBUF)&&defined(USE_LOGDEPTHBUF_EXT)\ngl_FragDepthEXT=vIsPerspective==0.0?gl_FragCoord.z:log2(vFragDepth)*logDepthBufFC*0.5;\n#endif",logdepthbuf_pars_fragment:"#if defined(USE_LOGDEPTHBUF)&&defined(USE_LOGDEPTHBUF_EXT)\nuniform float logDepthBufFC;varying float vFragDepth;varying float vIsPerspective;\n#endif",logdepthbuf_pars_vertex:"#ifdef USE_LOGDEPTHBUF\n#ifdef USE_LOGDEPTHBUF_EXT\nvarying float vFragDepth;varying float vIsPerspective;\n#else\nuniform float logDepthBufFC;\n#endif\n#endif",logdepthbuf_vertex:"#ifdef USE_LOGDEPTHBUF\n#ifdef USE_LOGDEPTHBUF_EXT\nvFragDepth=1.0+gl_Position.w;vIsPerspective=float(isPerspectiveMatrix(projectionMatrix));\n#else\nif(isPerspectiveMatrix(projectionMatrix)){gl_Position.z=log2(max(EPSILON,gl_Position.w+1.0))*logDepthBufFC-1.0;gl_Position.z*=gl_Position.w;}\n#endif\n#endif",map_fragment:"#ifdef USE_MAP\nvec4 texelColor=texture2D(map,vUv);texelColor=mapTexelToLinear(texelColor);diffuseColor*=texelColor;\n#endif",map_pars_fragment:"#ifdef USE_MAP\nuniform sampler2D map;\n#endif",map_particle_fragment:"#if defined(USE_MAP)||defined(USE_ALPHAMAP)\nvec2 uv=(uvTransform*vec3(gl_PointCoord.x,1.0-gl_PointCoord.y,1)).xy;\n#endif\n#ifdef USE_MAP\nvec4 mapTexel=texture2D(map,uv);diffuseColor*=mapTexelToLinear(mapTexel);\n#endif\n#ifdef USE_ALPHAMAP\ndiffuseColor.a*=texture2D(alphaMap,uv).g;\n#endif",map_particle_pars_fragment:"#if defined(USE_MAP)||defined(USE_ALPHAMAP)\nuniform mat3 uvTransform;\n#endif\n#ifdef USE_MAP\nuniform sampler2D map;\n#endif\n#ifdef USE_ALPHAMAP\nuniform sampler2D alphaMap;\n#endif",metalnessmap_fragment:"float metalnessFactor=metalness;\n#ifdef USE_METALNESSMAP\nvec4 texelMetalness=texture2D(metalnessMap,vUv);metalnessFactor*=texelMetalness.b;\n#endif",metalnessmap_pars_fragment:"#ifdef USE_METALNESSMAP\nuniform sampler2D metalnessMap;\n#endif",morphnormal_vertex:"#ifdef USE_MORPHNORMALS\nobjectNormal*=morphTargetBaseInfluence;\n#ifdef MORPHTARGETS_TEXTURE\nfor(int i=0;i<MORPHTARGETS_COUNT;i++){if(morphTargetInfluences[i]>0.0)objectNormal+=getMorph(gl_VertexID,i,1,2)*morphTargetInfluences[i];}\n#else\nobjectNormal+=morphNormal0*morphTargetInfluences[0];objectNormal+=morphNormal1*morphTargetInfluences[1];objectNormal+=morphNormal2*morphTargetInfluences[2];objectNormal+=morphNormal3*morphTargetInfluences[3];\n#endif\n#endif",morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\nuniform float morphTargetBaseInfluence;\n#ifdef MORPHTARGETS_TEXTURE\nuniform float morphTargetInfluences[MORPHTARGETS_COUNT];uniform sampler2DArray morphTargetsTexture;uniform vec2 morphTargetsTextureSize;vec3 getMorph(const in int vertexIndex,const in int morphTargetIndex,const in int offset,const in int stride){float texelIndex=float(vertexIndex*stride+offset);float y=floor(texelIndex/morphTargetsTextureSize.x);float x=texelIndex-y*morphTargetsTextureSize.x;vec3 morphUV=vec3((x+0.5)/morphTargetsTextureSize.x,y/morphTargetsTextureSize.y,morphTargetIndex);return texture(morphTargetsTexture,morphUV).xyz;}\n#else\n#ifndef USE_MORPHNORMALS\nuniform float morphTargetInfluences[8];\n#else\nuniform float morphTargetInfluences[4];\n#endif\n#endif\n#endif",morphtarget_vertex:"#ifdef USE_MORPHTARGETS\ntransformed*=morphTargetBaseInfluence;\n#ifdef MORPHTARGETS_TEXTURE\nfor(int i=0;i<MORPHTARGETS_COUNT;i++){\n#ifndef USE_MORPHNORMALS\nif(morphTargetInfluences[i]>0.0)transformed+=getMorph(gl_VertexID,i,0,1)*morphTargetInfluences[i];\n#else\nif(morphTargetInfluences[i]>0.0)transformed+=getMorph(gl_VertexID,i,0,2)*morphTargetInfluences[i];\n#endif\n}\n#else\ntransformed+=morphTarget0*morphTargetInfluences[0];transformed+=morphTarget1*morphTargetInfluences[1];transformed+=morphTarget2*morphTargetInfluences[2];transformed+=morphTarget3*morphTargetInfluences[3];\n#ifndef USE_MORPHNORMALS\ntransformed+=morphTarget4*morphTargetInfluences[4];transformed+=morphTarget5*morphTargetInfluences[5];transformed+=morphTarget6*morphTargetInfluences[6];transformed+=morphTarget7*morphTargetInfluences[7];\n#endif\n#endif\n#endif",normal_fragment_begin:"float faceDirection=gl_FrontFacing?1.0:-1.0;\n#ifdef FLAT_SHADED\nvec3 fdx=vec3(dFdx(vViewPosition.x),dFdx(vViewPosition.y),dFdx(vViewPosition.z));vec3 fdy=vec3(dFdy(vViewPosition.x),dFdy(vViewPosition.y),dFdy(vViewPosition.z));vec3 normal=normalize(cross(fdx,fdy));\n#else\nvec3 normal=normalize(vNormal);\n#ifdef DOUBLE_SIDED\nnormal=normal*faceDirection;\n#endif\n#ifdef USE_TANGENT\nvec3 tangent=normalize(vTangent);vec3 bitangent=normalize(vBitangent);\n#ifdef DOUBLE_SIDED\ntangent=tangent*faceDirection;bitangent=bitangent*faceDirection;\n#endif\n#if defined(TANGENTSPACE_NORMALMAP)||defined(USE_CLEARCOAT_NORMALMAP)\nmat3 vTBN=mat3(tangent,bitangent,normal);\n#endif\n#endif\n#endif\nvec3 geometryNormal=normal;",normal_fragment_maps:"#ifdef OBJECTSPACE_NORMALMAP\nnormal=texture2D(normalMap,vUv).xyz*2.0-1.0;\n#ifdef FLIP_SIDED\nnormal=-normal;\n#endif\n#ifdef DOUBLE_SIDED\nnormal=normal*faceDirection;\n#endif\nnormal=normalize(normalMatrix*normal);\n#elif defined(TANGENTSPACE_NORMALMAP)\nvec3 mapN=texture2D(normalMap,vUv).xyz*2.0-1.0;mapN.xy*=normalScale;\n#ifdef USE_TANGENT\nnormal=normalize(vTBN*mapN);\n#else\nnormal=perturbNormal2Arb(-vViewPosition,normal,mapN,faceDirection);\n#endif\n#elif defined(USE_BUMPMAP)\nnormal=perturbNormalArb(-vViewPosition,normal,dHdxy_fwd(),faceDirection);\n#endif",normal_pars_fragment:"#ifndef FLAT_SHADED\nvarying vec3 vNormal;\n#ifdef USE_TANGENT\nvarying vec3 vTangent;varying vec3 vBitangent;\n#endif\n#endif",normal_pars_vertex:"#ifndef FLAT_SHADED\nvarying vec3 vNormal;\n#ifdef USE_TANGENT\nvarying vec3 vTangent;varying vec3 vBitangent;\n#endif\n#endif",normal_vertex:"#ifndef FLAT_SHADED\nvNormal=normalize(transformedNormal);\n#ifdef USE_TANGENT\nvTangent=normalize(transformedTangent);vBitangent=normalize(cross(vNormal,vTangent)*tangent.w);\n#endif\n#endif",normalmap_pars_fragment:"#ifdef USE_NORMALMAP\nuniform sampler2D normalMap;uniform vec2 normalScale;\n#endif\n#ifdef OBJECTSPACE_NORMALMAP\nuniform mat3 normalMatrix;\n#endif\n#if !defined(USE_TANGENT)&&(defined(TANGENTSPACE_NORMALMAP)||defined(USE_CLEARCOAT_NORMALMAP))\nvec3 perturbNormal2Arb(vec3 eye_pos,vec3 surf_norm,vec3 mapN,float faceDirection){vec3 q0=vec3(dFdx(eye_pos.x),dFdx(eye_pos.y),dFdx(eye_pos.z));vec3 q1=vec3(dFdy(eye_pos.x),dFdy(eye_pos.y),dFdy(eye_pos.z));vec2 st0=dFdx(vUv.st);vec2 st1=dFdy(vUv.st);vec3 N=surf_norm;vec3 q1perp=cross(q1,N);vec3 q0perp=cross(N,q0);vec3 T=q1perp*st0.x+q0perp*st1.x;vec3 B=q1perp*st0.y+q0perp*st1.y;float det=max(dot(T,T),dot(B,B));float scale=(det==0.0)?0.0:faceDirection*inversesqrt(det);return normalize(T*(mapN.x*scale)+B*(mapN.y*scale)+N*mapN.z);}\n#endif",clearcoat_normal_fragment_begin:"#ifdef USE_CLEARCOAT\nvec3 clearcoatNormal=geometryNormal;\n#endif",clearcoat_normal_fragment_maps:"#ifdef USE_CLEARCOAT_NORMALMAP\nvec3 clearcoatMapN=texture2D(clearcoatNormalMap,vUv).xyz*2.0-1.0;clearcoatMapN.xy*=clearcoatNormalScale;\n#ifdef USE_TANGENT\nclearcoatNormal=normalize(vTBN*clearcoatMapN);\n#else\nclearcoatNormal=perturbNormal2Arb(-vViewPosition,clearcoatNormal,clearcoatMapN,faceDirection);\n#endif\n#endif",clearcoat_pars_fragment:"#ifdef USE_CLEARCOATMAP\nuniform sampler2D clearcoatMap;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\nuniform sampler2D clearcoatRoughnessMap;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\nuniform sampler2D clearcoatNormalMap;uniform vec2 clearcoatNormalScale;\n#endif",output_fragment:"#ifdef OPAQUE\ndiffuseColor.a=1.0;\n#endif\n#ifdef USE_TRANSMISSION\ndiffuseColor.a*=transmissionAlpha+0.1;\n#endif\ngl_FragColor=vec4(outgoingLight,diffuseColor.a);",packing:"vec3 packNormalToRGB(const in vec3 normal){return normalize(normal)*0.5+0.5;}vec3 unpackRGBToNormal(const in vec3 rgb){return 2.0*rgb.xyz-1.0;}const float PackUpscale=256./255.;const float UnpackDownscale=255./256.;const vec3 PackFactors=vec3(256.*256.*256.,256.*256.,256.);const vec4 UnpackFactors=UnpackDownscale/vec4(PackFactors,1.);const float ShiftRight8=1./256.;vec4 packDepthToRGBA(const in float v){vec4 r=vec4(fract(v*PackFactors),v);r.yzw-=r.xyz*ShiftRight8;return r*PackUpscale;}float unpackRGBAToDepth(const in vec4 v){return dot(v,UnpackFactors);}vec4 pack2HalfToRGBA(vec2 v){vec4 r=vec4(v.x,fract(v.x*255.0),v.y,fract(v.y*255.0));return vec4(r.x-r.y/255.0,r.y,r.z-r.w/255.0,r.w);}vec2 unpackRGBATo2Half(vec4 v){return vec2(v.x+(v.y/255.0),v.z+(v.w/255.0));}float viewZToOrthographicDepth(const in float viewZ,const in float near,const in float far){return(viewZ+near)/(near-far);}float orthographicDepthToViewZ(const in float linearClipZ,const in float near,const in float far){return linearClipZ*(near-far)-near;}float viewZToPerspectiveDepth(const in float viewZ,const in float near,const in float far){return((near+viewZ)*far)/((far-near)*viewZ);}float perspectiveDepthToViewZ(const in float invClipZ,const in float near,const in float far){return(near*far)/((far-near)*invClipZ-far);}",premultiplied_alpha_fragment:"#ifdef PREMULTIPLIED_ALPHA\ngl_FragColor.rgb*=gl_FragColor.a;\n#endif",project_vertex:"vec4 mvPosition=vec4(transformed,1.0);\n#ifdef USE_INSTANCING\nmvPosition=instanceMatrix*mvPosition;\n#endif\nmvPosition=modelViewMatrix*mvPosition;gl_Position=projectionMatrix*mvPosition;",dithering_fragment:"#ifdef DITHERING\ngl_FragColor.rgb=dithering(gl_FragColor.rgb);\n#endif",dithering_pars_fragment:"#ifdef DITHERING\nvec3 dithering(vec3 color){float grid_position=rand(gl_FragCoord.xy);vec3 dither_shift_RGB=vec3(0.25/255.0,-0.25/255.0,0.25/255.0);dither_shift_RGB=mix(2.0*dither_shift_RGB,-2.0*dither_shift_RGB,grid_position);return color+dither_shift_RGB;}\n#endif",roughnessmap_fragment:"float roughnessFactor=roughness;\n#ifdef USE_ROUGHNESSMAP\nvec4 texelRoughness=texture2D(roughnessMap,vUv);roughnessFactor*=texelRoughness.g;\n#endif",roughnessmap_pars_fragment:"#ifdef USE_ROUGHNESSMAP\nuniform sampler2D roughnessMap;\n#endif",shadowmap_pars_fragment:"#ifdef USE_SHADOWMAP\n#if NUM_DIR_LIGHT_SHADOWS>0\nuniform sampler2D directionalShadowMap[NUM_DIR_LIGHT_SHADOWS];varying vec4 vDirectionalShadowCoord[NUM_DIR_LIGHT_SHADOWS];struct DirectionalLightShadow{float shadowBias;float shadowNormalBias;float shadowRadius;vec2 shadowMapSize;};uniform DirectionalLightShadow directionalLightShadows[NUM_DIR_LIGHT_SHADOWS];\n#endif\n#if NUM_SPOT_LIGHT_SHADOWS>0\nuniform sampler2D spotShadowMap[NUM_SPOT_LIGHT_SHADOWS];varying vec4 vSpotShadowCoord[NUM_SPOT_LIGHT_SHADOWS];struct SpotLightShadow{float shadowBias;float shadowNormalBias;float shadowRadius;vec2 shadowMapSize;};uniform SpotLightShadow spotLightShadows[NUM_SPOT_LIGHT_SHADOWS];\n#endif\n#if NUM_POINT_LIGHT_SHADOWS>0\nuniform sampler2D pointShadowMap[NUM_POINT_LIGHT_SHADOWS];varying vec4 vPointShadowCoord[NUM_POINT_LIGHT_SHADOWS];struct PointLightShadow{float shadowBias;float shadowNormalBias;float shadowRadius;vec2 shadowMapSize;float shadowCameraNear;float shadowCameraFar;};uniform PointLightShadow pointLightShadows[NUM_POINT_LIGHT_SHADOWS];\n#endif\nfloat texture2DCompare(sampler2D depths,vec2 uv,float compare){return step(compare,unpackRGBAToDepth(texture2D(depths,uv)));}vec2 texture2DDistribution(sampler2D shadow,vec2 uv){return unpackRGBATo2Half(texture2D(shadow,uv));}float VSMShadow(sampler2D shadow,vec2 uv,float compare){float occlusion=1.0;vec2 distribution=texture2DDistribution(shadow,uv);float hard_shadow=step(compare,distribution.x);if(hard_shadow!=1.0){float distance=compare-distribution.x;float variance=max(0.00000,distribution.y*distribution.y);float softness_probability=variance/(variance+distance*distance);softness_probability=clamp((softness_probability-0.3)/(0.95-0.3),0.0,1.0);occlusion=clamp(max(hard_shadow,softness_probability),0.0,1.0);}return occlusion;}float getShadow(sampler2D shadowMap,vec2 shadowMapSize,float shadowBias,float shadowRadius,vec4 shadowCoord){float shadow=1.0;shadowCoord.xyz/=shadowCoord.w;shadowCoord.z+=shadowBias;bvec4 inFrustumVec=bvec4(shadowCoord.x>=0.0,shadowCoord.x<=1.0,shadowCoord.y>=0.0,shadowCoord.y<=1.0);bool inFrustum=all(inFrustumVec);bvec2 frustumTestVec=bvec2(inFrustum,shadowCoord.z<=1.0);bool frustumTest=all(frustumTestVec);if(frustumTest){\n#if defined(SHADOWMAP_TYPE_PCF)\nvec2 texelSize=vec2(1.0)/shadowMapSize;float dx0=-texelSize.x*shadowRadius;float dy0=-texelSize.y*shadowRadius;float dx1=+texelSize.x*shadowRadius;float dy1=+texelSize.y*shadowRadius;float dx2=dx0/2.0;float dy2=dy0/2.0;float dx3=dx1/2.0;float dy3=dy1/2.0;shadow=(texture2DCompare(shadowMap,shadowCoord.xy+vec2(dx0,dy0),shadowCoord.z)+texture2DCompare(shadowMap,shadowCoord.xy+vec2(0.0,dy0),shadowCoord.z)+texture2DCompare(shadowMap,shadowCoord.xy+vec2(dx1,dy0),shadowCoord.z)+texture2DCompare(shadowMap,shadowCoord.xy+vec2(dx2,dy2),shadowCoord.z)+texture2DCompare(shadowMap,shadowCoord.xy+vec2(0.0,dy2),shadowCoord.z)+texture2DCompare(shadowMap,shadowCoord.xy+vec2(dx3,dy2),shadowCoord.z)+texture2DCompare(shadowMap,shadowCoord.xy+vec2(dx0,0.0),shadowCoord.z)+texture2DCompare(shadowMap,shadowCoord.xy+vec2(dx2,0.0),shadowCoord.z)+texture2DCompare(shadowMap,shadowCoord.xy,shadowCoord.z)+texture2DCompare(shadowMap,shadowCoord.xy+vec2(dx3,0.0),shadowCoord.z)+texture2DCompare(shadowMap,shadowCoord.xy+vec2(dx1,0.0),shadowCoord.z)+texture2DCompare(shadowMap,shadowCoord.xy+vec2(dx2,dy3),shadowCoord.z)+texture2DCompare(shadowMap,shadowCoord.xy+vec2(0.0,dy3),shadowCoord.z)+texture2DCompare(shadowMap,shadowCoord.xy+vec2(dx3,dy3),shadowCoord.z)+texture2DCompare(shadowMap,shadowCoord.xy+vec2(dx0,dy1),shadowCoord.z)+texture2DCompare(shadowMap,shadowCoord.xy+vec2(0.0,dy1),shadowCoord.z)+texture2DCompare(shadowMap,shadowCoord.xy+vec2(dx1,dy1),shadowCoord.z))*(1.0/17.0);\n#elif defined(SHADOWMAP_TYPE_PCF_SOFT)\nvec2 texelSize=vec2(1.0)/shadowMapSize;float dx=texelSize.x;float dy=texelSize.y;vec2 uv=shadowCoord.xy;vec2 f=fract(uv*shadowMapSize+0.5);uv-=f*texelSize;shadow=(texture2DCompare(shadowMap,uv,shadowCoord.z)+texture2DCompare(shadowMap,uv+vec2(dx,0.0),shadowCoord.z)+texture2DCompare(shadowMap,uv+vec2(0.0,dy),shadowCoord.z)+texture2DCompare(shadowMap,uv+texelSize,shadowCoord.z)+mix(texture2DCompare(shadowMap,uv+vec2(-dx,0.0),shadowCoord.z),texture2DCompare(shadowMap,uv+vec2(2.0*dx,0.0),shadowCoord.z),f.x)+mix(texture2DCompare(shadowMap,uv+vec2(-dx,dy),shadowCoord.z),texture2DCompare(shadowMap,uv+vec2(2.0*dx,dy),shadowCoord.z),f.x)+mix(texture2DCompare(shadowMap,uv+vec2(0.0,-dy),shadowCoord.z),texture2DCompare(shadowMap,uv+vec2(0.0,2.0*dy),shadowCoord.z),f.y)+mix(texture2DCompare(shadowMap,uv+vec2(dx,-dy),shadowCoord.z),texture2DCompare(shadowMap,uv+vec2(dx,2.0*dy),shadowCoord.z),f.y)+mix(mix(texture2DCompare(shadowMap,uv+vec2(-dx,-dy),shadowCoord.z),texture2DCompare(shadowMap,uv+vec2(2.0*dx,-dy),shadowCoord.z),f.x),mix(texture2DCompare(shadowMap,uv+vec2(-dx,2.0*dy),shadowCoord.z),texture2DCompare(shadowMap,uv+vec2(2.0*dx,2.0*dy),shadowCoord.z),f.x),f.y))*(1.0/9.0);\n#elif defined(SHADOWMAP_TYPE_VSM)\nshadow=VSMShadow(shadowMap,shadowCoord.xy,shadowCoord.z);\n#else\nshadow=texture2DCompare(shadowMap,shadowCoord.xy,shadowCoord.z);\n#endif\n}return shadow;}vec2 cubeToUV(vec3 v,float texelSizeY){vec3 absV=abs(v);float scaleToCube=1.0/max(absV.x,max(absV.y,absV.z));absV*=scaleToCube;v*=scaleToCube*(1.0-2.0*texelSizeY);vec2 planar=v.xy;float almostATexel=1.5*texelSizeY;float almostOne=1.0-almostATexel;if(absV.z>=almostOne){if(v.z>0.0)planar.x=4.0-v.x;}else if(absV.x>=almostOne){float signX=sign(v.x);planar.x=v.z*signX+2.0*signX;}else if(absV.y>=almostOne){float signY=sign(v.y);planar.x=v.x+2.0*signY+2.0;planar.y=v.z*signY-2.0;}return vec2(0.125,0.25)*planar+vec2(0.375,0.75);}float getPointShadow(sampler2D shadowMap,vec2 shadowMapSize,float shadowBias,float shadowRadius,vec4 shadowCoord,float shadowCameraNear,float shadowCameraFar){vec2 texelSize=vec2(1.0)/(shadowMapSize*vec2(4.0,2.0));vec3 lightToPosition=shadowCoord.xyz;float dp=(length(lightToPosition)-shadowCameraNear)/(shadowCameraFar-shadowCameraNear);dp+=shadowBias;vec3 bd3D=normalize(lightToPosition);\n#if defined(SHADOWMAP_TYPE_PCF)||defined(SHADOWMAP_TYPE_PCF_SOFT)||defined(SHADOWMAP_TYPE_VSM)\nvec2 offset=vec2(-1,1)*shadowRadius*texelSize.y;return(texture2DCompare(shadowMap,cubeToUV(bd3D+offset.xyy,texelSize.y),dp)+texture2DCompare(shadowMap,cubeToUV(bd3D+offset.yyy,texelSize.y),dp)+texture2DCompare(shadowMap,cubeToUV(bd3D+offset.xyx,texelSize.y),dp)+texture2DCompare(shadowMap,cubeToUV(bd3D+offset.yyx,texelSize.y),dp)+texture2DCompare(shadowMap,cubeToUV(bd3D,texelSize.y),dp)+texture2DCompare(shadowMap,cubeToUV(bd3D+offset.xxy,texelSize.y),dp)+texture2DCompare(shadowMap,cubeToUV(bd3D+offset.yxy,texelSize.y),dp)+texture2DCompare(shadowMap,cubeToUV(bd3D+offset.xxx,texelSize.y),dp)+texture2DCompare(shadowMap,cubeToUV(bd3D+offset.yxx,texelSize.y),dp))*(1.0/9.0);\n#else\nreturn texture2DCompare(shadowMap,cubeToUV(bd3D,texelSize.y),dp);\n#endif\n}\n#endif",shadowmap_pars_vertex:"#ifdef USE_SHADOWMAP\n#if NUM_DIR_LIGHT_SHADOWS>0\nuniform mat4 directionalShadowMatrix[NUM_DIR_LIGHT_SHADOWS];varying vec4 vDirectionalShadowCoord[NUM_DIR_LIGHT_SHADOWS];struct DirectionalLightShadow{float shadowBias;float shadowNormalBias;float shadowRadius;vec2 shadowMapSize;};uniform DirectionalLightShadow directionalLightShadows[NUM_DIR_LIGHT_SHADOWS];\n#endif\n#if NUM_SPOT_LIGHT_SHADOWS>0\nuniform mat4 spotShadowMatrix[NUM_SPOT_LIGHT_SHADOWS];varying vec4 vSpotShadowCoord[NUM_SPOT_LIGHT_SHADOWS];struct SpotLightShadow{float shadowBias;float shadowNormalBias;float shadowRadius;vec2 shadowMapSize;};uniform SpotLightShadow spotLightShadows[NUM_SPOT_LIGHT_SHADOWS];\n#endif\n#if NUM_POINT_LIGHT_SHADOWS>0\nuniform mat4 pointShadowMatrix[NUM_POINT_LIGHT_SHADOWS];varying vec4 vPointShadowCoord[NUM_POINT_LIGHT_SHADOWS];struct PointLightShadow{float shadowBias;float shadowNormalBias;float shadowRadius;vec2 shadowMapSize;float shadowCameraNear;float shadowCameraFar;};uniform PointLightShadow pointLightShadows[NUM_POINT_LIGHT_SHADOWS];\n#endif\n#endif",shadowmap_vertex:"#ifdef USE_SHADOWMAP\n#if NUM_DIR_LIGHT_SHADOWS>0||NUM_SPOT_LIGHT_SHADOWS>0||NUM_POINT_LIGHT_SHADOWS>0\nvec3 shadowWorldNormal=inverseTransformDirection(transformedNormal,viewMatrix);vec4 shadowWorldPosition;\n#endif\n#if NUM_DIR_LIGHT_SHADOWS>0\n#pragma unroll_loop_start\nfor(int i=0;i<NUM_DIR_LIGHT_SHADOWS;i++){shadowWorldPosition=worldPosition+vec4(shadowWorldNormal*directionalLightShadows[i].shadowNormalBias,0);vDirectionalShadowCoord[i]=directionalShadowMatrix[i]*shadowWorldPosition;}\n#pragma unroll_loop_end\n#endif\n#if NUM_SPOT_LIGHT_SHADOWS>0\n#pragma unroll_loop_start\nfor(int i=0;i<NUM_SPOT_LIGHT_SHADOWS;i++){shadowWorldPosition=worldPosition+vec4(shadowWorldNormal*spotLightShadows[i].shadowNormalBias,0);vSpotShadowCoord[i]=spotShadowMatrix[i]*shadowWorldPosition;}\n#pragma unroll_loop_end\n#endif\n#if NUM_POINT_LIGHT_SHADOWS>0\n#pragma unroll_loop_start\nfor(int i=0;i<NUM_POINT_LIGHT_SHADOWS;i++){shadowWorldPosition=worldPosition+vec4(shadowWorldNormal*pointLightShadows[i].shadowNormalBias,0);vPointShadowCoord[i]=pointShadowMatrix[i]*shadowWorldPosition;}\n#pragma unroll_loop_end\n#endif\n#endif",shadowmask_pars_fragment:"float getShadowMask(){float shadow=1.0;\n#ifdef USE_SHADOWMAP\n#if NUM_DIR_LIGHT_SHADOWS>0\nDirectionalLightShadow directionalLight;\n#pragma unroll_loop_start\nfor(int i=0;i<NUM_DIR_LIGHT_SHADOWS;i++){directionalLight=directionalLightShadows[i];shadow*=receiveShadow?getShadow(directionalShadowMap[i],directionalLight.shadowMapSize,directionalLight.shadowBias,directionalLight.shadowRadius,vDirectionalShadowCoord[i]):1.0;}\n#pragma unroll_loop_end\n#endif\n#if NUM_SPOT_LIGHT_SHADOWS>0\nSpotLightShadow spotLight;\n#pragma unroll_loop_start\nfor(int i=0;i<NUM_SPOT_LIGHT_SHADOWS;i++){spotLight=spotLightShadows[i];shadow*=receiveShadow?getShadow(spotShadowMap[i],spotLight.shadowMapSize,spotLight.shadowBias,spotLight.shadowRadius,vSpotShadowCoord[i]):1.0;}\n#pragma unroll_loop_end\n#endif\n#if NUM_POINT_LIGHT_SHADOWS>0\nPointLightShadow pointLight;\n#pragma unroll_loop_start\nfor(int i=0;i<NUM_POINT_LIGHT_SHADOWS;i++){pointLight=pointLightShadows[i];shadow*=receiveShadow?getPointShadow(pointShadowMap[i],pointLight.shadowMapSize,pointLight.shadowBias,pointLight.shadowRadius,vPointShadowCoord[i],pointLight.shadowCameraNear,pointLight.shadowCameraFar):1.0;}\n#pragma unroll_loop_end\n#endif\n#endif\nreturn shadow;}",skinbase_vertex:"#ifdef USE_SKINNING\nmat4 boneMatX=getBoneMatrix(skinIndex.x);mat4 boneMatY=getBoneMatrix(skinIndex.y);mat4 boneMatZ=getBoneMatrix(skinIndex.z);mat4 boneMatW=getBoneMatrix(skinIndex.w);\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\nuniform mat4 bindMatrix;uniform mat4 bindMatrixInverse;\n#ifdef BONE_TEXTURE\nuniform highp sampler2D boneTexture;uniform int boneTextureSize;mat4 getBoneMatrix(const in float i){float j=i*4.0;float x=mod(j,float(boneTextureSize));float y=floor(j/float(boneTextureSize));float dx=1.0/float(boneTextureSize);float dy=1.0/float(boneTextureSize);y=dy*(y+0.5);vec4 v1=texture2D(boneTexture,vec2(dx*(x+0.5),y));vec4 v2=texture2D(boneTexture,vec2(dx*(x+1.5),y));vec4 v3=texture2D(boneTexture,vec2(dx*(x+2.5),y));vec4 v4=texture2D(boneTexture,vec2(dx*(x+3.5),y));mat4 bone=mat4(v1,v2,v3,v4);return bone;}\n#else\nuniform mat4 boneMatrices[MAX_BONES];mat4 getBoneMatrix(const in float i){mat4 bone=boneMatrices[int(i)];return bone;}\n#endif\n#endif",skinning_vertex:"#ifdef USE_SKINNING\nvec4 skinVertex=bindMatrix*vec4(transformed,1.0);vec4 skinned=vec4(0.0);skinned+=boneMatX*skinVertex*skinWeight.x;skinned+=boneMatY*skinVertex*skinWeight.y;skinned+=boneMatZ*skinVertex*skinWeight.z;skinned+=boneMatW*skinVertex*skinWeight.w;transformed=(bindMatrixInverse*skinned).xyz;\n#endif",skinnormal_vertex:"#ifdef USE_SKINNING\nmat4 skinMatrix=mat4(0.0);skinMatrix+=skinWeight.x*boneMatX;skinMatrix+=skinWeight.y*boneMatY;skinMatrix+=skinWeight.z*boneMatZ;skinMatrix+=skinWeight.w*boneMatW;skinMatrix=bindMatrixInverse*skinMatrix*bindMatrix;objectNormal=vec4(skinMatrix*vec4(objectNormal,0.0)).xyz;\n#ifdef USE_TANGENT\nobjectTangent=vec4(skinMatrix*vec4(objectTangent,0.0)).xyz;\n#endif\n#endif",specularmap_fragment:"float specularStrength;\n#ifdef USE_SPECULARMAP\nvec4 texelSpecular=texture2D(specularMap,vUv);specularStrength=texelSpecular.r;\n#else\nspecularStrength=1.0;\n#endif",specularmap_pars_fragment:"#ifdef USE_SPECULARMAP\nuniform sampler2D specularMap;\n#endif",tonemapping_fragment:"#if defined(TONE_MAPPING)\ngl_FragColor.rgb=toneMapping(gl_FragColor.rgb);\n#endif",tonemapping_pars_fragment:"#ifndef saturate\n#define saturate(a)clamp(a,0.0,1.0)\n#endif\nuniform float toneMappingExposure;vec3 LinearToneMapping(vec3 color){return toneMappingExposure*color;}vec3 ReinhardToneMapping(vec3 color){color*=toneMappingExposure;return saturate(color/(vec3(1.0)+color));}vec3 OptimizedCineonToneMapping(vec3 color){color*=toneMappingExposure;color=max(vec3(0.0),color-0.004);return pow((color*(6.2*color+0.5))/(color*(6.2*color+1.7)+0.06),vec3(2.2));}vec3 RRTAndODTFit(vec3 v){vec3 a=v*(v+0.0245786)-0.000090537;vec3 b=v*(0.983729*v+0.4329510)+0.238081;return a/b;}vec3 ACESFilmicToneMapping(vec3 color){const mat3 ACESInputMat=mat3(vec3(0.59719,0.07600,0.02840),vec3(0.35458,0.90834,0.13383),vec3(0.04823,0.01566,0.83777));const mat3 ACESOutputMat=mat3(vec3(1.60475,-0.10208,-0.00327),vec3(-0.53108,1.10813,-0.07276),vec3(-0.07367,-0.00605,1.07602));color*=toneMappingExposure/0.6;color=ACESInputMat*color;color=RRTAndODTFit(color);color=ACESOutputMat*color;return saturate(color);}vec3 CustomToneMapping(vec3 color){return color;}",transmission_fragment:"#ifdef USE_TRANSMISSION\nfloat transmissionAlpha=1.0;float transmissionFactor=transmission;float thicknessFactor=thickness;\n#ifdef USE_TRANSMISSIONMAP\ntransmissionFactor*=texture2D(transmissionMap,vUv).r;\n#endif\n#ifdef USE_THICKNESSMAP\nthicknessFactor*=texture2D(thicknessMap,vUv).g;\n#endif\nvec3 pos=vWorldPosition;vec3 v=normalize(cameraPosition-pos);vec3 n=inverseTransformDirection(normal,viewMatrix);vec4 transmission=getIBLVolumeRefraction(n,v,roughnessFactor,material.diffuseColor,material.specularColor,material.specularF90,pos,modelMatrix,viewMatrix,projectionMatrix,ior,thicknessFactor,attenuationColor,attenuationDistance);totalDiffuse=mix(totalDiffuse,transmission.rgb,transmissionFactor);transmissionAlpha=mix(transmissionAlpha,transmission.a,transmissionFactor);\n#endif",transmission_pars_fragment:"#ifdef USE_TRANSMISSION\nuniform float transmission;uniform float thickness;uniform float attenuationDistance;uniform vec3 attenuationColor;\n#ifdef USE_TRANSMISSIONMAP\nuniform sampler2D transmissionMap;\n#endif\n#ifdef USE_THICKNESSMAP\nuniform sampler2D thicknessMap;\n#endif\nuniform vec2 transmissionSamplerSize;uniform sampler2D transmissionSamplerMap;uniform mat4 modelMatrix;uniform mat4 projectionMatrix;varying vec3 vWorldPosition;vec3 getVolumeTransmissionRay(vec3 n,vec3 v,float thickness,float ior,mat4 modelMatrix){vec3 refractionVector=refract(-v,normalize(n),1.0/ior);vec3 modelScale;modelScale.x=length(vec3(modelMatrix[0].xyz));modelScale.y=length(vec3(modelMatrix[1].xyz));modelScale.z=length(vec3(modelMatrix[2].xyz));return normalize(refractionVector)*thickness*modelScale;}float applyIorToRoughness(float roughness,float ior){return roughness*clamp(ior*2.0-2.0,0.0,1.0);}vec4 getTransmissionSample(vec2 fragCoord,float roughness,float ior){float framebufferLod=log2(transmissionSamplerSize.x)*applyIorToRoughness(roughness,ior);\n#ifdef TEXTURE_LOD_EXT\nreturn texture2DLodEXT(transmissionSamplerMap,fragCoord.xy,framebufferLod);\n#else\nreturn texture2D(transmissionSamplerMap,fragCoord.xy,framebufferLod);\n#endif\n}vec3 applyVolumeAttenuation(vec3 radiance,float transmissionDistance,vec3 attenuationColor,float attenuationDistance){if(attenuationDistance==0.0){return radiance;}else{vec3 attenuationCoefficient=-log(attenuationColor)/attenuationDistance;vec3 transmittance=exp(-attenuationCoefficient*transmissionDistance);return transmittance*radiance;}}vec4 getIBLVolumeRefraction(vec3 n,vec3 v,float roughness,vec3 diffuseColor,vec3 specularColor,float specularF90,vec3 position,mat4 modelMatrix,mat4 viewMatrix,mat4 projMatrix,float ior,float thickness,vec3 attenuationColor,float attenuationDistance){vec3 transmissionRay=getVolumeTransmissionRay(n,v,thickness,ior,modelMatrix);vec3 refractedRayExit=position+transmissionRay;vec4 ndcPos=projMatrix*viewMatrix*vec4(refractedRayExit,1.0);vec2 refractionCoords=ndcPos.xy/ndcPos.w;refractionCoords+=1.0;refractionCoords/=2.0;vec4 transmittedLight=getTransmissionSample(refractionCoords,roughness,ior);vec3 attenuatedColor=applyVolumeAttenuation(transmittedLight.rgb,length(transmissionRay),attenuationColor,attenuationDistance);vec3 F=EnvironmentBRDF(n,v,specularColor,specularF90,roughness);return vec4((1.0-F)*attenuatedColor*diffuseColor,transmittedLight.a);}\n#endif",uv_pars_fragment:"#if (defined(USE_UV)&&!defined(UVS_VERTEX_ONLY))\nvarying vec2 vUv;\n#endif",uv_pars_vertex:"#ifdef USE_UV\n#ifdef UVS_VERTEX_ONLY\nvec2 vUv;\n#else\nvarying vec2 vUv;\n#endif\nuniform mat3 uvTransform;\n#endif",uv_vertex:"#ifdef USE_UV\nvUv=(uvTransform*vec3(uv,1)).xy;\n#endif",uv2_pars_fragment:"#if defined(USE_LIGHTMAP)||defined(USE_AOMAP)\nvarying vec2 vUv2;\n#endif",uv2_pars_vertex:"#if defined(USE_LIGHTMAP)||defined(USE_AOMAP)\nattribute vec2 uv2;varying vec2 vUv2;uniform mat3 uv2Transform;\n#endif",uv2_vertex:"#if defined(USE_LIGHTMAP)||defined(USE_AOMAP)\nvUv2=(uv2Transform*vec3(uv2,1)).xy;\n#endif",worldpos_vertex:"#if defined(USE_ENVMAP)||defined(DISTANCE)||defined(USE_SHADOWMAP)||defined(USE_TRANSMISSION)\nvec4 worldPosition=vec4(transformed,1.0);\n#ifdef USE_INSTANCING\nworldPosition=instanceMatrix*worldPosition;\n#endif\nworldPosition=modelMatrix*worldPosition;\n#endif",background_vert:"varying vec2 vUv;uniform mat3 uvTransform;void main(){vUv=(uvTransform*vec3(uv,1)).xy;gl_Position=vec4(position.xy,1.0,1.0);}",background_frag:"uniform sampler2D t2D;varying vec2 vUv;void main(){vec4 texColor=texture2D(t2D,vUv);gl_FragColor=mapTexelToLinear(texColor);\n#include <tonemapping_fragment>\n#include <encodings_fragment>\n}",cube_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main(){vWorldDirection=transformDirection(position,modelMatrix);\n#include <begin_vertex>\n#include <project_vertex>\ngl_Position.z=gl_Position.w;}",cube_frag:"#include <envmap_common_pars_fragment>\nuniform float opacity;varying vec3 vWorldDirection;\n#include <cube_uv_reflection_fragment>\nvoid main(){vec3 vReflect=vWorldDirection;\n#include <envmap_fragment>\ngl_FragColor=envColor;gl_FragColor.a*=opacity;\n#include <tonemapping_fragment>\n#include <encodings_fragment>\n}",depth_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvarying vec2 vHighPrecisionZW;void main(){\n#include <uv_vertex>\n#include <skinbase_vertex>\n#ifdef USE_DISPLACEMENTMAP\n#include <beginnormal_vertex>\n#include <morphnormal_vertex>\n#include <skinnormal_vertex>\n#endif\n#include <begin_vertex>\n#include <morphtarget_vertex>\n#include <skinning_vertex>\n#include <displacementmap_vertex>\n#include <project_vertex>\n#include <logdepthbuf_vertex>\n#include <clipping_planes_vertex>\nvHighPrecisionZW=gl_Position.zw;}",depth_frag:"#if DEPTH_PACKING==3200\nuniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvarying vec2 vHighPrecisionZW;void main(){\n#include <clipping_planes_fragment>\nvec4 diffuseColor=vec4(1.0);\n#if DEPTH_PACKING==3200\ndiffuseColor.a=opacity;\n#endif\n#include <map_fragment>\n#include <alphamap_fragment>\n#include <alphatest_fragment>\n#include <logdepthbuf_fragment>\nfloat fragCoordZ=0.5*vHighPrecisionZW[0]/vHighPrecisionZW[1]+0.5;\n#if DEPTH_PACKING==3200\ngl_FragColor=vec4(vec3(1.0-fragCoordZ),opacity);\n#elif DEPTH_PACKING==3201\ngl_FragColor=packDepthToRGBA(fragCoordZ);\n#endif\n}",distanceRGBA_vert:"#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main(){\n#include <uv_vertex>\n#include <skinbase_vertex>\n#ifdef USE_DISPLACEMENTMAP\n#include <beginnormal_vertex>\n#include <morphnormal_vertex>\n#include <skinnormal_vertex>\n#endif\n#include <begin_vertex>\n#include <morphtarget_vertex>\n#include <skinning_vertex>\n#include <displacementmap_vertex>\n#include <project_vertex>\n#include <worldpos_vertex>\n#include <clipping_planes_vertex>\nvWorldPosition=worldPosition.xyz;}",distanceRGBA_frag:"#define DISTANCE\nuniform vec3 referencePosition;uniform float nearDistance;uniform float farDistance;varying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main(){\n#include <clipping_planes_fragment>\nvec4 diffuseColor=vec4(1.0);\n#include <map_fragment>\n#include <alphamap_fragment>\n#include <alphatest_fragment>\nfloat dist=length(vWorldPosition-referencePosition);dist=(dist-nearDistance)/(farDistance-nearDistance);dist=saturate(dist);gl_FragColor=packDepthToRGBA(dist);}",equirect_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main(){vWorldDirection=transformDirection(position,modelMatrix);\n#include <begin_vertex>\n#include <project_vertex>\n}",equirect_frag:"uniform sampler2D tEquirect;varying vec3 vWorldDirection;\n#include <common>\nvoid main(){vec3 direction=normalize(vWorldDirection);vec2 sampleUV=equirectUv(direction);vec4 texColor=texture2D(tEquirect,sampleUV);gl_FragColor=mapTexelToLinear(texColor);\n#include <tonemapping_fragment>\n#include <encodings_fragment>\n}",linedashed_vert:"uniform float scale;attribute float lineDistance;varying float vLineDistance;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main(){vLineDistance=scale*lineDistance;\n#include <color_vertex>\n#include <begin_vertex>\n#include <morphtarget_vertex>\n#include <project_vertex>\n#include <logdepthbuf_vertex>\n#include <clipping_planes_vertex>\n#include <fog_vertex>\n}",linedashed_frag:"uniform vec3 diffuse;uniform float opacity;uniform float dashSize;uniform float totalSize;varying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main(){\n#include <clipping_planes_fragment>\nif(mod(vLineDistance,totalSize)>dashSize){discard;}vec3 outgoingLight=vec3(0.0);vec4 diffuseColor=vec4(diffuse,opacity);\n#include <logdepthbuf_fragment>\n#include <color_fragment>\noutgoingLight=diffuseColor.rgb;\n#include <output_fragment>\n#include <tonemapping_fragment>\n#include <encodings_fragment>\n#include <fog_fragment>\n#include <premultiplied_alpha_fragment>\n}",meshbasic_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main(){\n#include <uv_vertex>\n#include <uv2_vertex>\n#include <color_vertex>\n#if defined(USE_ENVMAP)||defined(USE_SKINNING)\n#include <beginnormal_vertex>\n#include <morphnormal_vertex>\n#include <skinbase_vertex>\n#include <skinnormal_vertex>\n#include <defaultnormal_vertex>\n#endif\n#include <begin_vertex>\n#include <morphtarget_vertex>\n#include <skinning_vertex>\n#include <project_vertex>\n#include <logdepthbuf_vertex>\n#include <clipping_planes_vertex>\n#include <worldpos_vertex>\n#include <envmap_vertex>\n#include <fog_vertex>\n}",meshbasic_frag:"uniform vec3 diffuse;uniform float opacity;\n#ifndef FLAT_SHADED\nvarying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main(){\n#include <clipping_planes_fragment>\nvec4 diffuseColor=vec4(diffuse,opacity);\n#include <logdepthbuf_fragment>\n#include <map_fragment>\n#include <color_fragment>\n#include <alphamap_fragment>\n#include <alphatest_fragment>\n#include <specularmap_fragment>\nReflectedLight reflectedLight=ReflectedLight(vec3(0.0),vec3(0.0),vec3(0.0),vec3(0.0));\n#ifdef USE_LIGHTMAP\nvec4 lightMapTexel=texture2D(lightMap,vUv2);reflectedLight.indirectDiffuse+=lightMapTexelToLinear(lightMapTexel).rgb*lightMapIntensity;\n#else\nreflectedLight.indirectDiffuse+=vec3(1.0);\n#endif\n#include <aomap_fragment>\nreflectedLight.indirectDiffuse*=diffuseColor.rgb;vec3 outgoingLight=reflectedLight.indirectDiffuse;\n#include <envmap_fragment>\n#include <output_fragment>\n#include <tonemapping_fragment>\n#include <encodings_fragment>\n#include <fog_fragment>\n#include <premultiplied_alpha_fragment>\n#include <dithering_fragment>\n}",meshlambert_vert:"#define LAMBERT\nvarying vec3 vLightFront;varying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\nvarying vec3 vLightBack;varying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main(){\n#include <uv_vertex>\n#include <uv2_vertex>\n#include <color_vertex>\n#include <beginnormal_vertex>\n#include <morphnormal_vertex>\n#include <skinbase_vertex>\n#include <skinnormal_vertex>\n#include <defaultnormal_vertex>\n#include <begin_vertex>\n#include <morphtarget_vertex>\n#include <skinning_vertex>\n#include <project_vertex>\n#include <logdepthbuf_vertex>\n#include <clipping_planes_vertex>\n#include <worldpos_vertex>\n#include <envmap_vertex>\n#include <lights_lambert_vertex>\n#include <shadowmap_vertex>\n#include <fog_vertex>\n}",meshlambert_frag:"uniform vec3 diffuse;uniform vec3 emissive;uniform float opacity;varying vec3 vLightFront;varying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\nvarying vec3 vLightBack;varying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main(){\n#include <clipping_planes_fragment>\nvec4 diffuseColor=vec4(diffuse,opacity);ReflectedLight reflectedLight=ReflectedLight(vec3(0.0),vec3(0.0),vec3(0.0),vec3(0.0));vec3 totalEmissiveRadiance=emissive;\n#include <logdepthbuf_fragment>\n#include <map_fragment>\n#include <color_fragment>\n#include <alphamap_fragment>\n#include <alphatest_fragment>\n#include <specularmap_fragment>\n#include <emissivemap_fragment>\n#ifdef DOUBLE_SIDED\nreflectedLight.indirectDiffuse+=(gl_FrontFacing)?vIndirectFront:vIndirectBack;\n#else\nreflectedLight.indirectDiffuse+=vIndirectFront;\n#endif\n#include <lightmap_fragment>\nreflectedLight.indirectDiffuse*=BRDF_Lambert(diffuseColor.rgb);\n#ifdef DOUBLE_SIDED\nreflectedLight.directDiffuse=(gl_FrontFacing)?vLightFront:vLightBack;\n#else\nreflectedLight.directDiffuse=vLightFront;\n#endif\nreflectedLight.directDiffuse*=BRDF_Lambert(diffuseColor.rgb)*getShadowMask();\n#include <aomap_fragment>\nvec3 outgoingLight=reflectedLight.directDiffuse+reflectedLight.indirectDiffuse+totalEmissiveRadiance;\n#include <envmap_fragment>\n#include <output_fragment>\n#include <tonemapping_fragment>\n#include <encodings_fragment>\n#include <fog_fragment>\n#include <premultiplied_alpha_fragment>\n#include <dithering_fragment>\n}",meshmatcap_vert:"#define MATCAP\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main(){\n#include <uv_vertex>\n#include <color_vertex>\n#include <beginnormal_vertex>\n#include <morphnormal_vertex>\n#include <skinbase_vertex>\n#include <skinnormal_vertex>\n#include <defaultnormal_vertex>\n#include <normal_vertex>\n#include <begin_vertex>\n#include <morphtarget_vertex>\n#include <skinning_vertex>\n#include <displacementmap_vertex>\n#include <project_vertex>\n#include <logdepthbuf_vertex>\n#include <clipping_planes_vertex>\n#include <fog_vertex>\nvViewPosition=-mvPosition.xyz;}",meshmatcap_frag:"#define MATCAP\nuniform vec3 diffuse;uniform float opacity;uniform sampler2D matcap;varying vec3 vViewPosition;\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main(){\n#include <clipping_planes_fragment>\nvec4 diffuseColor=vec4(diffuse,opacity);\n#include <logdepthbuf_fragment>\n#include <map_fragment>\n#include <color_fragment>\n#include <alphamap_fragment>\n#include <alphatest_fragment>\n#include <normal_fragment_begin>\n#include <normal_fragment_maps>\nvec3 viewDir=normalize(vViewPosition);vec3 x=normalize(vec3(viewDir.z,0.0,-viewDir.x));vec3 y=cross(viewDir,x);vec2 uv=vec2(dot(x,normal),dot(y,normal))*0.495+0.5;\n#ifdef USE_MATCAP\nvec4 matcapColor=texture2D(matcap,uv);matcapColor=matcapTexelToLinear(matcapColor);\n#else\nvec4 matcapColor=vec4(1.0);\n#endif\nvec3 outgoingLight=diffuseColor.rgb*matcapColor.rgb;\n#include <output_fragment>\n#include <tonemapping_fragment>\n#include <encodings_fragment>\n#include <fog_fragment>\n#include <premultiplied_alpha_fragment>\n#include <dithering_fragment>\n}",meshnormal_vert:"#define NORMAL\n#if defined(FLAT_SHADED)||defined(USE_BUMPMAP)||defined(TANGENTSPACE_NORMALMAP)\nvarying vec3 vViewPosition;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main(){\n#include <uv_vertex>\n#include <beginnormal_vertex>\n#include <morphnormal_vertex>\n#include <skinbase_vertex>\n#include <skinnormal_vertex>\n#include <defaultnormal_vertex>\n#include <normal_vertex>\n#include <begin_vertex>\n#include <morphtarget_vertex>\n#include <skinning_vertex>\n#include <displacementmap_vertex>\n#include <project_vertex>\n#include <logdepthbuf_vertex>\n#include <clipping_planes_vertex>\n#if defined(FLAT_SHADED)||defined(USE_BUMPMAP)||defined(TANGENTSPACE_NORMALMAP)\nvViewPosition=-mvPosition.xyz;\n#endif\n}",meshnormal_frag:"#define NORMAL\nuniform float opacity;\n#if defined(FLAT_SHADED)||defined(USE_BUMPMAP)||defined(TANGENTSPACE_NORMALMAP)\nvarying vec3 vViewPosition;\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main(){\n#include <clipping_planes_fragment>\n#include <logdepthbuf_fragment>\n#include <normal_fragment_begin>\n#include <normal_fragment_maps>\ngl_FragColor=vec4(packNormalToRGB(normal),opacity);}",meshphong_vert:"#define PHONG\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main(){\n#include <uv_vertex>\n#include <uv2_vertex>\n#include <color_vertex>\n#include <beginnormal_vertex>\n#include <morphnormal_vertex>\n#include <skinbase_vertex>\n#include <skinnormal_vertex>\n#include <defaultnormal_vertex>\n#include <normal_vertex>\n#include <begin_vertex>\n#include <morphtarget_vertex>\n#include <skinning_vertex>\n#include <displacementmap_vertex>\n#include <project_vertex>\n#include <logdepthbuf_vertex>\n#include <clipping_planes_vertex>\nvViewPosition=-mvPosition.xyz;\n#include <worldpos_vertex>\n#include <envmap_vertex>\n#include <shadowmap_vertex>\n#include <fog_vertex>\n}",meshphong_frag:"#define PHONG\nuniform vec3 diffuse;uniform vec3 emissive;uniform vec3 specular;uniform float shininess;uniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main(){\n#include <clipping_planes_fragment>\nvec4 diffuseColor=vec4(diffuse,opacity);ReflectedLight reflectedLight=ReflectedLight(vec3(0.0),vec3(0.0),vec3(0.0),vec3(0.0));vec3 totalEmissiveRadiance=emissive;\n#include <logdepthbuf_fragment>\n#include <map_fragment>\n#include <color_fragment>\n#include <alphamap_fragment>\n#include <alphatest_fragment>\n#include <specularmap_fragment>\n#include <normal_fragment_begin>\n#include <normal_fragment_maps>\n#include <emissivemap_fragment>\n#include <lights_phong_fragment>\n#include <lights_fragment_begin>\n#include <lights_fragment_maps>\n#include <lights_fragment_end>\n#include <aomap_fragment>\nvec3 outgoingLight=reflectedLight.directDiffuse+reflectedLight.indirectDiffuse+reflectedLight.directSpecular+reflectedLight.indirectSpecular+totalEmissiveRadiance;\n#include <envmap_fragment>\n#include <output_fragment>\n#include <tonemapping_fragment>\n#include <encodings_fragment>\n#include <fog_fragment>\n#include <premultiplied_alpha_fragment>\n#include <dithering_fragment>\n}",meshphysical_vert:"#define STANDARD\nvarying vec3 vViewPosition;\n#ifdef USE_TRANSMISSION\nvarying vec3 vWorldPosition;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main(){\n#include <uv_vertex>\n#include <uv2_vertex>\n#include <color_vertex>\n#include <beginnormal_vertex>\n#include <morphnormal_vertex>\n#include <skinbase_vertex>\n#include <skinnormal_vertex>\n#include <defaultnormal_vertex>\n#include <normal_vertex>\n#include <begin_vertex>\n#include <morphtarget_vertex>\n#include <skinning_vertex>\n#include <displacementmap_vertex>\n#include <project_vertex>\n#include <logdepthbuf_vertex>\n#include <clipping_planes_vertex>\nvViewPosition=-mvPosition.xyz;\n#include <worldpos_vertex>\n#include <shadowmap_vertex>\n#include <fog_vertex>\n#ifdef USE_TRANSMISSION\nvWorldPosition=worldPosition.xyz;\n#endif\n}",meshphysical_frag:"#define STANDARD\n#ifdef PHYSICAL\n#define IOR\n#define SPECULAR\n#endif\nuniform vec3 diffuse;uniform vec3 emissive;uniform float roughness;uniform float metalness;uniform float opacity;\n#ifdef IOR\nuniform float ior;\n#endif\n#ifdef SPECULAR\nuniform float specularIntensity;uniform vec3 specularColor;\n#ifdef USE_SPECULARINTENSITYMAP\nuniform sampler2D specularIntensityMap;\n#endif\n#ifdef USE_SPECULARCOLORMAP\nuniform sampler2D specularColorMap;\n#endif\n#endif\n#ifdef USE_CLEARCOAT\nuniform float clearcoat;uniform float clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\nuniform vec3 sheenColor;uniform float sheenRoughness;\n#ifdef USE_SHEENCOLORMAP\nuniform sampler2D sheenColorMap;\n#endif\n#ifdef USE_SHEENROUGHNESSMAP\nuniform sampler2D sheenRoughnessMap;\n#endif\n#endif\nvarying vec3 vViewPosition;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <bsdfs>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_physical_pars_fragment>\n#include <transmission_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main(){\n#include <clipping_planes_fragment>\nvec4 diffuseColor=vec4(diffuse,opacity);ReflectedLight reflectedLight=ReflectedLight(vec3(0.0),vec3(0.0),vec3(0.0),vec3(0.0));vec3 totalEmissiveRadiance=emissive;\n#include <logdepthbuf_fragment>\n#include <map_fragment>\n#include <color_fragment>\n#include <alphamap_fragment>\n#include <alphatest_fragment>\n#include <roughnessmap_fragment>\n#include <metalnessmap_fragment>\n#include <normal_fragment_begin>\n#include <normal_fragment_maps>\n#include <clearcoat_normal_fragment_begin>\n#include <clearcoat_normal_fragment_maps>\n#include <emissivemap_fragment>\n#include <lights_physical_fragment>\n#include <lights_fragment_begin>\n#include <lights_fragment_maps>\n#include <lights_fragment_end>\n#include <aomap_fragment>\nvec3 totalDiffuse=reflectedLight.directDiffuse+reflectedLight.indirectDiffuse;vec3 totalSpecular=reflectedLight.directSpecular+reflectedLight.indirectSpecular;\n#include <transmission_fragment>\nvec3 outgoingLight=totalDiffuse+totalSpecular+totalEmissiveRadiance;\n#ifdef USE_SHEEN\nfloat sheenEnergyComp=1.0-0.157*max3(material.sheenColor);outgoingLight=outgoingLight*sheenEnergyComp+sheenSpecular;\n#endif\n#ifdef USE_CLEARCOAT\nfloat dotNVcc=saturate(dot(geometry.clearcoatNormal,geometry.viewDir));vec3 Fcc=F_Schlick(material.clearcoatF0,material.clearcoatF90,dotNVcc);outgoingLight=outgoingLight*(1.0-material.clearcoat*Fcc)+clearcoatSpecular*material.clearcoat;\n#endif\n#include <output_fragment>\n#include <tonemapping_fragment>\n#include <encodings_fragment>\n#include <fog_fragment>\n#include <premultiplied_alpha_fragment>\n#include <dithering_fragment>\n}",meshtoon_vert:"#define TOON\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main(){\n#include <uv_vertex>\n#include <uv2_vertex>\n#include <color_vertex>\n#include <beginnormal_vertex>\n#include <morphnormal_vertex>\n#include <skinbase_vertex>\n#include <skinnormal_vertex>\n#include <defaultnormal_vertex>\n#include <normal_vertex>\n#include <begin_vertex>\n#include <morphtarget_vertex>\n#include <skinning_vertex>\n#include <displacementmap_vertex>\n#include <project_vertex>\n#include <logdepthbuf_vertex>\n#include <clipping_planes_vertex>\nvViewPosition=-mvPosition.xyz;\n#include <worldpos_vertex>\n#include <shadowmap_vertex>\n#include <fog_vertex>\n}",meshtoon_frag:"#define TOON\nuniform vec3 diffuse;uniform vec3 emissive;uniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_toon_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main(){\n#include <clipping_planes_fragment>\nvec4 diffuseColor=vec4(diffuse,opacity);ReflectedLight reflectedLight=ReflectedLight(vec3(0.0),vec3(0.0),vec3(0.0),vec3(0.0));vec3 totalEmissiveRadiance=emissive;\n#include <logdepthbuf_fragment>\n#include <map_fragment>\n#include <color_fragment>\n#include <alphamap_fragment>\n#include <alphatest_fragment>\n#include <normal_fragment_begin>\n#include <normal_fragment_maps>\n#include <emissivemap_fragment>\n#include <lights_toon_fragment>\n#include <lights_fragment_begin>\n#include <lights_fragment_maps>\n#include <lights_fragment_end>\n#include <aomap_fragment>\nvec3 outgoingLight=reflectedLight.directDiffuse+reflectedLight.indirectDiffuse+totalEmissiveRadiance;\n#include <output_fragment>\n#include <tonemapping_fragment>\n#include <encodings_fragment>\n#include <fog_fragment>\n#include <premultiplied_alpha_fragment>\n#include <dithering_fragment>\n}",points_vert:"uniform float size;uniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main(){\n#include <color_vertex>\n#include <begin_vertex>\n#include <morphtarget_vertex>\n#include <project_vertex>\ngl_PointSize=size;\n#ifdef USE_SIZEATTENUATION\nbool isPerspective=isPerspectiveMatrix(projectionMatrix);if(isPerspective)gl_PointSize*=(scale/-mvPosition.z);\n#endif\n#include <logdepthbuf_vertex>\n#include <clipping_planes_vertex>\n#include <worldpos_vertex>\n#include <fog_vertex>\n}",points_frag:"uniform vec3 diffuse;uniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main(){\n#include <clipping_planes_fragment>\nvec3 outgoingLight=vec3(0.0);vec4 diffuseColor=vec4(diffuse,opacity);\n#include <logdepthbuf_fragment>\n#include <map_particle_fragment>\n#include <color_fragment>\n#include <alphatest_fragment>\noutgoingLight=diffuseColor.rgb;\n#include <output_fragment>\n#include <tonemapping_fragment>\n#include <encodings_fragment>\n#include <fog_fragment>\n#include <premultiplied_alpha_fragment>\n}",shadow_vert:"#include <common>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main(){\n#include <beginnormal_vertex>\n#include <morphnormal_vertex>\n#include <skinbase_vertex>\n#include <skinnormal_vertex>\n#include <defaultnormal_vertex>\n#include <begin_vertex>\n#include <morphtarget_vertex>\n#include <skinning_vertex>\n#include <project_vertex>\n#include <worldpos_vertex>\n#include <shadowmap_vertex>\n#include <fog_vertex>\n}",shadow_frag:"uniform vec3 color;uniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main(){gl_FragColor=vec4(color,opacity*(1.0-getShadowMask()));\n#include <tonemapping_fragment>\n#include <encodings_fragment>\n#include <fog_fragment>\n}",sprite_vert:"uniform float rotation;uniform vec2 center;\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main(){\n#include <uv_vertex>\nvec4 mvPosition=modelViewMatrix*vec4(0.0,0.0,0.0,1.0);vec2 scale;scale.x=length(vec3(modelMatrix[0].x,modelMatrix[0].y,modelMatrix[0].z));scale.y=length(vec3(modelMatrix[1].x,modelMatrix[1].y,modelMatrix[1].z));\n#ifndef USE_SIZEATTENUATION\nbool isPerspective=isPerspectiveMatrix(projectionMatrix);if(isPerspective)scale*=-mvPosition.z;\n#endif\nvec2 alignedPosition=(position.xy-(center-vec2(0.5)))*scale;vec2 rotatedPosition;rotatedPosition.x=cos(rotation)*alignedPosition.x-sin(rotation)*alignedPosition.y;rotatedPosition.y=sin(rotation)*alignedPosition.x+cos(rotation)*alignedPosition.y;mvPosition.xy+=rotatedPosition;gl_Position=projectionMatrix*mvPosition;\n#include <logdepthbuf_vertex>\n#include <clipping_planes_vertex>\n#include <fog_vertex>\n}",sprite_frag:"uniform vec3 diffuse;uniform float opacity;\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main(){\n#include <clipping_planes_fragment>\nvec3 outgoingLight=vec3(0.0);vec4 diffuseColor=vec4(diffuse,opacity);\n#include <logdepthbuf_fragment>\n#include <map_fragment>\n#include <alphamap_fragment>\n#include <alphatest_fragment>\noutgoingLight=diffuseColor.rgb;\n#include <output_fragment>\n#include <tonemapping_fragment>\n#include <encodings_fragment>\n#include <fog_fragment>\n}"},ie={common:{diffuse:{value:new ye(16777215)},opacity:{value:1},map:{value:null},uvTransform:{value:new nt},uv2Transform:{value:new nt},alphaMap:{value:null},alphaTest:{value:0}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new le(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new ye(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new ye(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new nt}},sprite:{diffuse:{value:new ye(16777215)},opacity:{value:1},center:{value:new le(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new nt}}},pt={basic:{uniforms:Ge([ie.common,ie.specularmap,ie.envmap,ie.aomap,ie.lightmap,ie.fog]),vertexShader:_e.meshbasic_vert,fragmentShader:_e.meshbasic_frag},lambert:{uniforms:Ge([ie.common,ie.specularmap,ie.envmap,ie.aomap,ie.lightmap,ie.emissivemap,ie.fog,ie.lights,{emissive:{value:new ye(0)}}]),vertexShader:_e.meshlambert_vert,fragmentShader:_e.meshlambert_frag},phong:{uniforms:Ge([ie.common,ie.specularmap,ie.envmap,ie.aomap,ie.lightmap,ie.emissivemap,ie.bumpmap,ie.normalmap,ie.displacementmap,ie.fog,ie.lights,{emissive:{value:new ye(0)},specular:{value:new ye(1118481)},shininess:{value:30}}]),vertexShader:_e.meshphong_vert,fragmentShader:_e.meshphong_frag},standard:{uniforms:Ge([ie.common,ie.envmap,ie.aomap,ie.lightmap,ie.emissivemap,ie.bumpmap,ie.normalmap,ie.displacementmap,ie.roughnessmap,ie.metalnessmap,ie.fog,ie.lights,{emissive:{value:new ye(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:_e.meshphysical_vert,fragmentShader:_e.meshphysical_frag},toon:{uniforms:Ge([ie.common,ie.aomap,ie.lightmap,ie.emissivemap,ie.bumpmap,ie.normalmap,ie.displacementmap,ie.gradientmap,ie.fog,ie.lights,{emissive:{value:new ye(0)}}]),vertexShader:_e.meshtoon_vert,fragmentShader:_e.meshtoon_frag},matcap:{uniforms:Ge([ie.common,ie.bumpmap,ie.normalmap,ie.displacementmap,ie.fog,{matcap:{value:null}}]),vertexShader:_e.meshmatcap_vert,fragmentShader:_e.meshmatcap_frag},points:{uniforms:Ge([ie.points,ie.fog]),vertexShader:_e.points_vert,fragmentShader:_e.points_frag},dashed:{uniforms:Ge([ie.common,ie.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:_e.linedashed_vert,fragmentShader:_e.linedashed_frag},depth:{uniforms:Ge([ie.common,ie.displacementmap]),vertexShader:_e.depth_vert,fragmentShader:_e.depth_frag},normal:{uniforms:Ge([ie.common,ie.bumpmap,ie.normalmap,ie.displacementmap,{opacity:{value:1}}]),vertexShader:_e.meshnormal_vert,fragmentShader:_e.meshnormal_frag},sprite:{uniforms:Ge([ie.sprite,ie.fog]),vertexShader:_e.sprite_vert,fragmentShader:_e.sprite_frag},background:{uniforms:{uvTransform:{value:new nt},t2D:{value:null}},vertexShader:_e.background_vert,fragmentShader:_e.background_frag},cube:{uniforms:Ge([ie.envmap,{opacity:{value:1}}]),vertexShader:_e.cube_vert,fragmentShader:_e.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:_e.equirect_vert,fragmentShader:_e.equirect_frag},distanceRGBA:{uniforms:Ge([ie.common,ie.displacementmap,{referencePosition:{value:new P},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:_e.distanceRGBA_vert,fragmentShader:_e.distanceRGBA_frag},shadow:{uniforms:Ge([ie.lights,ie.fog,{color:{value:new ye(0)},opacity:{value:1}}]),vertexShader:_e.shadow_vert,fragmentShader:_e.shadow_frag}};function ls(a,e,t,n,i){const r=new ye(0);let c,o,l=0,s=null,h=0,u=null;function d(p,g){t.buffers.color.setClear(p.r,p.g,p.b,g,i)}return{getClearColor:function(){return r},setClearColor:function(p,g=1){r.set(p),l=g,d(r,l)},getClearAlpha:function(){return l},setClearAlpha:function(p){l=p,d(r,l)},render:function(p,g){let m=!1,M=!0===g.isScene?g.background:null;M&&M.isTexture&&(M=e.get(M));const w=a.xr,f=w.getSession&&w.getSession();f&&"additive"===f.environmentBlendMode&&(M=null),null===M?d(r,l):M&&M.isColor&&(d(M,1),m=!0),(a.autoClear||m)&&a.clear(a.autoClearColor,a.autoClearDepth,a.autoClearStencil),M&&(M.isCubeTexture||306===M.mapping)?(void 0===o&&(o=new Ee(new Ne(1,1,1),new Ct({name:"BackgroundCubeMaterial",uniforms:nn(pt.cube.uniforms),vertexShader:pt.cube.vertexShader,fragmentShader:pt.cube.fragmentShader,side:1,depthTest:!1,depthWrite:!1,fog:!1})),o.geometry.deleteAttribute("normal"),o.geometry.deleteAttribute("uv"),o.onBeforeRender=function(v,_,x){this.matrixWorld.copyPosition(x.matrixWorld)},Object.defineProperty(o.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),n.update(o)),o.material.uniforms.envMap.value=M,o.material.uniforms.flipEnvMap.value=M.isCubeTexture&&!1===M.isRenderTargetTexture?-1:1,s===M&&h===M.version&&u===a.toneMapping||(o.material.needsUpdate=!0,s=M,h=M.version,u=a.toneMapping),p.unshift(o,o.geometry,o.material,0,0,null)):M&&M.isTexture&&(void 0===c&&(c=new Ee(new Li(2,2),new Ct({name:"BackgroundMaterial",uniforms:nn(pt.background.uniforms),vertexShader:pt.background.vertexShader,fragmentShader:pt.background.fragmentShader,side:0,depthTest:!1,depthWrite:!1,fog:!1})),c.geometry.deleteAttribute("normal"),Object.defineProperty(c.material,"map",{get:function(){return this.uniforms.t2D.value}}),n.update(c)),c.material.uniforms.t2D.value=M,!0===M.matrixAutoUpdate&&M.updateMatrix(),c.material.uniforms.uvTransform.value.copy(M.matrix),s===M&&h===M.version&&u===a.toneMapping||(c.material.needsUpdate=!0,s=M,h=M.version,u=a.toneMapping),p.unshift(c,c.geometry,c.material,0,0,null))}}}function cs(a,e,t,n){const i=a.getParameter(34921),r=n.isWebGL2?null:e.get("OES_vertex_array_object"),c=n.isWebGL2||null!==r,o={},l=d(null);let s=l;function h(_){return n.isWebGL2?a.bindVertexArray(_):r.bindVertexArrayOES(_)}function u(_){return n.isWebGL2?a.deleteVertexArray(_):r.deleteVertexArrayOES(_)}function d(_){const x=[],T=[],A=[];for(let D=0;D<i;D++)x[D]=0,T[D]=0,A[D]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:x,enabledAttributes:T,attributeDivisors:A,object:_,attributes:{},index:null}}function p(){const _=s.newAttributes;for(let x=0,T=_.length;x<T;x++)_[x]=0}function g(_){m(_,0)}function m(_,x){const A=s.enabledAttributes,D=s.attributeDivisors;s.newAttributes[_]=1,0===A[_]&&(a.enableVertexAttribArray(_),A[_]=1),D[_]!==x&&((n.isWebGL2?a:e.get("ANGLE_instanced_arrays"))[n.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](_,x),D[_]=x)}function M(){const _=s.newAttributes,x=s.enabledAttributes;for(let T=0,A=x.length;T<A;T++)x[T]!==_[T]&&(a.disableVertexAttribArray(T),x[T]=0)}function w(_,x,T,A,D,z){!0!==n.isWebGL2||5124!==T&&5125!==T?a.vertexAttribPointer(_,x,T,A,D,z):a.vertexAttribIPointer(_,x,T,D,z)}function f(){v(),s!==l&&(s=l,h(s.object))}function v(){l.geometry=null,l.program=null,l.wireframe=!1}return{setup:function(_,x,T,A,D){let z=!1;if(c){const O=function(R,q,Z){const I=!0===Z.wireframe;let Y=o[R.id];void 0===Y&&(Y={},o[R.id]=Y);let K=Y[q.id];void 0===K&&(K={},Y[q.id]=K);let $=K[I];return void 0===$&&($=d(n.isWebGL2?a.createVertexArray():r.createVertexArrayOES()),K[I]=$),$}(A,T,x);s!==O&&(s=O,h(s.object)),z=function(R,q){const Z=s.attributes,I=R.attributes;let Y=0;for(const K in I){const $=Z[K],B=I[K];if(void 0===$||$.attribute!==B||$.data!==B.data)return!0;Y++}return s.attributesNum!==Y||s.index!==q}(A,D),z&&function(R,q){const Z={},I=R.attributes;let Y=0;for(const K in I){const $=I[K],B={};B.attribute=$,$.data&&(B.data=$.data),Z[K]=B,Y++}s.attributes=Z,s.attributesNum=Y,s.index=q}(A,D)}else{const O=!0===x.wireframe;s.geometry===A.id&&s.program===T.id&&s.wireframe===O||(s.geometry=A.id,s.program=T.id,s.wireframe=O,z=!0)}!0===_.isInstancedMesh&&(z=!0),null!==D&&t.update(D,34963),z&&(function(O,R,q,Z){if(!1===n.isWebGL2&&(O.isInstancedMesh||Z.isInstancedBufferGeometry)&&null===e.get("ANGLE_instanced_arrays"))return;p();const I=Z.attributes,Y=q.getAttributes(),K=R.defaultAttributeValues;for(const $ in Y){const B=Y[$];if(B.location>=0){let Q=I[$];if(void 0===Q&&("instanceMatrix"===$&&O.instanceMatrix&&(Q=O.instanceMatrix),"instanceColor"===$&&O.instanceColor&&(Q=O.instanceColor)),void 0!==Q){const ee=Q.normalized,re=Q.itemSize,ae=t.get(Q);if(void 0===ae)continue;const pe=ae.buffer,E=ae.type,S=ae.bytesPerElement;if(Q.isInterleavedBufferAttribute){const C=Q.data,k=C.stride,F=Q.offset;if(C&&C.isInstancedInterleavedBuffer){for(let y=0;y<B.locationSize;y++)m(B.location+y,C.meshPerAttribute);!0!==O.isInstancedMesh&&void 0===Z._maxInstanceCount&&(Z._maxInstanceCount=C.meshPerAttribute*C.count)}else for(let y=0;y<B.locationSize;y++)g(B.location+y);a.bindBuffer(34962,pe);for(let y=0;y<B.locationSize;y++)w(B.location+y,re/B.locationSize,E,ee,k*S,(F+re/B.locationSize*y)*S)}else{if(Q.isInstancedBufferAttribute){for(let C=0;C<B.locationSize;C++)m(B.location+C,Q.meshPerAttribute);!0!==O.isInstancedMesh&&void 0===Z._maxInstanceCount&&(Z._maxInstanceCount=Q.meshPerAttribute*Q.count)}else for(let C=0;C<B.locationSize;C++)g(B.location+C);a.bindBuffer(34962,pe);for(let C=0;C<B.locationSize;C++)w(B.location+C,re/B.locationSize,E,ee,re*S,re/B.locationSize*C*S)}}else if(void 0!==K){const ee=K[$];if(void 0!==ee)switch(ee.length){case 2:a.vertexAttrib2fv(B.location,ee);break;case 3:a.vertexAttrib3fv(B.location,ee);break;case 4:a.vertexAttrib4fv(B.location,ee);break;default:a.vertexAttrib1fv(B.location,ee)}}}}M()}(_,x,T,A),null!==D&&a.bindBuffer(34963,t.get(D).buffer))},reset:f,resetDefaultState:v,dispose:function(){f();for(const _ in o){const x=o[_];for(const T in x){const A=x[T];for(const D in A)u(A[D].object),delete A[D];delete x[T]}delete o[_]}},releaseStatesOfGeometry:function(_){if(void 0===o[_.id])return;const x=o[_.id];for(const T in x){const A=x[T];for(const D in A)u(A[D].object),delete A[D];delete x[T]}delete o[_.id]},releaseStatesOfProgram:function(_){for(const x in o){const T=o[x];if(void 0===T[_.id])continue;const A=T[_.id];for(const D in A)u(A[D].object),delete A[D];delete T[_.id]}},initAttributes:p,enableAttribute:g,disableUnusedAttributes:M}}function hs(a,e,t,n){const i=n.isWebGL2;let r;this.setMode=function(c){r=c},this.render=function(c,o){a.drawArrays(r,c,o),t.update(o,r,1)},this.renderInstances=function(c,o,l){if(0===l)return;let s,h;if(i)s=a,h="drawArraysInstanced";else if(s=e.get("ANGLE_instanced_arrays"),h="drawArraysInstancedANGLE",null===s)return void console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");s[h](r,c,o,l),t.update(o,r,l)}}function ds(a,e,t){let n;function i(_){if("highp"===_){if(a.getShaderPrecisionFormat(35633,36338).precision>0&&a.getShaderPrecisionFormat(35632,36338).precision>0)return"highp";_="mediump"}return"mediump"===_&&a.getShaderPrecisionFormat(35633,36337).precision>0&&a.getShaderPrecisionFormat(35632,36337).precision>0?"mediump":"lowp"}const r="undefined"!=typeof WebGL2RenderingContext&&a instanceof WebGL2RenderingContext||"undefined"!=typeof WebGL2ComputeRenderingContext&&a instanceof WebGL2ComputeRenderingContext;let c=void 0!==t.precision?t.precision:"highp";const o=i(c);o!==c&&(console.warn("THREE.WebGLRenderer:",c,"not supported, using",o,"instead."),c=o);const l=r||e.has("WEBGL_draw_buffers"),s=!0===t.logarithmicDepthBuffer,h=a.getParameter(34930),u=a.getParameter(35660),d=a.getParameter(3379),p=a.getParameter(34076),g=a.getParameter(34921),m=a.getParameter(36347),M=a.getParameter(36348),w=a.getParameter(36349),f=u>0,v=r||e.has("OES_texture_float");return{isWebGL2:r,drawBuffers:l,getMaxAnisotropy:function(){if(void 0!==n)return n;if(!0===e.has("EXT_texture_filter_anisotropic")){const _=e.get("EXT_texture_filter_anisotropic");n=a.getParameter(_.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else n=0;return n},getMaxPrecision:i,precision:c,logarithmicDepthBuffer:s,maxTextures:h,maxVertexTextures:u,maxTextureSize:d,maxCubemapSize:p,maxAttributes:g,maxVertexUniforms:m,maxVaryings:M,maxFragmentUniforms:w,vertexTextures:f,floatFragmentTextures:v,floatVertexTextures:f&&v,maxSamples:r?a.getParameter(36183):0}}function us(a){const e=this;let t=null,n=0,i=!1,r=!1;const c=new Nt,o=new nt,l={value:null,needsUpdate:!1};function s(){l.value!==t&&(l.value=t,l.needsUpdate=n>0),e.numPlanes=n,e.numIntersection=0}function h(u,d,p,g){const m=null!==u?u.length:0;let M=null;if(0!==m){if(M=l.value,!0!==g||null===M){const w=p+4*m,f=d.matrixWorldInverse;o.getNormalMatrix(f),(null===M||M.length<w)&&(M=new Float32Array(w));for(let v=0,_=p;v!==m;++v,_+=4)c.copy(u[v]).applyMatrix4(f,o),c.normal.toArray(M,_),M[_+3]=c.constant}l.value=M,l.needsUpdate=!0}return e.numPlanes=m,e.numIntersection=0,M}this.uniform=l,this.numPlanes=0,this.numIntersection=0,this.init=function(u,d,p){const g=0!==u.length||d||0!==n||i;return i=d,t=h(u,p,0),n=u.length,g},this.beginShadows=function(){r=!0,h(null)},this.endShadows=function(){r=!1,s()},this.setState=function(u,d,p){const g=u.clippingPlanes,m=u.clipIntersection,M=u.clipShadows,w=a.get(u);if(!i||null===g||0===g.length||r&&!M)r?h(null):s();else{const f=r?0:n,v=4*f;let _=w.clippingState||null;l.value=_,_=h(g,d,v,p);for(let x=0;x!==v;++x)_[x]=t[x];w.clippingState=_,this.numIntersection=m?this.numPlanes:0,this.numPlanes+=f}}}function ps(a){let e=new WeakMap;function t(i,r){return 303===r?i.mapping=301:304===r&&(i.mapping=302),i}function n(i){const r=i.target;r.removeEventListener("dispose",n);const c=e.get(r);void 0!==c&&(e.delete(r),c.dispose())}return{get:function(i){if(i&&i.isTexture&&!1===i.isRenderTargetTexture){const r=i.mapping;if(303===r||304===r){if(e.has(i))return t(e.get(i).texture,i.mapping);{const c=i.image;if(c&&c.height>0){const o=a.getRenderTarget(),l=new yr(c.height/2);return l.fromEquirectangularTexture(a,i),e.set(i,l),a.setRenderTarget(o),i.addEventListener("dispose",n),t(l.texture,i.mapping)}return null}}}return i},dispose:function(){e=new WeakMap}}}pt.physical={uniforms:Ge([pt.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new le(1,1)},clearcoatNormalMap:{value:null},sheen:{value:0},sheenColor:{value:new ye(0)},sheenColorMap:{value:null},sheenRoughness:{value:0},sheenRoughnessMap:{value:null},transmission:{value:0},transmissionMap:{value:null},transmissionSamplerSize:{value:new le},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},attenuationDistance:{value:0},attenuationColor:{value:new ye(0)},specularIntensity:{value:0},specularIntensityMap:{value:null},specularColor:{value:new ye(1,1,1)},specularColorMap:{value:null}}]),vertexShader:_e.meshphysical_vert,fragmentShader:_e.meshphysical_frag};class Gn extends wi{constructor(e=-1,t=1,n=1,i=-1,r=.1,c=2e3){super(),this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=n,this.bottom=i,this.near=r,this.far=c,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=null===e.view?null:Object.assign({},e.view),this}setViewOffset(e,t,n,i,r,c){null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=r,this.view.height=c,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,i=(this.top+this.bottom)/2;let r=n-e,c=n+e,o=i+t,l=i-t;if(null!==this.view&&this.view.enabled){const s=(this.right-this.left)/this.view.fullWidth/this.zoom,h=(this.top-this.bottom)/this.view.fullHeight/this.zoom;r+=s*this.view.offsetX,c=r+s*this.view.width,o-=h*this.view.offsetY,l=o-h*this.view.height}this.projectionMatrix.makeOrthographic(r,c,o,l,this.near,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,null!==this.view&&(t.object.view=Object.assign({},this.view)),t}}Gn.prototype.isOrthographicCamera=!0;class kn extends Ct{constructor(e){super(e),this.type="RawShaderMaterial"}}kn.prototype.isRawShaderMaterial=!0;const ft=Math.pow(2,8),br=[.125,.215,.35,.446,.526,.582],Sr=5+br.length,Wn={3e3:0,3001:1},Pi=new Gn,{_lodPlanes:pn,_sizeLods:wr,_sigmas:Vn}=function ms(){const a=[],e=[],t=[];let n=8;for(let i=0;i<Sr;i++){const r=Math.pow(2,n);e.push(r);let c=1/r;i>4?c=br[i-8+4-1]:0==i&&(c=0),t.push(c);const o=1/(r-1),l=-o/2,s=1+o/2,h=[l,l,s,l,s,s,l,l,s,s,l,s],u=6,d=6,p=3,g=2,m=1,M=new Float32Array(p*d*u),w=new Float32Array(g*d*u),f=new Float32Array(m*d*u);for(let _=0;_<u;_++){const x=_%3*2/3-1,T=_>2?0:-1;M.set([x,T,0,x+2/3,T,0,x+2/3,T+1,0,x,T,0,x+2/3,T+1,0,x,T+1,0],p*d*_),w.set(h,g*d*_),f.set([_,_,_,_,_,_],m*d*_)}const v=new ut;v.setAttribute("position",new Ze(M,p)),v.setAttribute("uv",new Ze(w,g)),v.setAttribute("faceIndex",new Ze(f,m)),a.push(v),n>4&&n--}return{_lodPlanes:a,_sizeLods:e,_sigmas:t}}(),Ar=new ye;let Fi=null;const Bt=(1+Math.sqrt(5))/2,sn=1/Bt,Tr=[new P(1,1,1),new P(-1,1,1),new P(1,1,-1),new P(-1,1,-1),new P(0,Bt,sn),new P(0,Bt,-sn),new P(sn,0,Bt),new P(-sn,0,Bt),new P(Bt,sn,0),new P(-Bt,sn,0)];class fs{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._blurMaterial=function(t){const n=new Float32Array(20),i=new P(0,1,0);return new kn({name:"SphericalGaussianBlur",defines:{n:20},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:n},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:i}},vertexShader:"precision mediump float;precision mediump int;attribute vec3 position;attribute vec2 uv;attribute float faceIndex;varying vec3 vOutputDirection;vec3 getDirection(vec2 uv,float face){uv=2.0*uv-1.0;vec3 direction=vec3(uv,1.0);if(face==0.0){direction=direction.zyx;}else if(face==1.0){direction=direction.xzy;direction.xz*=-1.0;}else if(face==2.0){direction.x*=-1.0;}else if(face==3.0){direction=direction.zyx;direction.xz*=-1.0;}else if(face==4.0){direction=direction.xzy;direction.xy*=-1.0;}else if(face==5.0){direction.z*=-1.0;}return direction;}void main(){vOutputDirection=getDirection(uv,faceIndex);gl_Position=vec4(position,1.0);}",fragmentShader:"precision mediump float;precision mediump int;varying vec3 vOutputDirection;uniform sampler2D envMap;uniform int samples;uniform float weights[n];uniform bool latitudinal;uniform float dTheta;uniform float mipInt;uniform vec3 poleAxis;\nuniform int inputEncoding;\n#include <encodings_pars_fragment>\nvec4 inputTexelToLinear(vec4 value){if(inputEncoding==0){return value;}else{return sRGBToLinear(value);}}vec4 envMapTexelToLinear(vec4 color){return inputTexelToLinear(color);}\n#define ENVMAP_TYPE_CUBE_UV\n#include <cube_uv_reflection_fragment>\nvec3 getSample(float theta,vec3 axis){float cosTheta=cos(theta);vec3 sampleDirection=vOutputDirection*cosTheta+cross(axis,vOutputDirection)*sin(theta)+axis*dot(axis,vOutputDirection)*(1.0-cosTheta);return bilinearCubeUV(envMap,sampleDirection,mipInt);}void main(){vec3 axis=latitudinal?poleAxis:cross(poleAxis,vOutputDirection);if(all(equal(axis,vec3(0.0)))){axis=vec3(vOutputDirection.z,0.0,-vOutputDirection.x);}axis=normalize(axis);gl_FragColor=vec4(0.0,0.0,0.0,1.0);gl_FragColor.rgb+=weights[0]*getSample(0.0,axis);for(int i=1;i<n;i++){if(i>=samples){break;}float theta=dTheta*float(i);gl_FragColor.rgb+=weights[i]*getSample(-1.0*theta,axis);gl_FragColor.rgb+=weights[i]*getSample(theta,axis);}}",blending:0,depthTest:!1,depthWrite:!1})}(),this._equirectShader=null,this._cubemapShader=null,this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,n=.1,i=100){Fi=this._renderer.getRenderTarget();const r=this._allocateTargets();return this._sceneToCubeUV(e,n,i,r),t>0&&this._blur(r,0,0,t),this._applyPMREM(r),this._cleanup(r),r}fromEquirectangular(e){return this._fromTexture(e)}fromCubemap(e){return this._fromTexture(e)}compileCubemapShader(){null===this._cubemapShader&&(this._cubemapShader=Pr(),this._compileMaterial(this._cubemapShader))}compileEquirectangularShader(){null===this._equirectShader&&(this._equirectShader=Lr(),this._compileMaterial(this._equirectShader))}dispose(){this._blurMaterial.dispose(),null!==this._cubemapShader&&this._cubemapShader.dispose(),null!==this._equirectShader&&this._equirectShader.dispose();for(let e=0;e<pn.length;e++)pn[e].dispose()}_cleanup(e){this._pingPongRenderTarget.dispose(),this._renderer.setRenderTarget(Fi),e.scissorTest=!1,Xn(e,0,0,e.width,e.height)}_fromTexture(e){Fi=this._renderer.getRenderTarget();const t=this._allocateTargets(e);return this._textureToCubeUV(e,t),this._applyPMREM(t),this._cleanup(t),t}_allocateTargets(e){const t={magFilter:1006,minFilter:1006,generateMipmaps:!1,type:1016,format:1023,encoding:3e3,depthBuffer:!1},n=Er(t);return n.depthBuffer=!e,this._pingPongRenderTarget=Er(t),n}_compileMaterial(e){const t=new Ee(pn[0],e);this._renderer.compile(t,Pi)}_sceneToCubeUV(e,t,n,i){const r=new Qe(90,1,t,n),c=[1,-1,1,1,1,1],o=[1,1,1,-1,-1,-1],l=this._renderer,s=l.autoClear,h=l.toneMapping;l.getClearColor(Ar),l.toneMapping=0,l.autoClear=!1;const u=new xi({name:"PMREM.Background",side:1,depthWrite:!1,depthTest:!1}),d=new Ee(new Ne,u);let p=!1;const g=e.background;g?g.isColor&&(u.color.copy(g),e.background=null,p=!0):(u.color.copy(Ar),p=!0);for(let m=0;m<6;m++){const M=m%3;0==M?(r.up.set(0,c[m],0),r.lookAt(o[m],0,0)):1==M?(r.up.set(0,0,c[m]),r.lookAt(0,o[m],0)):(r.up.set(0,c[m],0),r.lookAt(0,0,o[m])),Xn(i,M*ft,m>2?ft:0,ft,ft),l.setRenderTarget(i),p&&l.render(d,r),l.render(e,r)}d.geometry.dispose(),d.material.dispose(),l.toneMapping=h,l.autoClear=s,e.background=g}_setEncoding(e,t){e.value=!0===this._renderer.capabilities.isWebGL2&&1023===t.format&&1009===t.type&&3001===t.encoding?Wn[3e3]:Wn[t.encoding]}_textureToCubeUV(e,t){const n=this._renderer,i=301===e.mapping||302===e.mapping;i?null==this._cubemapShader&&(this._cubemapShader=Pr()):null==this._equirectShader&&(this._equirectShader=Lr());const r=i?this._cubemapShader:this._equirectShader,c=new Ee(pn[0],r),o=r.uniforms;o.envMap.value=e,i||o.texelSize.value.set(1/e.image.width,1/e.image.height),this._setEncoding(o.inputEncoding,e),Xn(t,0,0,3*ft,2*ft),n.setRenderTarget(t),n.render(c,Pi)}_applyPMREM(e){const t=this._renderer,n=t.autoClear;t.autoClear=!1;for(let i=1;i<Sr;i++){const r=Math.sqrt(Vn[i]*Vn[i]-Vn[i-1]*Vn[i-1]);this._blur(e,i-1,i,r,Tr[(i-1)%Tr.length])}t.autoClear=n}_blur(e,t,n,i,r){const c=this._pingPongRenderTarget;this._halfBlur(e,c,t,n,i,"latitudinal",r),this._halfBlur(c,e,n,n,i,"longitudinal",r)}_halfBlur(e,t,n,i,r,c,o){const l=this._renderer,s=this._blurMaterial;"latitudinal"!==c&&"longitudinal"!==c&&console.error("blur direction must be either latitudinal or longitudinal!");const h=new Ee(pn[i],s),u=s.uniforms,d=wr[n]-1,p=isFinite(r)?Math.PI/(2*d):2*Math.PI/39,g=r/p,m=isFinite(r)?1+Math.floor(3*g):20;m>20&&console.warn(`sigmaRadians, ${r}, is too large and will clip, as it requested ${m} samples when the maximum is set to 20`);const M=[];let w=0;for(let v=0;v<20;++v){const _=v/g,x=Math.exp(-_*_/2);M.push(x),0==v?w+=x:v<m&&(w+=2*x)}for(let v=0;v<M.length;v++)M[v]=M[v]/w;u.envMap.value=e.texture,u.samples.value=m,u.weights.value=M,u.latitudinal.value="latitudinal"===c,o&&(u.poleAxis.value=o),u.dTheta.value=p,u.mipInt.value=8-n;const f=wr[i];Xn(t,3*Math.max(0,ft-2*f),(0===i?0:2*ft)+2*f*(i>4?i-8+4:0),3*f,2*f),l.setRenderTarget(t),l.render(h,Pi)}}function Er(a){const e=new it(3*ft,3*ft,a);return e.texture.mapping=306,e.texture.name="PMREM.cubeUv",e.scissorTest=!0,e}function Xn(a,e,t,n,i){a.viewport.set(e,t,n,i),a.scissor.set(e,t,n,i)}function Lr(){const a=new le(1,1);return new kn({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null},texelSize:{value:a},inputEncoding:{value:Wn[3e3]}},vertexShader:"precision mediump float;precision mediump int;attribute vec3 position;attribute vec2 uv;attribute float faceIndex;varying vec3 vOutputDirection;vec3 getDirection(vec2 uv,float face){uv=2.0*uv-1.0;vec3 direction=vec3(uv,1.0);if(face==0.0){direction=direction.zyx;}else if(face==1.0){direction=direction.xzy;direction.xz*=-1.0;}else if(face==2.0){direction.x*=-1.0;}else if(face==3.0){direction=direction.zyx;direction.xz*=-1.0;}else if(face==4.0){direction=direction.xzy;direction.xy*=-1.0;}else if(face==5.0){direction.z*=-1.0;}return direction;}void main(){vOutputDirection=getDirection(uv,faceIndex);gl_Position=vec4(position,1.0);}",fragmentShader:"precision mediump float;precision mediump int;varying vec3 vOutputDirection;uniform sampler2D envMap;uniform vec2 texelSize;\nuniform int inputEncoding;\n#include <encodings_pars_fragment>\nvec4 inputTexelToLinear(vec4 value){if(inputEncoding==0){return value;}else{return sRGBToLinear(value);}}vec4 envMapTexelToLinear(vec4 color){return inputTexelToLinear(color);}\n#include <common>\nvoid main(){gl_FragColor=vec4(0.0,0.0,0.0,1.0);vec3 outputDirection=normalize(vOutputDirection);vec2 uv=equirectUv(outputDirection);vec2 f=fract(uv/texelSize-0.5);uv-=f*texelSize;vec3 tl=envMapTexelToLinear(texture2D(envMap,uv)).rgb;uv.x+=texelSize.x;vec3 tr=envMapTexelToLinear(texture2D(envMap,uv)).rgb;uv.y+=texelSize.y;vec3 br=envMapTexelToLinear(texture2D(envMap,uv)).rgb;uv.x-=texelSize.x;vec3 bl=envMapTexelToLinear(texture2D(envMap,uv)).rgb;vec3 tm=mix(tl,tr,f.x);vec3 bm=mix(bl,br,f.x);gl_FragColor.rgb=mix(tm,bm,f.y);}",blending:0,depthTest:!1,depthWrite:!1})}function Pr(){return new kn({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},inputEncoding:{value:Wn[3e3]}},vertexShader:"precision mediump float;precision mediump int;attribute vec3 position;attribute vec2 uv;attribute float faceIndex;varying vec3 vOutputDirection;vec3 getDirection(vec2 uv,float face){uv=2.0*uv-1.0;vec3 direction=vec3(uv,1.0);if(face==0.0){direction=direction.zyx;}else if(face==1.0){direction=direction.xzy;direction.xz*=-1.0;}else if(face==2.0){direction.x*=-1.0;}else if(face==3.0){direction=direction.zyx;direction.xz*=-1.0;}else if(face==4.0){direction=direction.xzy;direction.xy*=-1.0;}else if(face==5.0){direction.z*=-1.0;}return direction;}void main(){vOutputDirection=getDirection(uv,faceIndex);gl_Position=vec4(position,1.0);}",fragmentShader:"precision mediump float;precision mediump int;varying vec3 vOutputDirection;uniform samplerCube envMap;\nuniform int inputEncoding;\n#include <encodings_pars_fragment>\nvec4 inputTexelToLinear(vec4 value){if(inputEncoding==0){return value;}else{return sRGBToLinear(value);}}vec4 envMapTexelToLinear(vec4 color){return inputTexelToLinear(color);}\nvoid main(){gl_FragColor=envMapTexelToLinear(textureCube(envMap,vec3(-vOutputDirection.x,vOutputDirection.yz)));}",blending:0,depthTest:!1,depthWrite:!1})}function gs(a){let e=new WeakMap,t=null;function n(i){const r=i.target;r.removeEventListener("dispose",n);const c=e.get(r);void 0!==c&&(e.delete(r),c.dispose())}return{get:function(i){if(i&&i.isTexture&&!1===i.isRenderTargetTexture){const r=i.mapping,c=303===r||304===r,o=301===r||302===r;if(c||o){if(e.has(i))return e.get(i).texture;{const l=i.image;if(c&&l&&l.height>0||o&&l&&function(s){let h=0;for(let d=0;d<6;d++)void 0!==s[d]&&h++;return 6===h}(l)){const s=a.getRenderTarget();null===t&&(t=new fs(a));const h=c?t.fromEquirectangular(i):t.fromCubemap(i);return e.set(i,h),a.setRenderTarget(s),i.addEventListener("dispose",n),h.texture}return null}}}return i},dispose:function(){e=new WeakMap,null!==t&&(t.dispose(),t=null)}}}function xs(a){const e={};function t(n){if(void 0!==e[n])return e[n];let i;switch(n){case"WEBGL_depth_texture":i=a.getExtension("WEBGL_depth_texture")||a.getExtension("MOZ_WEBGL_depth_texture")||a.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":i=a.getExtension("EXT_texture_filter_anisotropic")||a.getExtension("MOZ_EXT_texture_filter_anisotropic")||a.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":i=a.getExtension("WEBGL_compressed_texture_s3tc")||a.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||a.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":i=a.getExtension("WEBGL_compressed_texture_pvrtc")||a.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:i=a.getExtension(n)}return e[n]=i,i}return{has:function(n){return null!==t(n)},init:function(n){n.isWebGL2?t("EXT_color_buffer_float"):(t("WEBGL_depth_texture"),t("OES_texture_float"),t("OES_texture_half_float"),t("OES_texture_half_float_linear"),t("OES_standard_derivatives"),t("OES_element_index_uint"),t("OES_vertex_array_object"),t("ANGLE_instanced_arrays")),t("OES_texture_float_linear"),t("EXT_color_buffer_half_float"),t("WEBGL_multisampled_render_to_texture")},get:function(n){const i=t(n);return null===i&&console.warn("THREE.WebGLRenderer: "+n+" extension not supported."),i}}}function _s(a,e,t,n){const i={},r=new WeakMap;function c(l){const s=l.target;null!==s.index&&e.remove(s.index);for(const u in s.attributes)e.remove(s.attributes[u]);s.removeEventListener("dispose",c),delete i[s.id];const h=r.get(s);h&&(e.remove(h),r.delete(s)),n.releaseStatesOfGeometry(s),!0===s.isInstancedBufferGeometry&&delete s._maxInstanceCount,t.memory.geometries--}function o(l){const s=[],h=l.index,u=l.attributes.position;let d=0;if(null!==h){const m=h.array;d=h.version;for(let M=0,w=m.length;M<w;M+=3){const f=m[M+0],v=m[M+1],_=m[M+2];s.push(f,v,v,_,_,f)}}else{d=u.version;for(let M=0,w=u.array.length/3-1;M<w;M+=3){const f=M+0,v=M+1,_=M+2;s.push(f,v,v,_,_,f)}}const p=new(ir(s)>65535?xr:gr)(s,1);p.version=d;const g=r.get(l);g&&e.remove(g),r.set(l,p)}return{get:function(l,s){return!0===i[s.id]||(s.addEventListener("dispose",c),i[s.id]=!0,t.memory.geometries++),s},update:function(l){const s=l.attributes;for(const u in s)e.update(s[u],34962);const h=l.morphAttributes;for(const u in h){const d=h[u];for(let p=0,g=d.length;p<g;p++)e.update(d[p],34962)}},getWireframeAttribute:function(l){const s=r.get(l);if(s){const h=l.index;null!==h&&s.version<h.version&&o(l)}else o(l);return r.get(l)}}}function vs(a,e,t,n){const i=n.isWebGL2;let r,c,o;this.setMode=function(l){r=l},this.setIndex=function(l){c=l.type,o=l.bytesPerElement},this.render=function(l,s){a.drawElements(r,s,c,l*o),t.update(s,r,1)},this.renderInstances=function(l,s,h){if(0===h)return;let u,d;if(i)u=a,d="drawElementsInstanced";else if(u=e.get("ANGLE_instanced_arrays"),d="drawElementsInstancedANGLE",null===u)return void console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");u[d](r,s,c,l*o,h),t.update(s,r,h)}}function ys(a){const e={frame:0,calls:0,triangles:0,points:0,lines:0};return{memory:{geometries:0,textures:0},render:e,programs:null,autoReset:!0,reset:function(){e.frame++,e.calls=0,e.triangles=0,e.points=0,e.lines=0},update:function(t,n,i){switch(e.calls++,n){case 4:e.triangles+=i*(t/3);break;case 1:e.lines+=i*(t/2);break;case 3:e.lines+=i*(t-1);break;case 2:e.lines+=i*t;break;case 0:e.points+=i*t;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",n)}}}}class Di extends Be{constructor(e=null,t=1,n=1,i=1){super(null),this.image={data:e,width:t,height:n,depth:i},this.magFilter=1003,this.minFilter=1003,this.wrapR=1001,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}function Ms(a,e){return a[0]-e[0]}function bs(a,e){return Math.abs(e[1])-Math.abs(a[1])}function Fr(a,e){let t=1;const n=e.isInterleavedBufferAttribute?e.data.array:e.array;n instanceof Int8Array?t=127:n instanceof Int16Array?t=32767:n instanceof Int32Array?t=2147483647:console.error("THREE.WebGLMorphtargets: Unsupported morph attribute data type: ",n),a.divideScalar(t)}function Ss(a,e,t){const n={},i=new Float32Array(8),r=new WeakMap,c=new P,o=[];for(let l=0;l<8;l++)o[l]=[l,0];return{update:function(l,s,h,u){const d=l.morphTargetInfluences;if(!0===e.isWebGL2){const p=s.morphAttributes.position.length;let g=r.get(s);if(void 0===g||g.count!==p){void 0!==g&&g.texture.dispose();const w=void 0!==s.morphAttributes.normal,f=s.morphAttributes.position,v=s.morphAttributes.normal||[],_=!0===w?2:1;let x=s.attributes.position.count*_,T=1;x>e.maxTextureSize&&(T=Math.ceil(x/e.maxTextureSize),x=e.maxTextureSize);const A=new Float32Array(x*T*4*p),D=new Di(A,x,T,p);D.format=1023,D.type=1015,D.needsUpdate=!0;const z=4*_;for(let O=0;O<p;O++){const R=f[O],q=v[O],Z=x*T*4*O;for(let I=0;I<R.count;I++){c.fromBufferAttribute(R,I),!0===R.normalized&&Fr(c,R);const Y=I*z;A[Z+Y+0]=c.x,A[Z+Y+1]=c.y,A[Z+Y+2]=c.z,A[Z+Y+3]=0,!0===w&&(c.fromBufferAttribute(q,I),!0===q.normalized&&Fr(c,q),A[Z+Y+4]=c.x,A[Z+Y+5]=c.y,A[Z+Y+6]=c.z,A[Z+Y+7]=0)}}g={count:p,texture:D,size:new le(x,T)},r.set(s,g)}let m=0;for(let w=0;w<d.length;w++)m+=d[w];const M=s.morphTargetsRelative?1:1-m;u.getUniforms().setValue(a,"morphTargetBaseInfluence",M),u.getUniforms().setValue(a,"morphTargetInfluences",d),u.getUniforms().setValue(a,"morphTargetsTexture",g.texture,t),u.getUniforms().setValue(a,"morphTargetsTextureSize",g.size)}else{const p=void 0===d?0:d.length;let g=n[s.id];if(void 0===g||g.length!==p){g=[];for(let v=0;v<p;v++)g[v]=[v,0];n[s.id]=g}for(let v=0;v<p;v++){const _=g[v];_[0]=v,_[1]=d[v]}g.sort(bs);for(let v=0;v<8;v++)v<p&&g[v][1]?(o[v][0]=g[v][0],o[v][1]=g[v][1]):(o[v][0]=Number.MAX_SAFE_INTEGER,o[v][1]=0);o.sort(Ms);const m=s.morphAttributes.position,M=s.morphAttributes.normal;let w=0;for(let v=0;v<8;v++){const _=o[v],x=_[0],T=_[1];x!==Number.MAX_SAFE_INTEGER&&T?(m&&s.getAttribute("morphTarget"+v)!==m[x]&&s.setAttribute("morphTarget"+v,m[x]),M&&s.getAttribute("morphNormal"+v)!==M[x]&&s.setAttribute("morphNormal"+v,M[x]),i[v]=T,w+=T):(m&&!0===s.hasAttribute("morphTarget"+v)&&s.deleteAttribute("morphTarget"+v),M&&!0===s.hasAttribute("morphNormal"+v)&&s.deleteAttribute("morphNormal"+v),i[v]=0)}const f=s.morphTargetsRelative?1:1-w;u.getUniforms().setValue(a,"morphTargetBaseInfluence",f),u.getUniforms().setValue(a,"morphTargetInfluences",i)}}}}function ws(a,e,t,n){let i=new WeakMap;function r(c){const o=c.target;o.removeEventListener("dispose",r),t.remove(o.instanceMatrix),null!==o.instanceColor&&t.remove(o.instanceColor)}return{update:function(c){const o=n.render.frame,s=e.get(c,c.geometry);return i.get(s)!==o&&(e.update(s),i.set(s,o)),c.isInstancedMesh&&(!1===c.hasEventListener("dispose",r)&&c.addEventListener("dispose",r),t.update(c.instanceMatrix,34962),null!==c.instanceColor&&t.update(c.instanceColor,34962)),s},dispose:function(){i=new WeakMap}}}Di.prototype.isDataTexture2DArray=!0;class Cr extends Be{constructor(e=null,t=1,n=1,i=1){super(null),this.image={data:e,width:t,height:n,depth:i},this.magFilter=1003,this.minFilter=1003,this.wrapR=1001,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}Cr.prototype.isDataTexture3D=!0;const Nr=new Be,Dr=new Di,Ir=new Cr,Rr=new Ai,Ur=[],zr=[],Or=new Float32Array(16),Br=new Float32Array(9),Gr=new Float32Array(4);function on(a,e,t){const n=a[0];if(n<=0||n>0)return a;const i=e*t;let r=Ur[i];if(void 0===r&&(r=new Float32Array(i),Ur[i]=r),0!==e){n.toArray(r,0);for(let c=1,o=0;c!==e;++c)o+=t,a[c].toArray(r,o)}return r}function Ve(a,e){if(a.length!==e.length)return!1;for(let t=0,n=a.length;t<n;t++)if(a[t]!==e[t])return!1;return!0}function ke(a,e){for(let t=0,n=e.length;t<n;t++)a[t]=e[t]}function Yn(a,e){let t=zr[e];void 0===t&&(t=new Int32Array(e),zr[e]=t);for(let n=0;n!==e;++n)t[n]=a.allocateTextureUnit();return t}function As(a,e){const t=this.cache;t[0]!==e&&(a.uniform1f(this.addr,e),t[0]=e)}function Ts(a,e){const t=this.cache;if(void 0!==e.x)t[0]===e.x&&t[1]===e.y||(a.uniform2f(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(Ve(t,e))return;a.uniform2fv(this.addr,e),ke(t,e)}}function Es(a,e){const t=this.cache;if(void 0!==e.x)t[0]===e.x&&t[1]===e.y&&t[2]===e.z||(a.uniform3f(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else if(void 0!==e.r)t[0]===e.r&&t[1]===e.g&&t[2]===e.b||(a.uniform3f(this.addr,e.r,e.g,e.b),t[0]=e.r,t[1]=e.g,t[2]=e.b);else{if(Ve(t,e))return;a.uniform3fv(this.addr,e),ke(t,e)}}function Ls(a,e){const t=this.cache;if(void 0!==e.x)t[0]===e.x&&t[1]===e.y&&t[2]===e.z&&t[3]===e.w||(a.uniform4f(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(Ve(t,e))return;a.uniform4fv(this.addr,e),ke(t,e)}}function Ps(a,e){const t=this.cache,n=e.elements;if(void 0===n){if(Ve(t,e))return;a.uniformMatrix2fv(this.addr,!1,e),ke(t,e)}else{if(Ve(t,n))return;Gr.set(n),a.uniformMatrix2fv(this.addr,!1,Gr),ke(t,n)}}function Fs(a,e){const t=this.cache,n=e.elements;if(void 0===n){if(Ve(t,e))return;a.uniformMatrix3fv(this.addr,!1,e),ke(t,e)}else{if(Ve(t,n))return;Br.set(n),a.uniformMatrix3fv(this.addr,!1,Br),ke(t,n)}}function Cs(a,e){const t=this.cache,n=e.elements;if(void 0===n){if(Ve(t,e))return;a.uniformMatrix4fv(this.addr,!1,e),ke(t,e)}else{if(Ve(t,n))return;Or.set(n),a.uniformMatrix4fv(this.addr,!1,Or),ke(t,n)}}function Ns(a,e){const t=this.cache;t[0]!==e&&(a.uniform1i(this.addr,e),t[0]=e)}function Ds(a,e){const t=this.cache;Ve(t,e)||(a.uniform2iv(this.addr,e),ke(t,e))}function Is(a,e){const t=this.cache;Ve(t,e)||(a.uniform3iv(this.addr,e),ke(t,e))}function Rs(a,e){const t=this.cache;Ve(t,e)||(a.uniform4iv(this.addr,e),ke(t,e))}function Us(a,e){const t=this.cache;t[0]!==e&&(a.uniform1ui(this.addr,e),t[0]=e)}function zs(a,e){const t=this.cache;Ve(t,e)||(a.uniform2uiv(this.addr,e),ke(t,e))}function Os(a,e){const t=this.cache;Ve(t,e)||(a.uniform3uiv(this.addr,e),ke(t,e))}function Bs(a,e){const t=this.cache;Ve(t,e)||(a.uniform4uiv(this.addr,e),ke(t,e))}function Gs(a,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(a.uniform1i(this.addr,i),n[0]=i),t.safeSetTexture2D(e||Nr,i)}function ks(a,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(a.uniform1i(this.addr,i),n[0]=i),t.setTexture3D(e||Ir,i)}function Hs(a,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(a.uniform1i(this.addr,i),n[0]=i),t.safeSetTextureCube(e||Rr,i)}function Ws(a,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(a.uniform1i(this.addr,i),n[0]=i),t.setTexture2DArray(e||Dr,i)}function Vs(a,e){a.uniform1fv(this.addr,e)}function Xs(a,e){const t=on(e,this.size,2);a.uniform2fv(this.addr,t)}function Ys(a,e){const t=on(e,this.size,3);a.uniform3fv(this.addr,t)}function js(a,e){const t=on(e,this.size,4);a.uniform4fv(this.addr,t)}function Qs(a,e){const t=on(e,this.size,4);a.uniformMatrix2fv(this.addr,!1,t)}function qs(a,e){const t=on(e,this.size,9);a.uniformMatrix3fv(this.addr,!1,t)}function Zs(a,e){const t=on(e,this.size,16);a.uniformMatrix4fv(this.addr,!1,t)}function Js(a,e){a.uniform1iv(this.addr,e)}function Ks(a,e){a.uniform2iv(this.addr,e)}function $s(a,e){a.uniform3iv(this.addr,e)}function eo(a,e){a.uniform4iv(this.addr,e)}function to(a,e){a.uniform1uiv(this.addr,e)}function no(a,e){a.uniform2uiv(this.addr,e)}function io(a,e){a.uniform3uiv(this.addr,e)}function ro(a,e){a.uniform4uiv(this.addr,e)}function ao(a,e,t){const n=e.length,i=Yn(t,n);a.uniform1iv(this.addr,i);for(let r=0;r!==n;++r)t.safeSetTexture2D(e[r]||Nr,i[r])}function so(a,e,t){const n=e.length,i=Yn(t,n);a.uniform1iv(this.addr,i);for(let r=0;r!==n;++r)t.setTexture3D(e[r]||Ir,i[r])}function oo(a,e,t){const n=e.length,i=Yn(t,n);a.uniform1iv(this.addr,i);for(let r=0;r!==n;++r)t.safeSetTextureCube(e[r]||Rr,i[r])}function lo(a,e,t){const n=e.length,i=Yn(t,n);a.uniform1iv(this.addr,i);for(let r=0;r!==n;++r)t.setTexture2DArray(e[r]||Dr,i[r])}function co(a,e,t){this.id=a,this.addr=t,this.cache=[],this.setValue=function(n){switch(n){case 5126:return As;case 35664:return Ts;case 35665:return Es;case 35666:return Ls;case 35674:return Ps;case 35675:return Fs;case 35676:return Cs;case 5124:case 35670:return Ns;case 35667:case 35671:return Ds;case 35668:case 35672:return Is;case 35669:case 35673:return Rs;case 5125:return Us;case 36294:return zs;case 36295:return Os;case 36296:return Bs;case 35678:case 36198:case 36298:case 36306:case 35682:return Gs;case 35679:case 36299:case 36307:return ks;case 35680:case 36300:case 36308:case 36293:return Hs;case 36289:case 36303:case 36311:case 36292:return Ws}}(e.type)}function kr(a,e,t){this.id=a,this.addr=t,this.cache=[],this.size=e.size,this.setValue=function(n){switch(n){case 5126:return Vs;case 35664:return Xs;case 35665:return Ys;case 35666:return js;case 35674:return Qs;case 35675:return qs;case 35676:return Zs;case 5124:case 35670:return Js;case 35667:case 35671:return Ks;case 35668:case 35672:return $s;case 35669:case 35673:return eo;case 5125:return to;case 36294:return no;case 36295:return io;case 36296:return ro;case 35678:case 36198:case 36298:case 36306:case 35682:return ao;case 35679:case 36299:case 36307:return so;case 35680:case 36300:case 36308:case 36293:return oo;case 36289:case 36303:case 36311:case 36292:return lo}}(e.type)}function Hr(a){this.id=a,this.seq=[],this.map={}}kr.prototype.updateCache=function(a){const e=this.cache;a instanceof Float32Array&&e.length!==a.length&&(this.cache=new Float32Array(a.length)),ke(e,a)},Hr.prototype.setValue=function(a,e,t){const n=this.seq;for(let i=0,r=n.length;i!==r;++i){const c=n[i];c.setValue(a,e[c.id],t)}};const Ii=/(\w+)(\])?(\[|\.)?/g;function Wr(a,e){a.seq.push(e),a.map[e.id]=e}function ho(a,e,t){const n=a.name,i=n.length;for(Ii.lastIndex=0;;){const r=Ii.exec(n),c=Ii.lastIndex;let o=r[1];const s=r[3];if("]"===r[2]&&(o|=0),void 0===s||"["===s&&c+2===i){Wr(t,void 0===s?new co(o,a,e):new kr(o,a,e));break}{let h=t.map[o];void 0===h&&(h=new Hr(o),Wr(t,h)),t=h}}}function Dt(a,e){this.seq=[],this.map={};const t=a.getProgramParameter(e,35718);for(let n=0;n<t;++n){const i=a.getActiveUniform(e,n);ho(i,a.getUniformLocation(e,i.name),this)}}function Vr(a,e,t){const n=a.createShader(e);return a.shaderSource(n,t),a.compileShader(n),n}Dt.prototype.setValue=function(a,e,t,n){const i=this.map[e];void 0!==i&&i.setValue(a,t,n)},Dt.prototype.setOptional=function(a,e,t){const n=e[t];void 0!==n&&this.setValue(a,t,n)},Dt.upload=function(a,e,t,n){for(let i=0,r=e.length;i!==r;++i){const c=e[i],o=t[c.id];!1!==o.needsUpdate&&c.setValue(a,o.value,n)}},Dt.seqWithValue=function(a,e){const t=[];for(let n=0,i=a.length;n!==i;++n){const r=a[n];r.id in e&&t.push(r)}return t};let uo=0;function Xr(a){switch(a){case 3e3:return["Linear","( value )"];case 3001:return["sRGB","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported encoding:",a),["Linear","( value )"]}}function Yr(a,e,t){const n=a.getShaderParameter(e,35713),i=a.getShaderInfoLog(e).trim();return n&&""===i?"":t.toUpperCase()+"\n\n"+i+"\n\n"+function(r){const c=r.split("\n");for(let o=0;o<c.length;o++)c[o]=o+1+": "+c[o];return c.join("\n")}(a.getShaderSource(e))}function Gt(a,e){const t=Xr(e);return"vec4 "+a+"( vec4 value ) { return "+t[0]+"ToLinear"+t[1]+"; }"}function po(a,e){const t=Xr(e);return"vec4 "+a+"( vec4 value ) { return LinearTo"+t[0]+t[1]+"; }"}function fo(a,e){let t;switch(e){case 1:t="Linear";break;case 2:t="Reinhard";break;case 3:t="OptimizedCineon";break;case 4:t="ACESFilmic";break;case 5:t="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),t="Linear"}return"vec3 "+a+"( vec3 color ) { return "+t+"ToneMapping( color ); }"}function fn(a){return""!==a}function jr(a,e){return a.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function Qr(a,e){return a.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const mo=/^[ \t]*#include +<([\w\d./]+)>/gm;function Ri(a){return a.replace(mo,go)}function go(a,e){const t=_e[e];if(void 0===t)throw new Error("Can not resolve #include <"+e+">");return Ri(t)}const xo=/#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g,_o=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function qr(a){return a.replace(_o,Zr).replace(xo,vo)}function vo(a,e,t,n){return console.warn("WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead."),Zr(0,e,t,n)}function Zr(a,e,t,n){let i="";for(let r=parseInt(e);r<parseInt(t);r++)i+=n.replace(/\[\s*i\s*\]/g,"[ "+r+" ]").replace(/UNROLLED_LOOP_INDEX/g,r);return i}function Jr(a){let e="precision "+a.precision+" float;\nprecision "+a.precision+" int;";return"highp"===a.precision?e+="\n#define HIGH_PRECISION":"mediump"===a.precision?e+="\n#define MEDIUM_PRECISION":"lowp"===a.precision&&(e+="\n#define LOW_PRECISION"),e}function yo(a,e,t,n){const i=a.getContext(),r=t.defines;let c=t.vertexShader,o=t.fragmentShader;const l=function(A){let D="SHADOWMAP_TYPE_BASIC";return 1===A.shadowMapType?D="SHADOWMAP_TYPE_PCF":2===A.shadowMapType?D="SHADOWMAP_TYPE_PCF_SOFT":3===A.shadowMapType&&(D="SHADOWMAP_TYPE_VSM"),D}(t),s=function(A){let D="ENVMAP_TYPE_CUBE";if(A.envMap)switch(A.envMapMode){case 301:case 302:D="ENVMAP_TYPE_CUBE";break;case 306:case 307:D="ENVMAP_TYPE_CUBE_UV"}return D}(t),h=function(A){let D="ENVMAP_MODE_REFLECTION";if(A.envMap)switch(A.envMapMode){case 302:case 307:D="ENVMAP_MODE_REFRACTION"}return D}(t),u=function(A){let D="ENVMAP_BLENDING_NONE";if(A.envMap)switch(A.combine){case 0:D="ENVMAP_BLENDING_MULTIPLY";break;case 1:D="ENVMAP_BLENDING_MIX";break;case 2:D="ENVMAP_BLENDING_ADD"}return D}(t),d=t.isWebGL2?"":[(A=t).extensionDerivatives||A.envMapCubeUV||A.bumpMap||A.tangentSpaceNormalMap||A.clearcoatNormalMap||A.flatShading||"physical"===A.shaderID?"#extension GL_OES_standard_derivatives : enable":"",(A.extensionFragDepth||A.logarithmicDepthBuffer)&&A.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",A.extensionDrawBuffers&&A.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(A.extensionShaderTextureLOD||A.envMap||A.transmission)&&A.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(fn).join("\n"),p=function(A){const D=[];for(const z in A){const O=A[z];!1!==O&&D.push("#define "+z+" "+O)}return D.join("\n")}(r),g=i.createProgram();var A;let m,M,w=t.glslVersion?"#version "+t.glslVersion+"\n":"";t.isRawShaderMaterial?(m=[p].filter(fn).join("\n"),m.length>0&&(m+="\n"),M=[d,p].filter(fn).join("\n"),M.length>0&&(M+="\n")):(m=[Jr(t),"#define SHADER_NAME "+t.shaderName,p,t.instancing?"#define USE_INSTANCING":"",t.instancingColor?"#define USE_INSTANCING_COLOR":"",t.supportsVertexTextures?"#define VERTEX_TEXTURES":"","#define MAX_BONES "+t.maxBones,t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+h:"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMap&&t.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",t.normalMap&&t.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.displacementMap&&t.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",t.specularColorMap?"#define USE_SPECULARCOLORMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.sheenColorMap?"#define USE_SHEENCOLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",t.vertexTangents?"#define USE_TANGENT":"",t.vertexColors?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUvs?"#define USE_UV":"",t.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",t.flatShading?"#define FLAT_SHADED":"",t.skinning?"#define USE_SKINNING":"",t.useVertexTexture?"#define BONE_TEXTURE":"",t.morphTargets?"#define USE_MORPHTARGETS":"",t.morphNormals&&!1===t.flatShading?"#define USE_MORPHNORMALS":"",t.morphTargets&&t.isWebGL2?"#define MORPHTARGETS_TEXTURE":"",t.morphTargets&&t.isWebGL2?"#define MORPHTARGETS_COUNT "+t.morphTargetsCount:"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+l:"",t.sizeAttenuation?"#define USE_SIZEATTENUATION":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","\tattribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","\tattribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","\tattribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","\tattribute vec4 color;","#elif defined( USE_COLOR )","\tattribute vec3 color;","#endif","#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )","\tattribute vec3 morphTarget0;","\tattribute vec3 morphTarget1;","\tattribute vec3 morphTarget2;","\tattribute vec3 morphTarget3;","\t#ifdef USE_MORPHNORMALS","\t\tattribute vec3 morphNormal0;","\t\tattribute vec3 morphNormal1;","\t\tattribute vec3 morphNormal2;","\t\tattribute vec3 morphNormal3;","\t#else","\t\tattribute vec3 morphTarget4;","\t\tattribute vec3 morphTarget5;","\t\tattribute vec3 morphTarget6;","\t\tattribute vec3 morphTarget7;","\t#endif","#endif","#ifdef USE_SKINNING","\tattribute vec4 skinIndex;","\tattribute vec4 skinWeight;","#endif","\n"].filter(fn).join("\n"),M=[d,Jr(t),"#define SHADER_NAME "+t.shaderName,p,t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.matcap?"#define USE_MATCAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+s:"",t.envMap?"#define "+h:"",t.envMap?"#define "+u:"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMap&&t.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",t.normalMap&&t.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",t.clearcoat?"#define USE_CLEARCOAT":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",t.specularColorMap?"#define USE_SPECULARCOLORMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaTest?"#define USE_ALPHATEST":"",t.sheen?"#define USE_SHEEN":"",t.sheenColorMap?"#define USE_SHEENCOLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.vertexTangents?"#define USE_TANGENT":"",t.vertexColors||t.instancingColor?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUvs?"#define USE_UV":"",t.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",t.gradientMap?"#define USE_GRADIENTMAP":"",t.flatShading?"#define FLAT_SHADED":"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+l:"",t.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",t.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"",(t.extensionShaderTextureLOD||t.envMap)&&t.rendererExtensionShaderTextureLod?"#define TEXTURE_LOD_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",0!==t.toneMapping?"#define TONE_MAPPING":"",0!==t.toneMapping?_e.tonemapping_pars_fragment:"",0!==t.toneMapping?fo("toneMapping",t.toneMapping):"",t.dithering?"#define DITHERING":"",1022===t.format?"#define OPAQUE":"",_e.encodings_pars_fragment,t.map?Gt("mapTexelToLinear",t.mapEncoding):"",t.matcap?Gt("matcapTexelToLinear",t.matcapEncoding):"",t.envMap?Gt("envMapTexelToLinear",t.envMapEncoding):"",t.emissiveMap?Gt("emissiveMapTexelToLinear",t.emissiveMapEncoding):"",t.specularColorMap?Gt("specularColorMapTexelToLinear",t.specularColorMapEncoding):"",t.sheenColorMap?Gt("sheenColorMapTexelToLinear",t.sheenColorMapEncoding):"",t.lightMap?Gt("lightMapTexelToLinear",t.lightMapEncoding):"",po("linearToOutputTexel",t.outputEncoding),t.depthPacking?"#define DEPTH_PACKING "+t.depthPacking:"","\n"].filter(fn).join("\n")),c=Ri(c),c=jr(c,t),c=Qr(c,t),o=Ri(o),o=jr(o,t),o=Qr(o,t),c=qr(c),o=qr(o),t.isWebGL2&&!0!==t.isRawShaderMaterial&&(w="#version 300 es\n",m=["precision mediump sampler2DArray;","#define attribute in","#define varying out","#define texture2D texture"].join("\n")+"\n"+m,M=["#define varying in","300 es"===t.glslVersion?"":"layout(location = 0) out highp vec4 pc_fragColor;","300 es"===t.glslVersion?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join("\n")+"\n"+M);const f=w+M+o,v=Vr(i,35633,w+m+c),_=Vr(i,35632,f);if(i.attachShader(g,v),i.attachShader(g,_),void 0!==t.index0AttributeName?i.bindAttribLocation(g,0,t.index0AttributeName):!0===t.morphTargets&&i.bindAttribLocation(g,0,"position"),i.linkProgram(g),a.debug.checkShaderErrors){const A=i.getProgramInfoLog(g).trim(),D=i.getShaderInfoLog(v).trim(),z=i.getShaderInfoLog(_).trim();let O=!0,R=!0;if(!1===i.getProgramParameter(g,35714)){O=!1;const q=Yr(i,v,"vertex"),Z=Yr(i,_,"fragment");console.error("THREE.WebGLProgram: Shader Error "+i.getError()+" - VALIDATE_STATUS "+i.getProgramParameter(g,35715)+"\n\nProgram Info Log: "+A+"\n"+q+"\n"+Z)}else""!==A?console.warn("THREE.WebGLProgram: Program Info Log:",A):""!==D&&""!==z||(R=!1);R&&(this.diagnostics={runnable:O,programLog:A,vertexShader:{log:D,prefix:m},fragmentShader:{log:z,prefix:M}})}let x,T;return i.deleteShader(v),i.deleteShader(_),this.getUniforms=function(){return void 0===x&&(x=new Dt(i,g)),x},this.getAttributes=function(){return void 0===T&&(T=function(A,D){const z={},O=A.getProgramParameter(D,35721);for(let R=0;R<O;R++){const q=A.getActiveAttrib(D,R),Z=q.name;let I=1;35674===q.type&&(I=2),35675===q.type&&(I=3),35676===q.type&&(I=4),z[Z]={type:q.type,location:A.getAttribLocation(D,Z),locationSize:I}}return z}(i,g)),T},this.destroy=function(){n.releaseStatesOfProgram(this),i.deleteProgram(g),this.program=void 0},this.name=t.shaderName,this.id=uo++,this.cacheKey=e,this.usedTimes=1,this.program=g,this.vertexShader=v,this.fragmentShader=_,this}let Mo=0;class bo{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(e){const n=e.fragmentShader,i=this._getShaderStage(e.vertexShader),r=this._getShaderStage(n),c=this._getShaderCacheForMaterial(e);return!1===c.has(i)&&(c.add(i),i.usedTimes++),!1===c.has(r)&&(c.add(r),r.usedTimes++),this}remove(e){const t=this.materialCache.get(e);for(const n of t)n.usedTimes--,0===n.usedTimes&&this.shaderCache.delete(n);return this.materialCache.delete(e),this}getVertexShaderID(e){return this._getShaderStage(e.vertexShader).id}getFragmentShaderID(e){return this._getShaderStage(e.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(e){const t=this.materialCache;return!1===t.has(e)&&t.set(e,new Set),t.get(e)}_getShaderStage(e){const t=this.shaderCache;if(!1===t.has(e)){const n=new So;t.set(e,n)}return t.get(e)}}class So{constructor(){this.id=Mo++,this.usedTimes=0}}function wo(a,e,t,n,i,r,c){const o=new lr,l=new bo,s=[],h=i.isWebGL2,u=i.logarithmicDepthBuffer,d=i.floatVertexTextures,p=i.maxVertexUniforms,g=i.vertexTextures;let m=i.precision;const M={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function w(f){let v;return f&&f.isTexture?v=f.encoding:f&&f.isWebGLRenderTarget?(console.warn("THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead."),v=f.texture.encoding):v=3e3,h&&f&&f.isTexture&&1023===f.format&&1009===f.type&&3001===f.encoding&&(v=3e3),v}return{getParameters:function(f,v,_,x,T){const A=x.fog,z=(f.isMeshStandardMaterial?t:e).get(f.envMap||(f.isMeshStandardMaterial?x.environment:null)),O=M[f.type],R=T.isSkinnedMesh?function(Q){const ee=Q.skeleton.bones;if(d)return 1024;{const ae=Math.floor((p-20)/4),pe=Math.min(ae,ee.length);return pe<ee.length?(console.warn("THREE.WebGLRenderer: Skeleton has "+ee.length+" bones. This GPU supports "+pe+"."),0):pe}}(T):0;let q,Z,I,Y;if(null!==f.precision&&(m=i.getMaxPrecision(f.precision),m!==f.precision&&console.warn("THREE.WebGLProgram.getParameters:",f.precision,"not supported, using",m,"instead.")),O){const Q=pt[O];q=Q.vertexShader,Z=Q.fragmentShader}else q=f.vertexShader,Z=f.fragmentShader,l.update(f),I=l.getVertexShaderID(f),Y=l.getFragmentShaderID(f);const K=a.getRenderTarget(),$=f.alphaTest>0,B=f.clearcoat>0;return{isWebGL2:h,shaderID:O,shaderName:f.type,vertexShader:q,fragmentShader:Z,defines:f.defines,customVertexShaderID:I,customFragmentShaderID:Y,isRawShaderMaterial:!0===f.isRawShaderMaterial,glslVersion:f.glslVersion,precision:m,instancing:!0===T.isInstancedMesh,instancingColor:!0===T.isInstancedMesh&&null!==T.instanceColor,supportsVertexTextures:g,outputEncoding:null!==K?w(K.texture):a.outputEncoding,map:!!f.map,mapEncoding:w(f.map),matcap:!!f.matcap,matcapEncoding:w(f.matcap),envMap:!!z,envMapMode:z&&z.mapping,envMapEncoding:w(z),envMapCubeUV:!!z&&(306===z.mapping||307===z.mapping),lightMap:!!f.lightMap,lightMapEncoding:w(f.lightMap),aoMap:!!f.aoMap,emissiveMap:!!f.emissiveMap,emissiveMapEncoding:w(f.emissiveMap),bumpMap:!!f.bumpMap,normalMap:!!f.normalMap,objectSpaceNormalMap:1===f.normalMapType,tangentSpaceNormalMap:0===f.normalMapType,clearcoat:B,clearcoatMap:B&&!!f.clearcoatMap,clearcoatRoughnessMap:B&&!!f.clearcoatRoughnessMap,clearcoatNormalMap:B&&!!f.clearcoatNormalMap,displacementMap:!!f.displacementMap,roughnessMap:!!f.roughnessMap,metalnessMap:!!f.metalnessMap,specularMap:!!f.specularMap,specularIntensityMap:!!f.specularIntensityMap,specularColorMap:!!f.specularColorMap,specularColorMapEncoding:w(f.specularColorMap),alphaMap:!!f.alphaMap,alphaTest:$,gradientMap:!!f.gradientMap,sheen:f.sheen>0,sheenColorMap:!!f.sheenColorMap,sheenColorMapEncoding:w(f.sheenColorMap),sheenRoughnessMap:!!f.sheenRoughnessMap,transmission:f.transmission>0,transmissionMap:!!f.transmissionMap,thicknessMap:!!f.thicknessMap,combine:f.combine,vertexTangents:!!f.normalMap&&!!T.geometry&&!!T.geometry.attributes.tangent,vertexColors:f.vertexColors,vertexAlphas:!0===f.vertexColors&&!!T.geometry&&!!T.geometry.attributes.color&&4===T.geometry.attributes.color.itemSize,vertexUvs:!!(f.map||f.bumpMap||f.normalMap||f.specularMap||f.alphaMap||f.emissiveMap||f.roughnessMap||f.metalnessMap||f.clearcoatMap||f.clearcoatRoughnessMap||f.clearcoatNormalMap||f.displacementMap||f.transmissionMap||f.thicknessMap||f.specularIntensityMap||f.specularColorMap||f.sheenColorMap||f.sheenRoughnessMap),uvsVertexOnly:!(f.map||f.bumpMap||f.normalMap||f.specularMap||f.alphaMap||f.emissiveMap||f.roughnessMap||f.metalnessMap||f.clearcoatNormalMap||f.transmission>0||f.transmissionMap||f.thicknessMap||f.specularIntensityMap||f.specularColorMap||f.sheen>0||f.sheenColorMap||f.sheenRoughnessMap||!f.displacementMap),fog:!!A,useFog:f.fog,fogExp2:A&&A.isFogExp2,flatShading:!!f.flatShading,sizeAttenuation:f.sizeAttenuation,logarithmicDepthBuffer:u,skinning:!0===T.isSkinnedMesh&&R>0,maxBones:R,useVertexTexture:d,morphTargets:!!T.geometry&&!!T.geometry.morphAttributes.position,morphNormals:!!T.geometry&&!!T.geometry.morphAttributes.normal,morphTargetsCount:T.geometry&&T.geometry.morphAttributes.position?T.geometry.morphAttributes.position.length:0,numDirLights:v.directional.length,numPointLights:v.point.length,numSpotLights:v.spot.length,numRectAreaLights:v.rectArea.length,numHemiLights:v.hemi.length,numDirLightShadows:v.directionalShadowMap.length,numPointLightShadows:v.pointShadowMap.length,numSpotLightShadows:v.spotShadowMap.length,numClippingPlanes:c.numPlanes,numClipIntersection:c.numIntersection,format:f.format,dithering:f.dithering,shadowMapEnabled:a.shadowMap.enabled&&_.length>0,shadowMapType:a.shadowMap.type,toneMapping:f.toneMapped?a.toneMapping:0,physicallyCorrectLights:a.physicallyCorrectLights,premultipliedAlpha:f.premultipliedAlpha,doubleSided:2===f.side,flipSided:1===f.side,depthPacking:void 0!==f.depthPacking&&f.depthPacking,index0AttributeName:f.index0AttributeName,extensionDerivatives:f.extensions&&f.extensions.derivatives,extensionFragDepth:f.extensions&&f.extensions.fragDepth,extensionDrawBuffers:f.extensions&&f.extensions.drawBuffers,extensionShaderTextureLOD:f.extensions&&f.extensions.shaderTextureLOD,rendererExtensionFragDepth:h||n.has("EXT_frag_depth"),rendererExtensionDrawBuffers:h||n.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:h||n.has("EXT_shader_texture_lod"),customProgramCacheKey:f.customProgramCacheKey()}},getProgramCacheKey:function(f){const v=[];if(f.shaderID?v.push(f.shaderID):(v.push(f.customVertexShaderID),v.push(f.customFragmentShaderID)),void 0!==f.defines)for(const _ in f.defines)v.push(_),v.push(f.defines[_]);return!1===f.isRawShaderMaterial&&((_=v).push((x=f).precision),_.push(x.outputEncoding),_.push(x.mapEncoding),_.push(x.matcapEncoding),_.push(x.envMapMode),_.push(x.envMapEncoding),_.push(x.lightMapEncoding),_.push(x.emissiveMapEncoding),_.push(x.combine),_.push(x.vertexUvs),_.push(x.fogExp2),_.push(x.sizeAttenuation),_.push(x.maxBones),_.push(x.morphTargetsCount),_.push(x.numDirLights),_.push(x.numPointLights),_.push(x.numSpotLights),_.push(x.numHemiLights),_.push(x.numRectAreaLights),_.push(x.numDirLightShadows),_.push(x.numPointLightShadows),_.push(x.numSpotLightShadows),_.push(x.shadowMapType),_.push(x.toneMapping),_.push(x.numClippingPlanes),_.push(x.numClipIntersection),_.push(x.format),_.push(x.specularColorMapEncoding),_.push(x.sheenColorMapEncoding),function(_,x){o.disableAll(),x.isWebGL2&&o.enable(0),x.supportsVertexTextures&&o.enable(1),x.instancing&&o.enable(2),x.instancingColor&&o.enable(3),x.map&&o.enable(4),x.matcap&&o.enable(5),x.envMap&&o.enable(6),x.envMapCubeUV&&o.enable(7),x.lightMap&&o.enable(8),x.aoMap&&o.enable(9),x.emissiveMap&&o.enable(10),x.bumpMap&&o.enable(11),x.normalMap&&o.enable(12),x.objectSpaceNormalMap&&o.enable(13),x.tangentSpaceNormalMap&&o.enable(14),x.clearcoat&&o.enable(15),x.clearcoatMap&&o.enable(16),x.clearcoatRoughnessMap&&o.enable(17),x.clearcoatNormalMap&&o.enable(18),x.displacementMap&&o.enable(19),x.specularMap&&o.enable(20),x.roughnessMap&&o.enable(21),x.metalnessMap&&o.enable(22),x.gradientMap&&o.enable(23),x.alphaMap&&o.enable(24),x.alphaTest&&o.enable(25),x.vertexColors&&o.enable(26),x.vertexAlphas&&o.enable(27),x.vertexUvs&&o.enable(28),x.vertexTangents&&o.enable(29),x.uvsVertexOnly&&o.enable(30),x.fog&&o.enable(31),_.push(o.mask),o.disableAll(),x.useFog&&o.enable(0),x.flatShading&&o.enable(1),x.logarithmicDepthBuffer&&o.enable(2),x.skinning&&o.enable(3),x.useVertexTexture&&o.enable(4),x.morphTargets&&o.enable(5),x.morphNormals&&o.enable(6),x.premultipliedAlpha&&o.enable(7),x.shadowMapEnabled&&o.enable(8),x.physicallyCorrectLights&&o.enable(9),x.doubleSided&&o.enable(10),x.flipSided&&o.enable(11),x.depthPacking&&o.enable(12),x.dithering&&o.enable(13),x.specularIntensityMap&&o.enable(14),x.specularColorMap&&o.enable(15),x.transmission&&o.enable(16),x.transmissionMap&&o.enable(17),x.thicknessMap&&o.enable(18),x.sheen&&o.enable(19),x.sheenColorMap&&o.enable(20),x.sheenRoughnessMap&&o.enable(21),_.push(o.mask)}(v,f),v.push(a.outputEncoding)),v.push(f.customProgramCacheKey),v.join();var _,x},getUniforms:function(f){const v=M[f.type];let _;return _=v?vr.clone(pt[v].uniforms):f.uniforms,_},acquireProgram:function(f,v){let _;for(let x=0,T=s.length;x<T;x++){const A=s[x];if(A.cacheKey===v){_=A,++_.usedTimes;break}}return void 0===_&&(_=new yo(a,v,f,r),s.push(_)),_},releaseProgram:function(f){if(0==--f.usedTimes){const v=s.indexOf(f);s[v]=s[s.length-1],s.pop(),f.destroy()}},releaseShaderCache:function(f){l.remove(f)},programs:s,dispose:function(){l.dispose()}}}function Ao(){let a=new WeakMap;return{get:function(e){let t=a.get(e);return void 0===t&&(t={},a.set(e,t)),t},remove:function(e){a.delete(e)},update:function(e,t,n){a.get(e)[t]=n},dispose:function(){a=new WeakMap}}}function To(a,e){return a.groupOrder!==e.groupOrder?a.groupOrder-e.groupOrder:a.renderOrder!==e.renderOrder?a.renderOrder-e.renderOrder:a.material.id!==e.material.id?a.material.id-e.material.id:a.z!==e.z?a.z-e.z:a.id-e.id}function Kr(a,e){return a.groupOrder!==e.groupOrder?a.groupOrder-e.groupOrder:a.renderOrder!==e.renderOrder?a.renderOrder-e.renderOrder:a.z!==e.z?e.z-a.z:a.id-e.id}function $r(){const a=[];let e=0;const t=[],n=[],i=[];function r(c,o,l,s,h,u){let d=a[e];return void 0===d?(d={id:c.id,object:c,geometry:o,material:l,groupOrder:s,renderOrder:c.renderOrder,z:h,group:u},a[e]=d):(d.id=c.id,d.object=c,d.geometry=o,d.material=l,d.groupOrder=s,d.renderOrder=c.renderOrder,d.z=h,d.group=u),e++,d}return{opaque:t,transmissive:n,transparent:i,init:function(){e=0,t.length=0,n.length=0,i.length=0},push:function(c,o,l,s,h,u){const d=r(c,o,l,s,h,u);l.transmission>0?n.push(d):!0===l.transparent?i.push(d):t.push(d)},unshift:function(c,o,l,s,h,u){const d=r(c,o,l,s,h,u);l.transmission>0?n.unshift(d):!0===l.transparent?i.unshift(d):t.unshift(d)},finish:function(){for(let c=e,o=a.length;c<o;c++){const l=a[c];if(null===l.id)break;l.id=null,l.object=null,l.geometry=null,l.material=null,l.group=null}},sort:function(c,o){t.length>1&&t.sort(c||To),n.length>1&&n.sort(o||Kr),i.length>1&&i.sort(o||Kr)}}}function Eo(){let a=new WeakMap;return{get:function(e,t){let n;return!1===a.has(e)?(n=new $r,a.set(e,[n])):t>=a.get(e).length?(n=new $r,a.get(e).push(n)):n=a.get(e)[t],n},dispose:function(){a=new WeakMap}}}function Lo(){const a={};return{get:function(e){if(void 0!==a[e.id])return a[e.id];let t;switch(e.type){case"DirectionalLight":t={direction:new P,color:new ye};break;case"SpotLight":t={position:new P,direction:new P,color:new ye,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":t={position:new P,color:new ye,distance:0,decay:0};break;case"HemisphereLight":t={direction:new P,skyColor:new ye,groundColor:new ye};break;case"RectAreaLight":t={color:new ye,position:new P,halfWidth:new P,halfHeight:new P}}return a[e.id]=t,t}}}let Po=0;function Fo(a,e){return(e.castShadow?1:0)-(a.castShadow?1:0)}function Co(a,e){const t=new Lo,n=function(){const l={};return{get:function(s){if(void 0!==l[s.id])return l[s.id];let h;switch(s.type){case"DirectionalLight":case"SpotLight":h={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new le};break;case"PointLight":h={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new le,shadowCameraNear:1,shadowCameraFar:1e3}}return l[s.id]=h,h}}}(),i={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadow:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[]};for(let l=0;l<9;l++)i.probe.push(new P);const r=new P,c=new Ce,o=new Ce;return{setup:function(l,s){let h=0,u=0,d=0;for(let A=0;A<9;A++)i.probe[A].set(0,0,0);let p=0,g=0,m=0,M=0,w=0,f=0,v=0,_=0;l.sort(Fo);const x=!0!==s?Math.PI:1;for(let A=0,D=l.length;A<D;A++){const z=l[A],O=z.color,R=z.intensity,q=z.distance,Z=z.shadow&&z.shadow.map?z.shadow.map.texture:null;if(z.isAmbientLight)h+=O.r*R*x,u+=O.g*R*x,d+=O.b*R*x;else if(z.isLightProbe)for(let I=0;I<9;I++)i.probe[I].addScaledVector(z.sh.coefficients[I],R);else if(z.isDirectionalLight){const I=t.get(z);if(I.color.copy(z.color).multiplyScalar(z.intensity*x),z.castShadow){const Y=z.shadow,K=n.get(z);K.shadowBias=Y.bias,K.shadowNormalBias=Y.normalBias,K.shadowRadius=Y.radius,K.shadowMapSize=Y.mapSize,i.directionalShadow[p]=K,i.directionalShadowMap[p]=Z,i.directionalShadowMatrix[p]=z.shadow.matrix,f++}i.directional[p]=I,p++}else if(z.isSpotLight){const I=t.get(z);if(I.position.setFromMatrixPosition(z.matrixWorld),I.color.copy(O).multiplyScalar(R*x),I.distance=q,I.coneCos=Math.cos(z.angle),I.penumbraCos=Math.cos(z.angle*(1-z.penumbra)),I.decay=z.decay,z.castShadow){const Y=z.shadow,K=n.get(z);K.shadowBias=Y.bias,K.shadowNormalBias=Y.normalBias,K.shadowRadius=Y.radius,K.shadowMapSize=Y.mapSize,i.spotShadow[m]=K,i.spotShadowMap[m]=Z,i.spotShadowMatrix[m]=z.shadow.matrix,_++}i.spot[m]=I,m++}else if(z.isRectAreaLight){const I=t.get(z);I.color.copy(O).multiplyScalar(R),I.halfWidth.set(.5*z.width,0,0),I.halfHeight.set(0,.5*z.height,0),i.rectArea[M]=I,M++}else if(z.isPointLight){const I=t.get(z);if(I.color.copy(z.color).multiplyScalar(z.intensity*x),I.distance=z.distance,I.decay=z.decay,z.castShadow){const Y=z.shadow,K=n.get(z);K.shadowBias=Y.bias,K.shadowNormalBias=Y.normalBias,K.shadowRadius=Y.radius,K.shadowMapSize=Y.mapSize,K.shadowCameraNear=Y.camera.near,K.shadowCameraFar=Y.camera.far,i.pointShadow[g]=K,i.pointShadowMap[g]=Z,i.pointShadowMatrix[g]=z.shadow.matrix,v++}i.point[g]=I,g++}else if(z.isHemisphereLight){const I=t.get(z);I.skyColor.copy(z.color).multiplyScalar(R*x),I.groundColor.copy(z.groundColor).multiplyScalar(R*x),i.hemi[w]=I,w++}}M>0&&(e.isWebGL2||!0===a.has("OES_texture_float_linear")?(i.rectAreaLTC1=ie.LTC_FLOAT_1,i.rectAreaLTC2=ie.LTC_FLOAT_2):!0===a.has("OES_texture_half_float_linear")?(i.rectAreaLTC1=ie.LTC_HALF_1,i.rectAreaLTC2=ie.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),i.ambient[0]=h,i.ambient[1]=u,i.ambient[2]=d;const T=i.hash;T.directionalLength===p&&T.pointLength===g&&T.spotLength===m&&T.rectAreaLength===M&&T.hemiLength===w&&T.numDirectionalShadows===f&&T.numPointShadows===v&&T.numSpotShadows===_||(i.directional.length=p,i.spot.length=m,i.rectArea.length=M,i.point.length=g,i.hemi.length=w,i.directionalShadow.length=f,i.directionalShadowMap.length=f,i.pointShadow.length=v,i.pointShadowMap.length=v,i.spotShadow.length=_,i.spotShadowMap.length=_,i.directionalShadowMatrix.length=f,i.pointShadowMatrix.length=v,i.spotShadowMatrix.length=_,T.directionalLength=p,T.pointLength=g,T.spotLength=m,T.rectAreaLength=M,T.hemiLength=w,T.numDirectionalShadows=f,T.numPointShadows=v,T.numSpotShadows=_,i.version=Po++)},setupView:function(l,s){let h=0,u=0,d=0,p=0,g=0;const m=s.matrixWorldInverse;for(let M=0,w=l.length;M<w;M++){const f=l[M];if(f.isDirectionalLight){const v=i.directional[h];v.direction.setFromMatrixPosition(f.matrixWorld),r.setFromMatrixPosition(f.target.matrixWorld),v.direction.sub(r),v.direction.transformDirection(m),h++}else if(f.isSpotLight){const v=i.spot[d];v.position.setFromMatrixPosition(f.matrixWorld),v.position.applyMatrix4(m),v.direction.setFromMatrixPosition(f.matrixWorld),r.setFromMatrixPosition(f.target.matrixWorld),v.direction.sub(r),v.direction.transformDirection(m),d++}else if(f.isRectAreaLight){const v=i.rectArea[p];v.position.setFromMatrixPosition(f.matrixWorld),v.position.applyMatrix4(m),o.identity(),c.copy(f.matrixWorld),c.premultiply(m),o.extractRotation(c),v.halfWidth.set(.5*f.width,0,0),v.halfHeight.set(0,.5*f.height,0),v.halfWidth.applyMatrix4(o),v.halfHeight.applyMatrix4(o),p++}else if(f.isPointLight){const v=i.point[u];v.position.setFromMatrixPosition(f.matrixWorld),v.position.applyMatrix4(m),u++}else if(f.isHemisphereLight){const v=i.hemi[g];v.direction.setFromMatrixPosition(f.matrixWorld),v.direction.transformDirection(m),v.direction.normalize(),g++}}},state:i}}function ea(a,e){const t=new Co(a,e),n=[],i=[];return{init:function(){n.length=0,i.length=0},state:{lightsArray:n,shadowsArray:i,lights:t},setupLights:function(r){t.setup(n,r)},setupLightsView:function(r){t.setupView(n,r)},pushLight:function(r){n.push(r)},pushShadow:function(r){i.push(r)}}}function No(a,e){let t=new WeakMap;return{get:function(n,i=0){let r;return!1===t.has(n)?(r=new ea(a,e),t.set(n,[r])):i>=t.get(n).length?(r=new ea(a,e),t.get(n).push(r)):r=t.get(n)[i],r},dispose:function(){t=new WeakMap}}}class ta extends $t{constructor(e){super(),this.type="MeshDepthMaterial",this.depthPacking=3200,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}ta.prototype.isMeshDepthMaterial=!0;class na extends $t{constructor(e){super(),this.type="MeshDistanceMaterial",this.referencePosition=new P,this.nearDistance=1,this.farDistance=1e3,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.fog=!1,this.setValues(e)}copy(e){return super.copy(e),this.referencePosition.copy(e.referencePosition),this.nearDistance=e.nearDistance,this.farDistance=e.farDistance,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}function Do(a,e,t){let n=new Ei;const i=new le,r=new le,c=new Fe,o=new ta({depthPacking:3201}),l=new na,s={},h=t.maxTextureSize,u={0:1,1:0,2:2},d=new Ct({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new le},radius:{value:4}},vertexShader:"void main(){gl_Position=vec4(position,1.0);}",fragmentShader:"uniform sampler2D shadow_pass;uniform vec2 resolution;uniform float radius;\n#include <packing>\nvoid main(){const float samples=float(VSM_SAMPLES);float mean=0.0;float squared_mean=0.0;float uvStride=samples<=1.0?0.0:2.0/(samples-1.0);float uvStart=samples<=1.0?0.0:-1.0;for(float i=0.0;i<samples;i++){float uvOffset=uvStart+i*uvStride;\n#ifdef HORIZONTAL_PASS\nvec2 distribution=unpackRGBATo2Half(texture2D(shadow_pass,(gl_FragCoord.xy+vec2(uvOffset,0.0)*radius)/resolution));mean+=distribution.x;squared_mean+=distribution.y*distribution.y+distribution.x*distribution.x;\n#else\nfloat depth=unpackRGBAToDepth(texture2D(shadow_pass,(gl_FragCoord.xy+vec2(0.0,uvOffset)*radius)/resolution));mean+=depth;squared_mean+=depth*depth;\n#endif\n}mean=mean/samples;squared_mean=squared_mean/samples;float std_dev=sqrt(squared_mean-mean*mean);gl_FragColor=pack2HalfToRGBA(vec2(mean,std_dev));}"}),p=d.clone();p.defines.HORIZONTAL_PASS=1;const g=new ut;g.setAttribute("position",new Ze(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const m=new Ee(g,d),M=this;function w(_,x){const T=e.update(m);d.defines.VSM_SAMPLES!==_.blurSamples&&(d.defines.VSM_SAMPLES=_.blurSamples,p.defines.VSM_SAMPLES=_.blurSamples,d.needsUpdate=!0,p.needsUpdate=!0),d.uniforms.shadow_pass.value=_.map.texture,d.uniforms.resolution.value=_.mapSize,d.uniforms.radius.value=_.radius,a.setRenderTarget(_.mapPass),a.clear(),a.renderBufferDirect(x,null,T,d,m,null),p.uniforms.shadow_pass.value=_.mapPass.texture,p.uniforms.resolution.value=_.mapSize,p.uniforms.radius.value=_.radius,a.setRenderTarget(_.map),a.clear(),a.renderBufferDirect(x,null,T,p,m,null)}function f(_,x,T,A,D,z,O){let R=null;const q=!0===A.isPointLight?_.customDistanceMaterial:_.customDepthMaterial;if(R=void 0!==q?q:!0===A.isPointLight?l:o,a.localClippingEnabled&&!0===T.clipShadows&&0!==T.clippingPlanes.length||T.displacementMap&&0!==T.displacementScale||T.alphaMap&&T.alphaTest>0){const Z=R.uuid,I=T.uuid;let Y=s[Z];void 0===Y&&(Y={},s[Z]=Y);let K=Y[I];void 0===K&&(K=R.clone(),Y[I]=K),R=K}return R.visible=T.visible,R.wireframe=T.wireframe,R.side=3===O?null!==T.shadowSide?T.shadowSide:T.side:null!==T.shadowSide?T.shadowSide:u[T.side],R.alphaMap=T.alphaMap,R.alphaTest=T.alphaTest,R.clipShadows=T.clipShadows,R.clippingPlanes=T.clippingPlanes,R.clipIntersection=T.clipIntersection,R.displacementMap=T.displacementMap,R.displacementScale=T.displacementScale,R.displacementBias=T.displacementBias,R.wireframeLinewidth=T.wireframeLinewidth,R.linewidth=T.linewidth,!0===A.isPointLight&&!0===R.isMeshDistanceMaterial&&(R.referencePosition.setFromMatrixPosition(A.matrixWorld),R.nearDistance=D,R.farDistance=z),R}function v(_,x,T,A,D){if(!1===_.visible)return;if(_.layers.test(x.layers)&&(_.isMesh||_.isLine||_.isPoints)&&(_.castShadow||_.receiveShadow&&3===D)&&(!_.frustumCulled||n.intersectsObject(_))){_.modelViewMatrix.multiplyMatrices(T.matrixWorldInverse,_.matrixWorld);const O=e.update(_),R=_.material;if(Array.isArray(R)){const q=O.groups;for(let Z=0,I=q.length;Z<I;Z++){const Y=q[Z],K=R[Y.materialIndex];if(K&&K.visible){const $=f(_,0,K,A,T.near,T.far,D);a.renderBufferDirect(T,null,O,$,_,Y)}}}else if(R.visible){const q=f(_,0,R,A,T.near,T.far,D);a.renderBufferDirect(T,null,O,q,_,null)}}const z=_.children;for(let O=0,R=z.length;O<R;O++)v(z[O],x,T,A,D)}this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=1,this.render=function(_,x,T){if(!1===M.enabled||!1===M.autoUpdate&&!1===M.needsUpdate||0===_.length)return;const A=a.getRenderTarget(),D=a.getActiveCubeFace(),z=a.getActiveMipmapLevel(),O=a.state;O.setBlending(0),O.buffers.color.setClear(1,1,1,1),O.buffers.depth.setTest(!0),O.setScissorTest(!1);for(let R=0,q=_.length;R<q;R++){const Z=_[R],I=Z.shadow;if(void 0===I){console.warn("THREE.WebGLShadowMap:",Z,"has no shadow.");continue}if(!1===I.autoUpdate&&!1===I.needsUpdate)continue;i.copy(I.mapSize);const Y=I.getFrameExtents();if(i.multiply(Y),r.copy(I.mapSize),(i.x>h||i.y>h)&&(i.x>h&&(r.x=Math.floor(h/Y.x),i.x=r.x*Y.x,I.mapSize.x=r.x),i.y>h&&(r.y=Math.floor(h/Y.y),i.y=r.y*Y.y,I.mapSize.y=r.y)),null===I.map&&!I.isPointLightShadow&&3===this.type){const $={minFilter:1006,magFilter:1006,format:1023};I.map=new it(i.x,i.y,$),I.map.texture.name=Z.name+".shadowMap",I.mapPass=new it(i.x,i.y,$),I.camera.updateProjectionMatrix()}null===I.map&&(I.map=new it(i.x,i.y,{minFilter:1003,magFilter:1003,format:1023}),I.map.texture.name=Z.name+".shadowMap",I.camera.updateProjectionMatrix()),a.setRenderTarget(I.map),a.clear();const K=I.getViewportCount();for(let $=0;$<K;$++){const B=I.getViewport($);c.set(r.x*B.x,r.y*B.y,r.x*B.z,r.y*B.w),O.viewport(c),I.updateMatrices(Z,$),n=I.getFrustum(),v(x,T,I.camera,Z,this.type)}I.isPointLightShadow||3!==this.type||w(I,T),I.needsUpdate=!1}M.needsUpdate=!1,a.setRenderTarget(A,D,z)}}function Io(a,e,t){const n=t.isWebGL2,i=new function(){let y=!1;const H=new Fe;let X=null;const W=new Fe(0,0,0,0);return{setMask:function(L){X===L||y||(a.colorMask(L,L,L,L),X=L)},setLocked:function(L){y=L},setClear:function(L,N,V,ne,ce){!0===ce&&(L*=ne,N*=ne,V*=ne),H.set(L,N,V,ne),!1===W.equals(H)&&(a.clearColor(L,N,V,ne),W.copy(H))},reset:function(){y=!1,X=null,W.set(-1,0,0,0)}}},r=new function(){let y=!1,H=null,X=null,W=null;return{setTest:function(L){L?ee(2929):re(2929)},setMask:function(L){H===L||y||(a.depthMask(L),H=L)},setFunc:function(L){if(X!==L){if(L)switch(L){case 0:a.depthFunc(512);break;case 1:a.depthFunc(519);break;case 2:a.depthFunc(513);break;case 3:default:a.depthFunc(515);break;case 4:a.depthFunc(514);break;case 5:a.depthFunc(518);break;case 6:a.depthFunc(516);break;case 7:a.depthFunc(517)}else a.depthFunc(515);X=L}},setLocked:function(L){y=L},setClear:function(L){W!==L&&(a.clearDepth(L),W=L)},reset:function(){y=!1,H=null,X=null,W=null}}},c=new function(){let y=!1,H=null,X=null,W=null,L=null,N=null,V=null,ne=null,ce=null;return{setTest:function(se){y||(se?ee(2960):re(2960))},setMask:function(se){H===se||y||(a.stencilMask(se),H=se)},setFunc:function(se,he,fe){X===se&&W===he&&L===fe||(a.stencilFunc(se,he,fe),X=se,W=he,L=fe)},setOp:function(se,he,fe){N===se&&V===he&&ne===fe||(a.stencilOp(se,he,fe),N=se,V=he,ne=fe)},setLocked:function(se){y=se},setClear:function(se){ce!==se&&(a.clearStencil(se),ce=se)},reset:function(){y=!1,H=null,X=null,W=null,L=null,N=null,V=null,ne=null,ce=null}}};let o={},l={},s=null,h=!1,u=null,d=null,p=null,g=null,m=null,M=null,w=null,f=!1,v=null,_=null,x=null,T=null,A=null;const D=a.getParameter(35661);let z=!1,O=0;const R=a.getParameter(7938);-1!==R.indexOf("WebGL")?(O=parseFloat(/^WebGL (\d)/.exec(R)[1]),z=O>=1):-1!==R.indexOf("OpenGL ES")&&(O=parseFloat(/^OpenGL ES (\d)/.exec(R)[1]),z=O>=2);let q=null,Z={};const I=a.getParameter(3088),Y=a.getParameter(2978),K=(new Fe).fromArray(I),$=(new Fe).fromArray(Y);function B(y,H,X){const W=new Uint8Array(4),L=a.createTexture();a.bindTexture(y,L),a.texParameteri(y,10241,9728),a.texParameteri(y,10240,9728);for(let N=0;N<X;N++)a.texImage2D(H+N,0,6408,1,1,0,6408,5121,W);return L}const Q={};function ee(y){!0!==o[y]&&(a.enable(y),o[y]=!0)}function re(y){!1!==o[y]&&(a.disable(y),o[y]=!1)}Q[3553]=B(3553,3553,1),Q[34067]=B(34067,34069,6),i.setClear(0,0,0,1),r.setClear(1),c.setClear(0),ee(2929),r.setFunc(3),S(!1),C(1),ee(2884),E(0);const ae={100:32774,101:32778,102:32779};if(n)ae[103]=32775,ae[104]=32776;else{const y=e.get("EXT_blend_minmax");null!==y&&(ae[103]=y.MIN_EXT,ae[104]=y.MAX_EXT)}const pe={200:0,201:1,202:768,204:770,210:776,208:774,206:772,203:769,205:771,209:775,207:773};function E(y,H,X,W,L,N,V,ne){if(0!==y){if(!1===h&&(ee(3042),h=!0),5===y)L=L||H,N=N||X,V=V||W,H===d&&L===m||(a.blendEquationSeparate(ae[H],ae[L]),d=H,m=L),X===p&&W===g&&N===M&&V===w||(a.blendFuncSeparate(pe[X],pe[W],pe[N],pe[V]),p=X,g=W,M=N,w=V),u=y,f=null;else if(y!==u||ne!==f){if(100===d&&100===m||(a.blendEquation(32774),d=100,m=100),ne)switch(y){case 1:a.blendFuncSeparate(1,771,1,771);break;case 2:a.blendFunc(1,1);break;case 3:a.blendFuncSeparate(0,0,769,771);break;case 4:a.blendFuncSeparate(0,768,0,770);break;default:console.error("THREE.WebGLState: Invalid blending: ",y)}else switch(y){case 1:a.blendFuncSeparate(770,771,1,771);break;case 2:a.blendFunc(770,1);break;case 3:a.blendFunc(0,769);break;case 4:a.blendFunc(0,768);break;default:console.error("THREE.WebGLState: Invalid blending: ",y)}p=null,g=null,M=null,w=null,u=y,f=ne}}else!0===h&&(re(3042),h=!1)}function S(y){v!==y&&(a.frontFace(y?2304:2305),v=y)}function C(y){0!==y?(ee(2884),y!==_&&a.cullFace(1===y?1029:2===y?1028:1032)):re(2884),_=y}function k(y,H,X){y?(ee(32823),T===H&&A===X||(a.polygonOffset(H,X),T=H,A=X)):re(32823)}function F(y){void 0===y&&(y=33984+D-1),q!==y&&(a.activeTexture(y),q=y)}return{buffers:{color:i,depth:r,stencil:c},enable:ee,disable:re,bindFramebuffer:function(y,H){return l[y]!==H&&(a.bindFramebuffer(y,H),l[y]=H,n&&(36009===y&&(l[36160]=H),36160===y&&(l[36009]=H)),!0)},useProgram:function(y){return s!==y&&(a.useProgram(y),s=y,!0)},setBlending:E,setMaterial:function(y,H){2===y.side?re(2884):ee(2884);let X=1===y.side;H&&(X=!X),S(X),1===y.blending&&!1===y.transparent?E(0):E(y.blending,y.blendEquation,y.blendSrc,y.blendDst,y.blendEquationAlpha,y.blendSrcAlpha,y.blendDstAlpha,y.premultipliedAlpha),r.setFunc(y.depthFunc),r.setTest(y.depthTest),r.setMask(y.depthWrite),i.setMask(y.colorWrite);const W=y.stencilWrite;c.setTest(W),W&&(c.setMask(y.stencilWriteMask),c.setFunc(y.stencilFunc,y.stencilRef,y.stencilFuncMask),c.setOp(y.stencilFail,y.stencilZFail,y.stencilZPass)),k(y.polygonOffset,y.polygonOffsetFactor,y.polygonOffsetUnits),!0===y.alphaToCoverage?ee(32926):re(32926)},setFlipSided:S,setCullFace:C,setLineWidth:function(y){y!==x&&(z&&a.lineWidth(y),x=y)},setPolygonOffset:k,setScissorTest:function(y){y?ee(3089):re(3089)},activeTexture:F,bindTexture:function(y,H){null===q&&F();let X=Z[q];void 0===X&&(X={type:void 0,texture:void 0},Z[q]=X),X.type===y&&X.texture===H||(a.bindTexture(y,H||Q[y]),X.type=y,X.texture=H)},unbindTexture:function(){const y=Z[q];void 0!==y&&void 0!==y.type&&(a.bindTexture(y.type,null),y.type=void 0,y.texture=void 0)},compressedTexImage2D:function(){try{a.compressedTexImage2D.apply(a,arguments)}catch(y){console.error("THREE.WebGLState:",y)}},texImage2D:function(){try{a.texImage2D.apply(a,arguments)}catch(y){console.error("THREE.WebGLState:",y)}},texImage3D:function(){try{a.texImage3D.apply(a,arguments)}catch(y){console.error("THREE.WebGLState:",y)}},texStorage2D:function(){try{a.texStorage2D.apply(a,arguments)}catch(y){console.error("THREE.WebGLState:",y)}},texStorage3D:function(){try{a.texStorage3D.apply(a,arguments)}catch(y){console.error("THREE.WebGLState:",y)}},texSubImage2D:function(){try{a.texSubImage2D.apply(a,arguments)}catch(y){console.error("THREE.WebGLState:",y)}},texSubImage3D:function(){try{a.texSubImage3D.apply(a,arguments)}catch(y){console.error("THREE.WebGLState:",y)}},compressedTexSubImage2D:function(){try{a.compressedTexSubImage2D.apply(a,arguments)}catch(y){console.error("THREE.WebGLState:",y)}},scissor:function(y){!1===K.equals(y)&&(a.scissor(y.x,y.y,y.z,y.w),K.copy(y))},viewport:function(y){!1===$.equals(y)&&(a.viewport(y.x,y.y,y.z,y.w),$.copy(y))},reset:function(){a.disable(3042),a.disable(2884),a.disable(2929),a.disable(32823),a.disable(3089),a.disable(2960),a.disable(32926),a.blendEquation(32774),a.blendFunc(1,0),a.blendFuncSeparate(1,0,1,0),a.colorMask(!0,!0,!0,!0),a.clearColor(0,0,0,0),a.depthMask(!0),a.depthFunc(513),a.clearDepth(1),a.stencilMask(4294967295),a.stencilFunc(519,0,4294967295),a.stencilOp(7680,7680,7680),a.clearStencil(0),a.cullFace(1029),a.frontFace(2305),a.polygonOffset(0,0),a.activeTexture(33984),a.bindFramebuffer(36160,null),!0===n&&(a.bindFramebuffer(36009,null),a.bindFramebuffer(36008,null)),a.useProgram(null),a.lineWidth(1),a.scissor(0,0,a.canvas.width,a.canvas.height),a.viewport(0,0,a.canvas.width,a.canvas.height),o={},q=null,Z={},l={},s=null,h=!1,u=null,d=null,p=null,g=null,m=null,M=null,w=null,f=!1,v=null,_=null,x=null,T=null,A=null,K.set(0,0,a.canvas.width,a.canvas.height),$.set(0,0,a.canvas.width,a.canvas.height),i.reset(),r.reset(),c.reset()}}}function Ro(a,e,t,n,i,r,c){const o=i.isWebGL2,l=i.maxTextures,s=i.maxCubemapSize,h=i.maxTextureSize,u=i.maxSamples,d=e.has("WEBGL_multisampled_render_to_texture")?e.get("WEBGL_multisampled_render_to_texture"):void 0,p=new WeakMap;let g,m=!1;try{m="undefined"!=typeof OffscreenCanvas&&null!==new OffscreenCanvas(1,1).getContext("2d")}catch(E){}function M(E,S){return m?new OffscreenCanvas(E,S):$n("canvas")}function w(E,S,C,k){let F=1;if((E.width>k||E.height>k)&&(F=k/Math.max(E.width,E.height)),F<1||!0===S){if("undefined"!=typeof HTMLImageElement&&E instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&E instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&E instanceof ImageBitmap){const y=S?Ya:Math.floor,H=y(F*E.width),X=y(F*E.height);void 0===g&&(g=M(H,X));const W=C?M(H,X):g;return W.width=H,W.height=X,W.getContext("2d").drawImage(E,0,0,H,X),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+E.width+"x"+E.height+") to ("+H+"x"+X+")."),W}return"data"in E&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+E.width+"x"+E.height+")."),E}return E}function f(E){return nr(E.width)&&nr(E.height)}function v(E,S){return E.generateMipmaps&&S&&1003!==E.minFilter&&1006!==E.minFilter}function _(E){a.generateMipmap(E)}function x(E,S,C,k){if(!1===o)return S;if(null!==E){if(void 0!==a[E])return a[E];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+E+"'")}let F=S;return 6403===S&&(5126===C&&(F=33326),5131===C&&(F=33325),5121===C&&(F=33321)),6407===S&&(5126===C&&(F=34837),5131===C&&(F=34843),5121===C&&(F=32849)),6408===S&&(5126===C&&(F=34836),5131===C&&(F=34842),5121===C&&(F=3001===k?35907:32856)),33325!==F&&33326!==F&&34842!==F&&34836!==F||e.get("EXT_color_buffer_float"),F}function T(E,S,C){return!0===v(E,C)||E.isFramebufferTexture&&1003!==E.minFilter&&1006!==E.minFilter?Math.log2(Math.max(S.width,S.height))+1:void 0!==E.mipmaps&&E.mipmaps.length>0?E.mipmaps.length:E.isCompressedTexture&&Array.isArray(E.image)?S.mipmaps.length:1}function A(E){return 1003===E||1004===E||1005===E?9728:9729}function D(E){const S=E.target;S.removeEventListener("dispose",D),function(C){const k=n.get(C);void 0!==k.__webglInit&&(a.deleteTexture(k.__webglTexture),n.remove(C))}(S),S.isVideoTexture&&p.delete(S),c.memory.textures--}function z(E){const S=E.target;S.removeEventListener("dispose",z),function(C){const k=C.texture,F=n.get(C),y=n.get(k);if(C){if(void 0!==y.__webglTexture&&(a.deleteTexture(y.__webglTexture),c.memory.textures--),C.depthTexture&&C.depthTexture.dispose(),C.isWebGLCubeRenderTarget)for(let H=0;H<6;H++)a.deleteFramebuffer(F.__webglFramebuffer[H]),F.__webglDepthbuffer&&a.deleteRenderbuffer(F.__webglDepthbuffer[H]);else a.deleteFramebuffer(F.__webglFramebuffer),F.__webglDepthbuffer&&a.deleteRenderbuffer(F.__webglDepthbuffer),F.__webglMultisampledFramebuffer&&a.deleteFramebuffer(F.__webglMultisampledFramebuffer),F.__webglColorRenderbuffer&&a.deleteRenderbuffer(F.__webglColorRenderbuffer),F.__webglDepthRenderbuffer&&a.deleteRenderbuffer(F.__webglDepthRenderbuffer);if(C.isWebGLMultipleRenderTargets)for(let H=0,X=k.length;H<X;H++){const W=n.get(k[H]);W.__webglTexture&&(a.deleteTexture(W.__webglTexture),c.memory.textures--),n.remove(k[H])}n.remove(k),n.remove(C)}}(S)}let O=0;function R(E,S){const C=n.get(E);if(E.isVideoTexture&&function(k){const F=c.render.frame;p.get(k)!==F&&(p.set(k,F),k.update())}(E),E.version>0&&C.__version!==E.version){const k=E.image;if(void 0===k)console.warn("THREE.WebGLRenderer: Texture marked for update but image is undefined");else{if(!1!==k.complete)return void $(C,E,S);console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete")}}t.activeTexture(33984+S),t.bindTexture(3553,C.__webglTexture)}function q(E,S){const C=n.get(E);E.version>0&&C.__version!==E.version?function(k,F,y){if(6!==F.image.length)return;K(k,F),t.activeTexture(33984+y),t.bindTexture(34067,k.__webglTexture),a.pixelStorei(37440,F.flipY),a.pixelStorei(37441,F.premultiplyAlpha),a.pixelStorei(3317,F.unpackAlignment),a.pixelStorei(37443,0);const H=F&&(F.isCompressedTexture||F.image[0].isCompressedTexture),X=F.image[0]&&F.image[0].isDataTexture,W=[];for(let oe=0;oe<6;oe++)W[oe]=H||X?X?F.image[oe].image:F.image[oe]:w(F.image[oe],!1,!0,s);const L=W[0],N=f(L)||o,V=r.convert(F.format),ne=r.convert(F.type),ce=x(F.internalFormat,V,ne,F.encoding),se=o&&!0!==F.isVideoTexture,he=void 0===k.__version;let fe,Le=T(F,L,N);if(Y(34067,F,N),H){se&&he&&t.texStorage2D(34067,Le,ce,L.width,L.height);for(let oe=0;oe<6;oe++){fe=W[oe].mipmaps;for(let be=0;be<fe.length;be++){const Pe=fe[be];1023!==F.format&&1022!==F.format?null!==V?se?t.compressedTexSubImage2D(34069+oe,be,0,0,Pe.width,Pe.height,V,Pe.data):t.compressedTexImage2D(34069+oe,be,ce,Pe.width,Pe.height,0,Pe.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):se?t.texSubImage2D(34069+oe,be,0,0,Pe.width,Pe.height,V,ne,Pe.data):t.texImage2D(34069+oe,be,ce,Pe.width,Pe.height,0,V,ne,Pe.data)}}}else{fe=F.mipmaps,se&&he&&(fe.length>0&&Le++,t.texStorage2D(34067,Le,ce,W[0].width,W[0].height));for(let oe=0;oe<6;oe++)if(X){se?t.texSubImage2D(34069+oe,0,0,0,W[oe].width,W[oe].height,V,ne,W[oe].data):t.texImage2D(34069+oe,0,ce,W[oe].width,W[oe].height,0,V,ne,W[oe].data);for(let be=0;be<fe.length;be++){const Pe=fe[be].image[oe].image;se?t.texSubImage2D(34069+oe,be+1,0,0,Pe.width,Pe.height,V,ne,Pe.data):t.texImage2D(34069+oe,be+1,ce,Pe.width,Pe.height,0,V,ne,Pe.data)}}else{se?t.texSubImage2D(34069+oe,0,0,0,V,ne,W[oe]):t.texImage2D(34069+oe,0,ce,V,ne,W[oe]);for(let be=0;be<fe.length;be++){const Pe=fe[be];se?t.texSubImage2D(34069+oe,be+1,0,0,V,ne,Pe.image[oe]):t.texImage2D(34069+oe,be+1,ce,V,ne,Pe.image[oe])}}}v(F,N)&&_(34067),k.__version=F.version,F.onUpdate&&F.onUpdate(F)}(C,E,S):(t.activeTexture(33984+S),t.bindTexture(34067,C.__webglTexture))}const Z={1e3:10497,1001:33071,1002:33648},I={1003:9728,1004:9984,1005:9986,1006:9729,1007:9985,1008:9987};function Y(E,S,C){if(C?(a.texParameteri(E,10242,Z[S.wrapS]),a.texParameteri(E,10243,Z[S.wrapT]),32879!==E&&35866!==E||a.texParameteri(E,32882,Z[S.wrapR]),a.texParameteri(E,10240,I[S.magFilter]),a.texParameteri(E,10241,I[S.minFilter])):(a.texParameteri(E,10242,33071),a.texParameteri(E,10243,33071),32879!==E&&35866!==E||a.texParameteri(E,32882,33071),1001===S.wrapS&&1001===S.wrapT||console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),a.texParameteri(E,10240,A(S.magFilter)),a.texParameteri(E,10241,A(S.minFilter)),1003!==S.minFilter&&1006!==S.minFilter&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),!0===e.has("EXT_texture_filter_anisotropic")){const k=e.get("EXT_texture_filter_anisotropic");if(1015===S.type&&!1===e.has("OES_texture_float_linear")||!1===o&&1016===S.type&&!1===e.has("OES_texture_half_float_linear"))return;(S.anisotropy>1||n.get(S).__currentAnisotropy)&&(a.texParameterf(E,k.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(S.anisotropy,i.getMaxAnisotropy())),n.get(S).__currentAnisotropy=S.anisotropy)}}function K(E,S){void 0===E.__webglInit&&(E.__webglInit=!0,S.addEventListener("dispose",D),E.__webglTexture=a.createTexture(),c.memory.textures++)}function $(E,S,C){let k=3553;S.isDataTexture2DArray&&(k=35866),S.isDataTexture3D&&(k=32879),K(E,S),t.activeTexture(33984+C),t.bindTexture(k,E.__webglTexture),a.pixelStorei(37440,S.flipY),a.pixelStorei(37441,S.premultiplyAlpha),a.pixelStorei(3317,S.unpackAlignment),a.pixelStorei(37443,0);const F=(he=S,!o&&(1001!==he.wrapS||1001!==he.wrapT||1003!==he.minFilter&&1006!==he.minFilter)&&!1===f(S.image)),y=w(S.image,F,!1,h),H=f(y)||o,X=r.convert(S.format);var he;let W,L=r.convert(S.type),N=x(S.internalFormat,X,L,S.encoding);Y(k,S,H);const V=S.mipmaps,ne=o&&!0!==S.isVideoTexture,ce=void 0===E.__version,se=T(S,y,H);if(S.isDepthTexture)N=6402,o?N=1015===S.type?36012:1014===S.type?33190:1020===S.type?35056:33189:1015===S.type&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),1026===S.format&&6402===N&&1012!==S.type&&1014!==S.type&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),S.type=1012,L=r.convert(S.type)),1027===S.format&&6402===N&&(N=34041,1020!==S.type&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),S.type=1020,L=r.convert(S.type))),ne&&ce?t.texStorage2D(3553,1,N,y.width,y.height):t.texImage2D(3553,0,N,y.width,y.height,0,X,L,null);else if(S.isDataTexture)if(V.length>0&&H){ne&&ce&&t.texStorage2D(3553,se,N,V[0].width,V[0].height);for(let he=0,fe=V.length;he<fe;he++)W=V[he],ne?t.texSubImage2D(3553,0,0,0,W.width,W.height,X,L,W.data):t.texImage2D(3553,he,N,W.width,W.height,0,X,L,W.data);S.generateMipmaps=!1}else ne?(ce&&t.texStorage2D(3553,se,N,y.width,y.height),t.texSubImage2D(3553,0,0,0,y.width,y.height,X,L,y.data)):t.texImage2D(3553,0,N,y.width,y.height,0,X,L,y.data);else if(S.isCompressedTexture){ne&&ce&&t.texStorage2D(3553,se,N,V[0].width,V[0].height);for(let he=0,fe=V.length;he<fe;he++)W=V[he],1023!==S.format&&1022!==S.format?null!==X?ne?t.compressedTexSubImage2D(3553,he,0,0,W.width,W.height,X,W.data):t.compressedTexImage2D(3553,he,N,W.width,W.height,0,W.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):ne?t.texSubImage2D(3553,he,0,0,W.width,W.height,X,L,W.data):t.texImage2D(3553,he,N,W.width,W.height,0,X,L,W.data)}else if(S.isDataTexture2DArray)ne?(ce&&t.texStorage3D(35866,se,N,y.width,y.height,y.depth),t.texSubImage3D(35866,0,0,0,0,y.width,y.height,y.depth,X,L,y.data)):t.texImage3D(35866,0,N,y.width,y.height,y.depth,0,X,L,y.data);else if(S.isDataTexture3D)ne?(ce&&t.texStorage3D(32879,se,N,y.width,y.height,y.depth),t.texSubImage3D(32879,0,0,0,0,y.width,y.height,y.depth,X,L,y.data)):t.texImage3D(32879,0,N,y.width,y.height,y.depth,0,X,L,y.data);else if(S.isFramebufferTexture)ne&&ce?t.texStorage2D(3553,se,N,y.width,y.height):t.texImage2D(3553,0,N,y.width,y.height,0,X,L,null);else if(V.length>0&&H){ne&&ce&&t.texStorage2D(3553,se,N,V[0].width,V[0].height);for(let he=0,fe=V.length;he<fe;he++)W=V[he],ne?t.texSubImage2D(3553,he,0,0,X,L,W):t.texImage2D(3553,he,N,X,L,W);S.generateMipmaps=!1}else ne?(ce&&t.texStorage2D(3553,se,N,y.width,y.height),t.texSubImage2D(3553,0,0,0,X,L,y)):t.texImage2D(3553,0,N,X,L,y);v(S,H)&&_(k),E.__version=S.version,S.onUpdate&&S.onUpdate(S)}function B(E,S,C,k,F){const y=r.convert(C.format),H=r.convert(C.type),X=x(C.internalFormat,y,H,C.encoding);n.get(S).__hasExternalTextures||(32879===F||35866===F?t.texImage3D(F,0,X,S.width,S.height,S.depth,0,y,H,null):t.texImage2D(F,0,X,S.width,S.height,0,y,H,null)),t.bindFramebuffer(36160,E),S.useRenderToTexture?d.framebufferTexture2DMultisampleEXT(36160,k,F,n.get(C).__webglTexture,0,re(S)):a.framebufferTexture2D(36160,k,F,n.get(C).__webglTexture,0),t.bindFramebuffer(36160,null)}function Q(E,S,C){if(a.bindRenderbuffer(36161,E),S.depthBuffer&&!S.stencilBuffer){let k=33189;if(C||S.useRenderToTexture){const F=S.depthTexture;F&&F.isDepthTexture&&(1015===F.type?k=36012:1014===F.type&&(k=33190));const y=re(S);S.useRenderToTexture?d.renderbufferStorageMultisampleEXT(36161,y,k,S.width,S.height):a.renderbufferStorageMultisample(36161,y,k,S.width,S.height)}else a.renderbufferStorage(36161,k,S.width,S.height);a.framebufferRenderbuffer(36160,36096,36161,E)}else if(S.depthBuffer&&S.stencilBuffer){const k=re(S);C&&S.useRenderbuffer?a.renderbufferStorageMultisample(36161,k,35056,S.width,S.height):S.useRenderToTexture?d.renderbufferStorageMultisampleEXT(36161,k,35056,S.width,S.height):a.renderbufferStorage(36161,34041,S.width,S.height),a.framebufferRenderbuffer(36160,33306,36161,E)}else{const k=!0===S.isWebGLMultipleRenderTargets?S.texture[0]:S.texture,F=r.convert(k.format),y=r.convert(k.type),H=x(k.internalFormat,F,y,k.encoding),X=re(S);C&&S.useRenderbuffer?a.renderbufferStorageMultisample(36161,X,H,S.width,S.height):S.useRenderToTexture?d.renderbufferStorageMultisampleEXT(36161,X,H,S.width,S.height):a.renderbufferStorage(36161,H,S.width,S.height)}a.bindRenderbuffer(36161,null)}function ee(E){const S=n.get(E),C=!0===E.isWebGLCubeRenderTarget;if(E.depthTexture&&!S.__autoAllocateDepthBuffer){if(C)throw new Error("target.depthTexture not supported in Cube render targets");!function(k,F){if(F&&F.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(t.bindFramebuffer(36160,k),!F.depthTexture||!F.depthTexture.isDepthTexture)throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");n.get(F.depthTexture).__webglTexture&&F.depthTexture.image.width===F.width&&F.depthTexture.image.height===F.height||(F.depthTexture.image.width=F.width,F.depthTexture.image.height=F.height,F.depthTexture.needsUpdate=!0),R(F.depthTexture,0);const y=n.get(F.depthTexture).__webglTexture,H=re(F);if(1026===F.depthTexture.format)F.useRenderToTexture?d.framebufferTexture2DMultisampleEXT(36160,36096,3553,y,0,H):a.framebufferTexture2D(36160,36096,3553,y,0);else{if(1027!==F.depthTexture.format)throw new Error("Unknown depthTexture format");F.useRenderToTexture?d.framebufferTexture2DMultisampleEXT(36160,33306,3553,y,0,H):a.framebufferTexture2D(36160,33306,3553,y,0)}}(S.__webglFramebuffer,E)}else if(C){S.__webglDepthbuffer=[];for(let k=0;k<6;k++)t.bindFramebuffer(36160,S.__webglFramebuffer[k]),S.__webglDepthbuffer[k]=a.createRenderbuffer(),Q(S.__webglDepthbuffer[k],E,!1)}else t.bindFramebuffer(36160,S.__webglFramebuffer),S.__webglDepthbuffer=a.createRenderbuffer(),Q(S.__webglDepthbuffer,E,!1);t.bindFramebuffer(36160,null)}function re(E){return o&&(E.useRenderbuffer||E.useRenderToTexture)?Math.min(u,E.samples):0}let ae=!1,pe=!1;this.allocateTextureUnit=function(){const E=O;return E>=l&&console.warn("THREE.WebGLTextures: Trying to use "+E+" texture units while this GPU supports only "+l),O+=1,E},this.resetTextureUnits=function(){O=0},this.setTexture2D=R,this.setTexture2DArray=function(E,S){const C=n.get(E);E.version>0&&C.__version!==E.version?$(C,E,S):(t.activeTexture(33984+S),t.bindTexture(35866,C.__webglTexture))},this.setTexture3D=function(E,S){const C=n.get(E);E.version>0&&C.__version!==E.version?$(C,E,S):(t.activeTexture(33984+S),t.bindTexture(32879,C.__webglTexture))},this.setTextureCube=q,this.rebindTextures=function(E,S,C){const k=n.get(E);void 0!==S&&B(k.__webglFramebuffer,E,E.texture,36064,3553),void 0!==C&&ee(E)},this.setupRenderTarget=function(E){const S=E.texture,C=n.get(E),k=n.get(S);E.addEventListener("dispose",z),!0!==E.isWebGLMultipleRenderTargets&&(void 0===k.__webglTexture&&(k.__webglTexture=a.createTexture()),k.__version=S.version,c.memory.textures++);const F=!0===E.isWebGLCubeRenderTarget,y=!0===E.isWebGLMultipleRenderTargets,H=S.isDataTexture3D||S.isDataTexture2DArray,X=f(E)||o;if(!o||1022!==S.format||1015!==S.type&&1016!==S.type||(S.format=1023,console.warn("THREE.WebGLRenderer: Rendering to textures with RGB format is not supported. Using RGBA format instead.")),F){C.__webglFramebuffer=[];for(let W=0;W<6;W++)C.__webglFramebuffer[W]=a.createFramebuffer()}else if(C.__webglFramebuffer=a.createFramebuffer(),y)if(i.drawBuffers){const W=E.texture;for(let L=0,N=W.length;L<N;L++){const V=n.get(W[L]);void 0===V.__webglTexture&&(V.__webglTexture=a.createTexture(),c.memory.textures++)}}else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.");else if(E.useRenderbuffer)if(o){C.__webglMultisampledFramebuffer=a.createFramebuffer(),C.__webglColorRenderbuffer=a.createRenderbuffer(),a.bindRenderbuffer(36161,C.__webglColorRenderbuffer);const W=r.convert(S.format),L=r.convert(S.type),N=x(S.internalFormat,W,L,S.encoding),V=re(E);a.renderbufferStorageMultisample(36161,V,N,E.width,E.height),t.bindFramebuffer(36160,C.__webglMultisampledFramebuffer),a.framebufferRenderbuffer(36160,36064,36161,C.__webglColorRenderbuffer),a.bindRenderbuffer(36161,null),E.depthBuffer&&(C.__webglDepthRenderbuffer=a.createRenderbuffer(),Q(C.__webglDepthRenderbuffer,E,!0)),t.bindFramebuffer(36160,null)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.");if(F){t.bindTexture(34067,k.__webglTexture),Y(34067,S,X);for(let W=0;W<6;W++)B(C.__webglFramebuffer[W],E,S,36064,34069+W);v(S,X)&&_(34067),t.unbindTexture()}else if(y){const W=E.texture;for(let L=0,N=W.length;L<N;L++){const V=W[L],ne=n.get(V);t.bindTexture(3553,ne.__webglTexture),Y(3553,V,X),B(C.__webglFramebuffer,E,V,36064+L,3553),v(V,X)&&_(3553)}t.unbindTexture()}else{let W=3553;H&&(o?W=S.isDataTexture3D?32879:35866:console.warn("THREE.DataTexture3D and THREE.DataTexture2DArray only supported with WebGL2.")),t.bindTexture(W,k.__webglTexture),Y(W,S,X),B(C.__webglFramebuffer,E,S,36064,W),v(S,X)&&_(W),t.unbindTexture()}E.depthBuffer&&ee(E)},this.updateRenderTargetMipmap=function(E){const S=f(E)||o,C=!0===E.isWebGLMultipleRenderTargets?E.texture:[E.texture];for(let k=0,F=C.length;k<F;k++){const y=C[k];if(v(y,S)){const H=E.isWebGLCubeRenderTarget?34067:3553,X=n.get(y).__webglTexture;t.bindTexture(H,X),_(H),t.unbindTexture()}}},this.updateMultisampleRenderTarget=function(E){if(E.useRenderbuffer)if(o){const S=E.width,C=E.height;let k=16384;const F=[36064],y=E.stencilBuffer?33306:36096;E.depthBuffer&&F.push(y),E.ignoreDepthForMultisampleCopy||(E.depthBuffer&&(k|=256),E.stencilBuffer&&(k|=1024));const H=n.get(E);t.bindFramebuffer(36008,H.__webglMultisampledFramebuffer),t.bindFramebuffer(36009,H.__webglFramebuffer),E.ignoreDepthForMultisampleCopy&&(a.invalidateFramebuffer(36008,[y]),a.invalidateFramebuffer(36009,[y])),a.blitFramebuffer(0,0,S,C,0,0,S,C,k,9728),a.invalidateFramebuffer(36008,F),t.bindFramebuffer(36008,null),t.bindFramebuffer(36009,H.__webglMultisampledFramebuffer)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.")},this.setupDepthRenderbuffer=ee,this.setupFrameBufferTexture=B,this.safeSetTexture2D=function(E,S){E&&E.isWebGLRenderTarget&&(!1===ae&&(console.warn("THREE.WebGLTextures.safeSetTexture2D: don't use render targets as textures. Use their .texture property instead."),ae=!0),E=E.texture),R(E,S)},this.safeSetTextureCube=function(E,S){E&&E.isWebGLCubeRenderTarget&&(!1===pe&&(console.warn("THREE.WebGLTextures.safeSetTextureCube: don't use cube render targets as textures. Use their .texture property instead."),pe=!0),E=E.texture),q(E,S)}}function Uo(a,e,t){const n=t.isWebGL2;return{convert:function(i){let r;if(1009===i)return 5121;if(1017===i)return 32819;if(1018===i)return 32820;if(1019===i)return 33635;if(1010===i)return 5120;if(1011===i)return 5122;if(1012===i)return 5123;if(1013===i)return 5124;if(1014===i)return 5125;if(1015===i)return 5126;if(1016===i)return n?5131:(r=e.get("OES_texture_half_float"),null!==r?r.HALF_FLOAT_OES:null);if(1021===i)return 6406;if(1022===i)return 6407;if(1023===i)return 6408;if(1024===i)return 6409;if(1025===i)return 6410;if(1026===i)return 6402;if(1027===i)return 34041;if(1028===i)return 6403;if(1029===i)return 36244;if(1030===i)return 33319;if(1031===i)return 33320;if(1032===i)return 36248;if(1033===i)return 36249;if(33776===i||33777===i||33778===i||33779===i){if(r=e.get("WEBGL_compressed_texture_s3tc"),null===r)return null;if(33776===i)return r.COMPRESSED_RGB_S3TC_DXT1_EXT;if(33777===i)return r.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(33778===i)return r.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(33779===i)return r.COMPRESSED_RGBA_S3TC_DXT5_EXT}if(35840===i||35841===i||35842===i||35843===i){if(r=e.get("WEBGL_compressed_texture_pvrtc"),null===r)return null;if(35840===i)return r.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(35841===i)return r.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(35842===i)return r.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(35843===i)return r.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(36196===i)return r=e.get("WEBGL_compressed_texture_etc1"),null!==r?r.COMPRESSED_RGB_ETC1_WEBGL:null;if((37492===i||37496===i)&&(r=e.get("WEBGL_compressed_texture_etc"),null!==r)){if(37492===i)return r.COMPRESSED_RGB8_ETC2;if(37496===i)return r.COMPRESSED_RGBA8_ETC2_EAC}return 37808===i||37809===i||37810===i||37811===i||37812===i||37813===i||37814===i||37815===i||37816===i||37817===i||37818===i||37819===i||37820===i||37821===i||37840===i||37841===i||37842===i||37843===i||37844===i||37845===i||37846===i||37847===i||37848===i||37849===i||37850===i||37851===i||37852===i||37853===i?(r=e.get("WEBGL_compressed_texture_astc"),null!==r?i:null):36492===i?(r=e.get("EXT_texture_compression_bptc"),null!==r?i:null):1020===i?n?34042:(r=e.get("WEBGL_depth_texture"),null!==r?r.UNSIGNED_INT_24_8_WEBGL:null):void 0}}}na.prototype.isMeshDistanceMaterial=!0;class ia extends Qe{constructor(e=[]){super(),this.cameras=e}}ia.prototype.isArrayCamera=!0;class ze extends Ye{constructor(){super(),this.type="Group"}}ze.prototype.isGroup=!0;const zo={type:"move"};class Ui{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return null===this._hand&&(this._hand=new ze,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return null===this._targetRay&&(this._targetRay=new ze,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new P,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new P),this._targetRay}getGripSpace(){return null===this._grip&&(this._grip=new ze,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new P,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new P),this._grip}dispatchEvent(e){return null!==this._targetRay&&this._targetRay.dispatchEvent(e),null!==this._grip&&this._grip.dispatchEvent(e),null!==this._hand&&this._hand.dispatchEvent(e),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),null!==this._targetRay&&(this._targetRay.visible=!1),null!==this._grip&&(this._grip.visible=!1),null!==this._hand&&(this._hand.visible=!1),this}update(e,t,n){let i=null,r=null,c=null;const o=this._targetRay,l=this._grip,s=this._hand;if(e&&"visible-blurred"!==t.session.visibilityState)if(null!==o&&(i=t.getPose(e.targetRaySpace,n),null!==i&&(o.matrix.fromArray(i.transform.matrix),o.matrix.decompose(o.position,o.rotation,o.scale),i.linearVelocity?(o.hasLinearVelocity=!0,o.linearVelocity.copy(i.linearVelocity)):o.hasLinearVelocity=!1,i.angularVelocity?(o.hasAngularVelocity=!0,o.angularVelocity.copy(i.angularVelocity)):o.hasAngularVelocity=!1,this.dispatchEvent(zo))),s&&e.hand){c=!0;for(const m of e.hand.values()){const M=t.getJointPose(m,n);if(void 0===s.joints[m.jointName]){const f=new ze;f.matrixAutoUpdate=!1,f.visible=!1,s.joints[m.jointName]=f,s.add(f)}const w=s.joints[m.jointName];null!==M&&(w.matrix.fromArray(M.transform.matrix),w.matrix.decompose(w.position,w.rotation,w.scale),w.jointRadius=M.radius),w.visible=null!==M}const d=s.joints["index-finger-tip"].position.distanceTo(s.joints["thumb-tip"].position),p=.02,g=.005;s.inputState.pinching&&d>p+g?(s.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!s.inputState.pinching&&d<=p-g&&(s.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else null!==l&&e.gripSpace&&(r=t.getPose(e.gripSpace,n),null!==r&&(l.matrix.fromArray(r.transform.matrix),l.matrix.decompose(l.position,l.rotation,l.scale),r.linearVelocity?(l.hasLinearVelocity=!0,l.linearVelocity.copy(r.linearVelocity)):l.hasLinearVelocity=!1,r.angularVelocity?(l.hasAngularVelocity=!0,l.angularVelocity.copy(r.angularVelocity)):l.hasAngularVelocity=!1));return null!==o&&(o.visible=null!==i),null!==l&&(l.visible=null!==r),null!==s&&(s.visible=null!==c),this}}class zi extends Be{constructor(e,t,n,i,r,c,o,l,s,h){if(1026!==(h=void 0!==h?h:1026)&&1027!==h)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");void 0===n&&1026===h&&(n=1012),void 0===n&&1027===h&&(n=1020),super(null,i,r,c,o,l,h,n,s),this.image={width:e,height:t},this.magFilter=void 0!==o?o:1003,this.minFilter=void 0!==l?l:1003,this.flipY=!1,this.generateMipmaps=!1}}zi.prototype.isDepthTexture=!0;class Oo extends Ut{constructor(e,t){super();const n=this;let i=null,r=1,c=null,o="local-floor";const l=e.extensions.has("WEBGL_multisampled_render_to_texture");let s=null,h=null,u=null,d=null,p=!1,g=null;const m=t.getContextAttributes();let M=null,w=null;const f=[],v=new Map,_=new Qe;_.layers.enable(1),_.viewport=new Fe;const x=new Qe;x.layers.enable(2),x.viewport=new Fe;const T=[_,x],A=new ia;A.layers.enable(1),A.layers.enable(2);let D=null,z=null;function O(B){const Q=v.get(B.inputSource);Q&&Q.dispatchEvent({type:B.type,data:B.inputSource})}function R(){v.forEach(function(B,Q){B.disconnect(Q)}),v.clear(),D=null,z=null,e.setRenderTarget(M),d=null,u=null,h=null,i=null,w=null,$.stop(),n.isPresenting=!1,n.dispatchEvent({type:"sessionend"})}function q(B){const Q=i.inputSources;for(let ee=0;ee<f.length;ee++)v.set(Q[ee],f[ee]);for(let ee=0;ee<B.removed.length;ee++){const re=B.removed[ee],ae=v.get(re);ae&&(ae.dispatchEvent({type:"disconnected",data:re}),v.delete(re))}for(let ee=0;ee<B.added.length;ee++){const re=B.added[ee],ae=v.get(re);ae&&ae.dispatchEvent({type:"connected",data:re})}}this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(B){let Q=f[B];return void 0===Q&&(Q=new Ui,f[B]=Q),Q.getTargetRaySpace()},this.getControllerGrip=function(B){let Q=f[B];return void 0===Q&&(Q=new Ui,f[B]=Q),Q.getGripSpace()},this.getHand=function(B){let Q=f[B];return void 0===Q&&(Q=new Ui,f[B]=Q),Q.getHandSpace()},this.setFramebufferScaleFactor=function(B){r=B,!0===n.isPresenting&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(B){o=B,!0===n.isPresenting&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return c},this.getBaseLayer=function(){return null!==u?u:d},this.getBinding=function(){return h},this.getFrame=function(){return g},this.getSession=function(){return i},this.setSession=async function(B){if(i=B,null!==i){if(M=e.getRenderTarget(),i.addEventListener("select",O),i.addEventListener("selectstart",O),i.addEventListener("selectend",O),i.addEventListener("squeeze",O),i.addEventListener("squeezestart",O),i.addEventListener("squeezeend",O),i.addEventListener("end",R),i.addEventListener("inputsourceschange",q),!0!==m.xrCompatible&&await t.makeXRCompatible(),void 0===i.renderState.layers||!1===e.capabilities.isWebGL2)d=new XRWebGLLayer(i,t,{antialias:void 0!==i.renderState.layers||m.antialias,alpha:m.alpha,depth:m.depth,stencil:m.stencil,framebufferScaleFactor:r}),i.updateRenderState({baseLayer:d}),w=new it(d.framebufferWidth,d.framebufferHeight,{format:1023,type:1009,encoding:e.outputEncoding});else{p=m.antialias;let Q=null,ee=null,re=null;m.depth&&(re=m.stencil?35056:33190,Q=m.stencil?1027:1026,ee=m.stencil?1020:1012);const ae={colorFormat:m.alpha||p?32856:32849,depthFormat:re,scaleFactor:r};h=new XRWebGLBinding(i,t),u=h.createProjectionLayer(ae),i.updateRenderState({layers:[u]}),w=p?new ti(u.textureWidth,u.textureHeight,{format:1023,type:1009,depthTexture:new zi(u.textureWidth,u.textureHeight,ee,void 0,void 0,void 0,void 0,void 0,void 0,Q),stencilBuffer:m.stencil,ignoreDepth:u.ignoreDepthValues,useRenderToTexture:l,encoding:e.outputEncoding}):new it(u.textureWidth,u.textureHeight,{format:m.alpha?1023:1022,type:1009,depthTexture:new zi(u.textureWidth,u.textureHeight,ee,void 0,void 0,void 0,void 0,void 0,void 0,Q),stencilBuffer:m.stencil,ignoreDepth:u.ignoreDepthValues,encoding:e.outputEncoding})}this.setFoveation(1),c=await i.requestReferenceSpace(o),$.setContext(i),$.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}};const Z=new P,I=new P;function Y(B,Q){null===Q?B.matrixWorld.copy(B.matrix):B.matrixWorld.multiplyMatrices(Q.matrixWorld,B.matrix),B.matrixWorldInverse.copy(B.matrixWorld).invert()}this.updateCamera=function(B){if(null===i)return;A.near=x.near=_.near=B.near,A.far=x.far=_.far=B.far,D===A.near&&z===A.far||(i.updateRenderState({depthNear:A.near,depthFar:A.far}),D=A.near,z=A.far);const Q=B.parent,ee=A.cameras;Y(A,Q);for(let ae=0;ae<ee.length;ae++)Y(ee[ae],Q);A.matrixWorld.decompose(A.position,A.quaternion,A.scale),B.position.copy(A.position),B.quaternion.copy(A.quaternion),B.scale.copy(A.scale),B.matrix.copy(A.matrix),B.matrixWorld.copy(A.matrixWorld);const re=B.children;for(let ae=0,pe=re.length;ae<pe;ae++)re[ae].updateMatrixWorld(!0);2===ee.length?function(ae,pe,E){Z.setFromMatrixPosition(pe.matrixWorld),I.setFromMatrixPosition(E.matrixWorld);const S=Z.distanceTo(I),C=pe.projectionMatrix.elements,k=E.projectionMatrix.elements,F=C[14]/(C[10]-1),y=C[14]/(C[10]+1),H=(C[9]+1)/C[5],X=(C[9]-1)/C[5],W=(C[8]-1)/C[0],L=(k[8]+1)/k[0],N=F*W,V=F*L,ne=S/(-W+L),ce=ne*-W;pe.matrixWorld.decompose(ae.position,ae.quaternion,ae.scale),ae.translateX(ce),ae.translateZ(ne),ae.matrixWorld.compose(ae.position,ae.quaternion,ae.scale),ae.matrixWorldInverse.copy(ae.matrixWorld).invert();const se=F+ne,he=y+ne;ae.projectionMatrix.makePerspective(N-ce,V+(S-ce),H*y/he*se,X*y/he*se,se,he)}(A,_,x):A.projectionMatrix.copy(_.projectionMatrix)},this.getCamera=function(){return A},this.getFoveation=function(){return null!==u?u.fixedFoveation:null!==d?d.fixedFoveation:void 0},this.setFoveation=function(B){null!==u&&(u.fixedFoveation=B),null!==d&&void 0!==d.fixedFoveation&&(d.fixedFoveation=B)};let K=null;const $=new Mr;$.setAnimationLoop(function(B,Q){if(s=Q.getViewerPose(c),g=Q,null!==s){const re=s.views;null!==d&&(e.setRenderTargetFramebuffer(w,d.framebuffer),e.setRenderTarget(w));let ae=!1;re.length!==A.cameras.length&&(A.cameras.length=0,ae=!0);for(let pe=0;pe<re.length;pe++){const E=re[pe];let S=null;if(null!==d)S=d.getViewport(E);else{const k=h.getViewSubImage(u,E);S=k.viewport,0===pe&&(e.setRenderTargetTextures(w,k.colorTexture,u.ignoreDepthValues?void 0:k.depthStencilTexture),e.setRenderTarget(w))}const C=T[pe];C.matrix.fromArray(E.transform.matrix),C.projectionMatrix.fromArray(E.projectionMatrix),C.viewport.set(S.x,S.y,S.width,S.height),0===pe&&A.matrix.copy(C.matrix),!0===ae&&A.cameras.push(C)}}const ee=i.inputSources;for(let re=0;re<f.length;re++)f[re].update(ee[re],Q,c);K&&K(B,Q),g=null}),this.setAnimationLoop=function(B){K=B},this.dispose=function(){}}}function Bo(a){function e(n,i){n.opacity.value=i.opacity,i.color&&n.diffuse.value.copy(i.color),i.emissive&&n.emissive.value.copy(i.emissive).multiplyScalar(i.emissiveIntensity),i.map&&(n.map.value=i.map),i.alphaMap&&(n.alphaMap.value=i.alphaMap),i.specularMap&&(n.specularMap.value=i.specularMap),i.alphaTest>0&&(n.alphaTest.value=i.alphaTest);const r=a.get(i).envMap;let c,o;r&&(n.envMap.value=r,n.flipEnvMap.value=r.isCubeTexture&&!1===r.isRenderTargetTexture?-1:1,n.reflectivity.value=i.reflectivity,n.ior.value=i.ior,n.refractionRatio.value=i.refractionRatio),i.lightMap&&(n.lightMap.value=i.lightMap,n.lightMapIntensity.value=i.lightMapIntensity),i.aoMap&&(n.aoMap.value=i.aoMap,n.aoMapIntensity.value=i.aoMapIntensity),i.map?c=i.map:i.specularMap?c=i.specularMap:i.displacementMap?c=i.displacementMap:i.normalMap?c=i.normalMap:i.bumpMap?c=i.bumpMap:i.roughnessMap?c=i.roughnessMap:i.metalnessMap?c=i.metalnessMap:i.alphaMap?c=i.alphaMap:i.emissiveMap?c=i.emissiveMap:i.clearcoatMap?c=i.clearcoatMap:i.clearcoatNormalMap?c=i.clearcoatNormalMap:i.clearcoatRoughnessMap?c=i.clearcoatRoughnessMap:i.specularIntensityMap?c=i.specularIntensityMap:i.specularColorMap?c=i.specularColorMap:i.transmissionMap?c=i.transmissionMap:i.thicknessMap?c=i.thicknessMap:i.sheenColorMap?c=i.sheenColorMap:i.sheenRoughnessMap&&(c=i.sheenRoughnessMap),void 0!==c&&(c.isWebGLRenderTarget&&(c=c.texture),!0===c.matrixAutoUpdate&&c.updateMatrix(),n.uvTransform.value.copy(c.matrix)),i.aoMap?o=i.aoMap:i.lightMap&&(o=i.lightMap),void 0!==o&&(o.isWebGLRenderTarget&&(o=o.texture),!0===o.matrixAutoUpdate&&o.updateMatrix(),n.uv2Transform.value.copy(o.matrix))}function t(n,i){n.roughness.value=i.roughness,n.metalness.value=i.metalness,i.roughnessMap&&(n.roughnessMap.value=i.roughnessMap),i.metalnessMap&&(n.metalnessMap.value=i.metalnessMap),i.emissiveMap&&(n.emissiveMap.value=i.emissiveMap),i.bumpMap&&(n.bumpMap.value=i.bumpMap,n.bumpScale.value=i.bumpScale,1===i.side&&(n.bumpScale.value*=-1)),i.normalMap&&(n.normalMap.value=i.normalMap,n.normalScale.value.copy(i.normalScale),1===i.side&&n.normalScale.value.negate()),i.displacementMap&&(n.displacementMap.value=i.displacementMap,n.displacementScale.value=i.displacementScale,n.displacementBias.value=i.displacementBias),a.get(i).envMap&&(n.envMapIntensity.value=i.envMapIntensity)}return{refreshFogUniforms:function(n,i){n.fogColor.value.copy(i.color),i.isFog?(n.fogNear.value=i.near,n.fogFar.value=i.far):i.isFogExp2&&(n.fogDensity.value=i.density)},refreshMaterialUniforms:function(n,i,r,c,o){var s;i.isMeshBasicMaterial?e(n,i):i.isMeshLambertMaterial?(e(n,i),(s=i).emissiveMap&&(n.emissiveMap.value=s.emissiveMap)):i.isMeshToonMaterial?(e(n,i),function(l,s){s.gradientMap&&(l.gradientMap.value=s.gradientMap),s.emissiveMap&&(l.emissiveMap.value=s.emissiveMap),s.bumpMap&&(l.bumpMap.value=s.bumpMap,l.bumpScale.value=s.bumpScale,1===s.side&&(l.bumpScale.value*=-1)),s.normalMap&&(l.normalMap.value=s.normalMap,l.normalScale.value.copy(s.normalScale),1===s.side&&l.normalScale.value.negate()),s.displacementMap&&(l.displacementMap.value=s.displacementMap,l.displacementScale.value=s.displacementScale,l.displacementBias.value=s.displacementBias)}(n,i)):i.isMeshPhongMaterial?(e(n,i),function(l,s){l.specular.value.copy(s.specular),l.shininess.value=Math.max(s.shininess,1e-4),s.emissiveMap&&(l.emissiveMap.value=s.emissiveMap),s.bumpMap&&(l.bumpMap.value=s.bumpMap,l.bumpScale.value=s.bumpScale,1===s.side&&(l.bumpScale.value*=-1)),s.normalMap&&(l.normalMap.value=s.normalMap,l.normalScale.value.copy(s.normalScale),1===s.side&&l.normalScale.value.negate()),s.displacementMap&&(l.displacementMap.value=s.displacementMap,l.displacementScale.value=s.displacementScale,l.displacementBias.value=s.displacementBias)}(n,i)):i.isMeshStandardMaterial?(e(n,i),i.isMeshPhysicalMaterial?function(l,s,h){t(l,s),l.ior.value=s.ior,s.sheen>0&&(l.sheenColor.value.copy(s.sheenColor).multiplyScalar(s.sheen),l.sheenRoughness.value=s.sheenRoughness,s.sheenColorMap&&(l.sheenColorMap.value=s.sheenColorMap),s.sheenRoughnessMap&&(l.sheenRoughnessMap.value=s.sheenRoughnessMap)),s.clearcoat>0&&(l.clearcoat.value=s.clearcoat,l.clearcoatRoughness.value=s.clearcoatRoughness,s.clearcoatMap&&(l.clearcoatMap.value=s.clearcoatMap),s.clearcoatRoughnessMap&&(l.clearcoatRoughnessMap.value=s.clearcoatRoughnessMap),s.clearcoatNormalMap&&(l.clearcoatNormalScale.value.copy(s.clearcoatNormalScale),l.clearcoatNormalMap.value=s.clearcoatNormalMap,1===s.side&&l.clearcoatNormalScale.value.negate())),s.transmission>0&&(l.transmission.value=s.transmission,l.transmissionSamplerMap.value=h.texture,l.transmissionSamplerSize.value.set(h.width,h.height),s.transmissionMap&&(l.transmissionMap.value=s.transmissionMap),l.thickness.value=s.thickness,s.thicknessMap&&(l.thicknessMap.value=s.thicknessMap),l.attenuationDistance.value=s.attenuationDistance,l.attenuationColor.value.copy(s.attenuationColor)),l.specularIntensity.value=s.specularIntensity,l.specularColor.value.copy(s.specularColor),s.specularIntensityMap&&(l.specularIntensityMap.value=s.specularIntensityMap),s.specularColorMap&&(l.specularColorMap.value=s.specularColorMap)}(n,i,o):t(n,i)):i.isMeshMatcapMaterial?(e(n,i),function(l,s){s.matcap&&(l.matcap.value=s.matcap),s.bumpMap&&(l.bumpMap.value=s.bumpMap,l.bumpScale.value=s.bumpScale,1===s.side&&(l.bumpScale.value*=-1)),s.normalMap&&(l.normalMap.value=s.normalMap,l.normalScale.value.copy(s.normalScale),1===s.side&&l.normalScale.value.negate()),s.displacementMap&&(l.displacementMap.value=s.displacementMap,l.displacementScale.value=s.displacementScale,l.displacementBias.value=s.displacementBias)}(n,i)):i.isMeshDepthMaterial?(e(n,i),function(l,s){s.displacementMap&&(l.displacementMap.value=s.displacementMap,l.displacementScale.value=s.displacementScale,l.displacementBias.value=s.displacementBias)}(n,i)):i.isMeshDistanceMaterial?(e(n,i),function(l,s){s.displacementMap&&(l.displacementMap.value=s.displacementMap,l.displacementScale.value=s.displacementScale,l.displacementBias.value=s.displacementBias),l.referencePosition.value.copy(s.referencePosition),l.nearDistance.value=s.nearDistance,l.farDistance.value=s.farDistance}(n,i)):i.isMeshNormalMaterial?(e(n,i),function(l,s){s.bumpMap&&(l.bumpMap.value=s.bumpMap,l.bumpScale.value=s.bumpScale,1===s.side&&(l.bumpScale.value*=-1)),s.normalMap&&(l.normalMap.value=s.normalMap,l.normalScale.value.copy(s.normalScale),1===s.side&&l.normalScale.value.negate()),s.displacementMap&&(l.displacementMap.value=s.displacementMap,l.displacementScale.value=s.displacementScale,l.displacementBias.value=s.displacementBias)}(n,i)):i.isLineBasicMaterial?(function(l,s){l.diffuse.value.copy(s.color),l.opacity.value=s.opacity}(n,i),i.isLineDashedMaterial&&function(l,s){l.dashSize.value=s.dashSize,l.totalSize.value=s.dashSize+s.gapSize,l.scale.value=s.scale}(n,i)):i.isPointsMaterial?function(l,s,h,u){let d;l.diffuse.value.copy(s.color),l.opacity.value=s.opacity,l.size.value=s.size*h,l.scale.value=.5*u,s.map&&(l.map.value=s.map),s.alphaMap&&(l.alphaMap.value=s.alphaMap),s.alphaTest>0&&(l.alphaTest.value=s.alphaTest),s.map?d=s.map:s.alphaMap&&(d=s.alphaMap),void 0!==d&&(!0===d.matrixAutoUpdate&&d.updateMatrix(),l.uvTransform.value.copy(d.matrix))}(n,i,r,c):i.isSpriteMaterial?function(l,s){let h;l.diffuse.value.copy(s.color),l.opacity.value=s.opacity,l.rotation.value=s.rotation,s.map&&(l.map.value=s.map),s.alphaMap&&(l.alphaMap.value=s.alphaMap),s.alphaTest>0&&(l.alphaTest.value=s.alphaTest),s.map?h=s.map:s.alphaMap&&(h=s.alphaMap),void 0!==h&&(!0===h.matrixAutoUpdate&&h.updateMatrix(),l.uvTransform.value.copy(h.matrix))}(n,i):i.isShadowMaterial?(n.color.value.copy(i.color),n.opacity.value=i.opacity):i.isShaderMaterial&&(i.uniformsNeedUpdate=!1)}}}function ra(a={}){const e=void 0!==a.canvas?a.canvas:function(){const b=$n("canvas");return b.style.display="block",b}(),t=void 0!==a.context?a.context:null,n=void 0!==a.alpha&&a.alpha,i=void 0===a.depth||a.depth,r=void 0===a.stencil||a.stencil,c=void 0!==a.antialias&&a.antialias,o=void 0===a.premultipliedAlpha||a.premultipliedAlpha,l=void 0!==a.preserveDrawingBuffer&&a.preserveDrawingBuffer,s=void 0!==a.powerPreference?a.powerPreference:"default",h=void 0!==a.failIfMajorPerformanceCaveat&&a.failIfMajorPerformanceCaveat;let u=null,d=null;const p=[],g=[];this.domElement=e,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.outputEncoding=3e3,this.physicallyCorrectLights=!1,this.toneMapping=0,this.toneMappingExposure=1;const m=this;let M=!1,w=0,f=0,v=null,_=-1,x=null;const T=new Fe,A=new Fe;let D=null,z=e.width,O=e.height,R=1,q=null,Z=null;const I=new Fe(0,0,z,O),Y=new Fe(0,0,z,O);let K=!1;const $=[],B=new Ei;let Q=!1,ee=!1,re=null;const ae=new Ce,pe=new P,E={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function S(){return null===v?R:1}let C,k,F,y,H,X,W,L,N,V,ne,ce,se,he,fe,Le,oe,be,Pe,Fa,Ca,lt,kt,te=t;function Na(b,U){for(let G=0;G<b.length;G++){const J=e.getContext(b[G],U);if(null!==J)return J}return null}try{const b={alpha:n,depth:i,stencil:r,antialias:c,premultipliedAlpha:o,preserveDrawingBuffer:l,powerPreference:s,failIfMajorPerformanceCaveat:h};if("setAttribute"in e&&e.setAttribute("data-engine","three.js r136"),e.addEventListener("webglcontextlost",Ia,!1),e.addEventListener("webglcontextrestored",Ra,!1),null===te){const U=["webgl2","webgl","experimental-webgl"];if(!0===m.isWebGL1Renderer&&U.shift(),te=Na(U,b),null===te)throw Na(U)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}void 0===te.getShaderPrecisionFormat&&(te.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(b){throw console.error("THREE.WebGLRenderer: "+b.message),b}function Da(){C=new xs(te),k=new ds(te,C,a),C.init(k),lt=new Uo(te,C,k),F=new Io(te,C,k),$[0]=1029,y=new ys(te),H=new Ao,X=new Ro(te,C,F,H,k,lt,y),W=new ps(m),L=new gs(m),N=new os(te,k),kt=new cs(te,C,N,k),V=new _s(te,N,y,kt),ne=new ws(te,V,N,y),Pe=new Ss(te,k,X),Le=new us(H),ce=new wo(m,W,L,C,k,kt,Le),se=new Bo(H),he=new Eo,fe=new No(C,k),be=new ls(m,W,F,ne,o),oe=new Do(m,ne,k),Fa=new hs(te,C,y,k),Ca=new vs(te,C,y,k),y.programs=ce.programs,m.capabilities=k,m.extensions=C,m.properties=H,m.renderLists=he,m.shadowMap=oe,m.state=F,m.info=y}Da();const qe=new Oo(m,te);function Ia(b){b.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),M=!0}function Ra(){console.log("THREE.WebGLRenderer: Context Restored."),M=!1;const b=y.autoReset,U=oe.enabled,G=oe.autoUpdate,j=oe.needsUpdate,J=oe.type;Da(),y.autoReset=b,oe.enabled=U,oe.autoUpdate=G,oe.needsUpdate=j,oe.type=J}function Ua(b){const U=b.target;var G;U.removeEventListener("dispose",Ua),function(j){const J=H.get(j).programs;void 0!==J&&(J.forEach(function(de){ce.releaseProgram(de)}),j.isShaderMaterial&&ce.releaseShaderCache(j))}(G=U),H.remove(G)}this.xr=qe,this.getContext=function(){return te},this.getContextAttributes=function(){return te.getContextAttributes()},this.forceContextLoss=function(){const b=C.get("WEBGL_lose_context");b&&b.loseContext()},this.forceContextRestore=function(){const b=C.get("WEBGL_lose_context");b&&b.restoreContext()},this.getPixelRatio=function(){return R},this.setPixelRatio=function(b){void 0!==b&&(R=b,this.setSize(z,O,!1))},this.getSize=function(b){return b.set(z,O)},this.setSize=function(b,U,G){qe.isPresenting?console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting."):(z=b,O=U,e.width=Math.floor(b*R),e.height=Math.floor(U*R),!1!==G&&(e.style.width=b+"px",e.style.height=U+"px"),this.setViewport(0,0,b,U))},this.getDrawingBufferSize=function(b){return b.set(z*R,O*R).floor()},this.setDrawingBufferSize=function(b,U,G){z=b,O=U,R=G,e.width=Math.floor(b*G),e.height=Math.floor(U*G),this.setViewport(0,0,b,U)},this.getCurrentViewport=function(b){return b.copy(T)},this.getViewport=function(b){return b.copy(I)},this.setViewport=function(b,U,G,j){b.isVector4?I.set(b.x,b.y,b.z,b.w):I.set(b,U,G,j),F.viewport(T.copy(I).multiplyScalar(R).floor())},this.getScissor=function(b){return b.copy(Y)},this.setScissor=function(b,U,G,j){b.isVector4?Y.set(b.x,b.y,b.z,b.w):Y.set(b,U,G,j),F.scissor(A.copy(Y).multiplyScalar(R).floor())},this.getScissorTest=function(){return K},this.setScissorTest=function(b){F.setScissorTest(K=b)},this.setOpaqueSort=function(b){q=b},this.setTransparentSort=function(b){Z=b},this.getClearColor=function(b){return b.copy(be.getClearColor())},this.setClearColor=function(){be.setClearColor.apply(be,arguments)},this.getClearAlpha=function(){return be.getClearAlpha()},this.setClearAlpha=function(){be.setClearAlpha.apply(be,arguments)},this.clear=function(b,U,G){let j=0;(void 0===b||b)&&(j|=16384),(void 0===U||U)&&(j|=256),(void 0===G||G)&&(j|=1024),te.clear(j)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){e.removeEventListener("webglcontextlost",Ia,!1),e.removeEventListener("webglcontextrestored",Ra,!1),he.dispose(),fe.dispose(),H.dispose(),W.dispose(),L.dispose(),ne.dispose(),kt.dispose(),ce.dispose(),qe.dispose(),qe.removeEventListener("sessionstart",za),qe.removeEventListener("sessionend",Oa),re&&(re.dispose(),re=null),Ht.stop()},this.renderBufferDirect=function(b,U,G,j,J,de){null===U&&(U=E);const ge=J.isMesh&&J.matrixWorld.determinant()<0,ue=function(Oe,_n,ct,me,Re){!0!==_n.isScene&&(_n=E),X.resetTextureUnits();const Ki=_n.fog,el=null===v?m.outputEncoding:v.texture.encoding,tl=(me.isMeshStandardMaterial?L:W).get(me.envMap||(me.isMeshStandardMaterial?_n.environment:null)),nl=!0===me.vertexColors&&!!ct.attributes.color&&4===ct.attributes.color.itemSize,il=!!me.normalMap&&!!ct.attributes.tangent,rl=!!ct.morphAttributes.position,al=!!ct.morphAttributes.normal,sl=ct.morphAttributes.position?ct.morphAttributes.position.length:0,ol=me.toneMapped?m.toneMapping:0,Ae=H.get(me),ll=d.state.lights;!0!==Q||!0!==ee&&Oe===x||Le.setState(me,Oe,Oe===x&&me.id===_);let bt=!1;me.version===Ae.__version?Ae.needsLights&&Ae.lightsStateVersion!==ll.state.version||Ae.outputEncoding!==el||Re.isInstancedMesh&&!1===Ae.instancing?bt=!0:Re.isInstancedMesh||!0!==Ae.instancing?Re.isSkinnedMesh&&!1===Ae.skinning?bt=!0:Re.isSkinnedMesh||!0!==Ae.skinning?Ae.envMap!==tl||me.fog&&Ae.fog!==Ki?bt=!0:void 0===Ae.numClippingPlanes||Ae.numClippingPlanes===Le.numPlanes&&Ae.numIntersection===Le.numIntersection?(Ae.vertexAlphas!==nl||Ae.vertexTangents!==il||Ae.morphTargets!==rl||Ae.morphNormals!==al||Ae.toneMapping!==ol||!0===k.isWebGL2&&Ae.morphTargetsCount!==sl)&&(bt=!0):bt=!0:bt=!0:bt=!0:(bt=!0,Ae.__version=me.version);let vn=Ae.currentProgram;!0===bt&&(vn=Zi(me,_n,Re));let Ha=!1,yn=!1,$i=!1;const He=vn.getUniforms(),Mn=Ae.uniforms;if(F.useProgram(vn.program)&&(Ha=!0,yn=!0,$i=!0),me.id!==_&&(_=me.id,yn=!0),Ha||x!==Oe){if(He.setValue(te,"projectionMatrix",Oe.projectionMatrix),k.logarithmicDepthBuffer&&He.setValue(te,"logDepthBufFC",2/(Math.log(Oe.far+1)/Math.LN2)),x!==Oe&&(x=Oe,yn=!0,$i=!0),me.isShaderMaterial||me.isMeshPhongMaterial||me.isMeshToonMaterial||me.isMeshStandardMaterial||me.envMap){const dt=He.map.cameraPosition;void 0!==dt&&dt.setValue(te,pe.setFromMatrixPosition(Oe.matrixWorld))}(me.isMeshPhongMaterial||me.isMeshToonMaterial||me.isMeshLambertMaterial||me.isMeshBasicMaterial||me.isMeshStandardMaterial||me.isShaderMaterial)&&He.setValue(te,"isOrthographic",!0===Oe.isOrthographicCamera),(me.isMeshPhongMaterial||me.isMeshToonMaterial||me.isMeshLambertMaterial||me.isMeshBasicMaterial||me.isMeshStandardMaterial||me.isShaderMaterial||me.isShadowMaterial||Re.isSkinnedMesh)&&He.setValue(te,"viewMatrix",Oe.matrixWorldInverse)}if(Re.isSkinnedMesh){He.setOptional(te,Re,"bindMatrix"),He.setOptional(te,Re,"bindMatrixInverse");const dt=Re.skeleton;dt&&(k.floatVertexTextures?(null===dt.boneTexture&&dt.computeBoneTexture(),He.setValue(te,"boneTexture",dt.boneTexture,X),He.setValue(te,"boneTextureSize",dt.boneTextureSize)):He.setOptional(te,dt,"boneMatrices"))}var mt,ht;return!ct||void 0===ct.morphAttributes.position&&void 0===ct.morphAttributes.normal||Pe.update(Re,ct,me,vn),(yn||Ae.receiveShadow!==Re.receiveShadow)&&(Ae.receiveShadow=Re.receiveShadow,He.setValue(te,"receiveShadow",Re.receiveShadow)),yn&&(He.setValue(te,"toneMappingExposure",m.toneMappingExposure),Ae.needsLights&&((mt=Mn).ambientLightColor.needsUpdate=ht=$i,mt.lightProbe.needsUpdate=ht,mt.directionalLights.needsUpdate=ht,mt.directionalLightShadows.needsUpdate=ht,mt.pointLights.needsUpdate=ht,mt.pointLightShadows.needsUpdate=ht,mt.spotLights.needsUpdate=ht,mt.spotLightShadows.needsUpdate=ht,mt.rectAreaLights.needsUpdate=ht,mt.hemisphereLights.needsUpdate=ht),Ki&&me.fog&&se.refreshFogUniforms(Mn,Ki),se.refreshMaterialUniforms(Mn,me,R,O,re),Dt.upload(te,Ae.uniformsList,Mn,X)),me.isShaderMaterial&&!0===me.uniformsNeedUpdate&&(Dt.upload(te,Ae.uniformsList,Mn,X),me.uniformsNeedUpdate=!1),me.isSpriteMaterial&&He.setValue(te,"center",Re.center),He.setValue(te,"modelViewMatrix",Re.modelViewMatrix),He.setValue(te,"normalMatrix",Re.normalMatrix),He.setValue(te,"modelMatrix",Re.matrixWorld),vn}(b,U,G,j,J);F.setMaterial(j,ge);let xe=G.index;const we=G.attributes.position;if(null===xe){if(void 0===we||0===we.count)return}else if(0===xe.count)return;let Me,ve=1;!0===j.wireframe&&(xe=V.getWireframeAttribute(G),ve=2),kt.setup(J,j,ue,G,xe);let Ie=Fa;null!==xe&&(Me=N.get(xe),Ie=Ca,Ie.setIndex(Me));const xn=null!==xe?xe.count:we.count,$e=G.drawRange.start*ve,Ji=G.drawRange.count*ve,Rt=null!==de?de.start*ve:0,Jo=null!==de?de.count*ve:1/0,qn=Math.max($e,Rt),Ko=Math.min(xn,$e+Ji,Rt+Jo)-1,Zn=Math.max(0,Ko-qn+1);if(0!==Zn){if(J.isMesh)!0===j.wireframe?(F.setLineWidth(j.wireframeLinewidth*S()),Ie.setMode(1)):Ie.setMode(4);else if(J.isLine){let Oe=j.linewidth;void 0===Oe&&(Oe=1),F.setLineWidth(Oe*S()),Ie.setMode(J.isLineSegments?1:J.isLineLoop?2:3)}else J.isPoints?Ie.setMode(0):J.isSprite&&Ie.setMode(4);if(J.isInstancedMesh)Ie.renderInstances(qn,Zn,J.count);else if(G.isInstancedBufferGeometry){const Oe=Math.min(G.instanceCount,G._maxInstanceCount);Ie.renderInstances(qn,Zn,Oe)}else Ie.render(qn,Zn)}},this.compile=function(b,U){d=fe.get(b),d.init(),g.push(d),b.traverseVisible(function(G){G.isLight&&G.layers.test(U.layers)&&(d.pushLight(G),G.castShadow&&d.pushShadow(G))}),d.setupLights(m.physicallyCorrectLights),b.traverse(function(G){const j=G.material;if(j)if(Array.isArray(j))for(let J=0;J<j.length;J++)Zi(j[J],b,G);else Zi(j,b,G)}),g.pop(),d=null};let qi=null;function za(){Ht.stop()}function Oa(){Ht.start()}const Ht=new Mr;function Ba(b,U,G,j){if(!1===b.visible)return;if(b.layers.test(U.layers))if(b.isGroup)G=b.renderOrder;else if(b.isLOD)!0===b.autoUpdate&&b.update(U);else if(b.isLight)d.pushLight(b),b.castShadow&&d.pushShadow(b);else if(b.isSprite){if(!b.frustumCulled||B.intersectsSprite(b)){j&&pe.setFromMatrixPosition(b.matrixWorld).applyMatrix4(ae);const de=ne.update(b),ge=b.material;ge.visible&&u.push(b,de,ge,G,pe.z,null)}}else if((b.isMesh||b.isLine||b.isPoints)&&(b.isSkinnedMesh&&b.skeleton.frame!==y.render.frame&&(b.skeleton.update(),b.skeleton.frame=y.render.frame),!b.frustumCulled||B.intersectsObject(b))){j&&pe.setFromMatrixPosition(b.matrixWorld).applyMatrix4(ae);const de=ne.update(b),ge=b.material;if(Array.isArray(ge)){const ue=de.groups;for(let xe=0,we=ue.length;xe<we;xe++){const Me=ue[xe],ve=ge[Me.materialIndex];ve&&ve.visible&&u.push(b,de,ve,G,pe.z,Me)}}else ge.visible&&u.push(b,de,ge,G,pe.z,null)}const J=b.children;for(let de=0,ge=J.length;de<ge;de++)Ba(J[de],U,G,j)}function Ga(b,U,G,j){const J=b.opaque,de=b.transmissive,ge=b.transparent;d.setupLightsView(G),de.length>0&&function(ue,xe,we){null===re&&(re=new(!0===c&&!0===k.isWebGL2?ti:it)(1024,1024,{generateMipmaps:!0,type:null!==lt.convert(1016)?1016:1009,minFilter:1008,magFilter:1003,wrapS:1001,wrapT:1001,useRenderToTexture:C.has("WEBGL_multisampled_render_to_texture")}));const Me=m.getRenderTarget();m.setRenderTarget(re),m.clear();const ve=m.toneMapping;m.toneMapping=0,Qn(ue,xe,we),m.toneMapping=ve,X.updateMultisampleRenderTarget(re),X.updateRenderTargetMipmap(re),m.setRenderTarget(Me)}(J,U,G),j&&F.viewport(T.copy(j)),J.length>0&&Qn(J,U,G),de.length>0&&Qn(de,U,G),ge.length>0&&Qn(ge,U,G)}function Qn(b,U,G){const j=!0===U.isScene?U.overrideMaterial:null;for(let J=0,de=b.length;J<de;J++){const ge=b[J],ue=ge.object,xe=ge.geometry,we=null===j?ge.material:j,Me=ge.group;ue.layers.test(G.layers)&&Zo(ue,U,G,xe,we,Me)}}function Zo(b,U,G,j,J,de){b.onBeforeRender(m,U,G,j,J,de),b.modelViewMatrix.multiplyMatrices(G.matrixWorldInverse,b.matrixWorld),b.normalMatrix.getNormalMatrix(b.modelViewMatrix),J.onBeforeRender(m,U,G,j,b,de),!0===J.transparent&&2===J.side?(J.side=1,J.needsUpdate=!0,m.renderBufferDirect(G,U,j,J,b,de),J.side=0,J.needsUpdate=!0,m.renderBufferDirect(G,U,j,J,b,de),J.side=2):m.renderBufferDirect(G,U,j,J,b,de),b.onAfterRender(m,U,G,j,J,de)}function Zi(b,U,G){!0!==U.isScene&&(U=E);const j=H.get(b),J=d.state.lights,ge=J.state.version,ue=ce.getParameters(b,J.state,d.state.shadowsArray,U,G),xe=ce.getProgramCacheKey(ue);let we=j.programs;j.environment=b.isMeshStandardMaterial?U.environment:null,j.fog=U.fog,j.envMap=(b.isMeshStandardMaterial?L:W).get(b.envMap||j.environment),void 0===we&&(b.addEventListener("dispose",Ua),we=new Map,j.programs=we);let Me=we.get(xe);if(void 0!==Me){if(j.currentProgram===Me&&j.lightsStateVersion===ge)return ka(b,ue),Me}else ue.uniforms=ce.getUniforms(b),b.onBuild(G,ue,m),b.onBeforeCompile(ue,m),Me=ce.acquireProgram(ue,xe),we.set(xe,Me),j.uniforms=ue.uniforms;const ve=j.uniforms;var $e;(b.isShaderMaterial||b.isRawShaderMaterial)&&!0!==b.clipping||(ve.clippingPlanes=Le.uniform),ka(b,ue),j.needsLights=($e=b).isMeshLambertMaterial||$e.isMeshToonMaterial||$e.isMeshPhongMaterial||$e.isMeshStandardMaterial||$e.isShadowMaterial||$e.isShaderMaterial&&!0===$e.lights,j.lightsStateVersion=ge,j.needsLights&&(ve.ambientLightColor.value=J.state.ambient,ve.lightProbe.value=J.state.probe,ve.directionalLights.value=J.state.directional,ve.directionalLightShadows.value=J.state.directionalShadow,ve.spotLights.value=J.state.spot,ve.spotLightShadows.value=J.state.spotShadow,ve.rectAreaLights.value=J.state.rectArea,ve.ltc_1.value=J.state.rectAreaLTC1,ve.ltc_2.value=J.state.rectAreaLTC2,ve.pointLights.value=J.state.point,ve.pointLightShadows.value=J.state.pointShadow,ve.hemisphereLights.value=J.state.hemi,ve.directionalShadowMap.value=J.state.directionalShadowMap,ve.directionalShadowMatrix.value=J.state.directionalShadowMatrix,ve.spotShadowMap.value=J.state.spotShadowMap,ve.spotShadowMatrix.value=J.state.spotShadowMatrix,ve.pointShadowMap.value=J.state.pointShadowMap,ve.pointShadowMatrix.value=J.state.pointShadowMatrix);const Ie=Me.getUniforms(),xn=Dt.seqWithValue(Ie.seq,ve);return j.currentProgram=Me,j.uniformsList=xn,Me}function ka(b,U){const G=H.get(b);G.outputEncoding=U.outputEncoding,G.instancing=U.instancing,G.skinning=U.skinning,G.morphTargets=U.morphTargets,G.morphNormals=U.morphNormals,G.morphTargetsCount=U.morphTargetsCount,G.numClippingPlanes=U.numClippingPlanes,G.numIntersection=U.numClipIntersection,G.vertexAlphas=U.vertexAlphas,G.vertexTangents=U.vertexTangents,G.toneMapping=U.toneMapping}Ht.setAnimationLoop(function(b){qi&&qi(b)}),"undefined"!=typeof window&&Ht.setContext(window),this.setAnimationLoop=function(b){qi=b,qe.setAnimationLoop(b),null===b?Ht.stop():Ht.start()},qe.addEventListener("sessionstart",za),qe.addEventListener("sessionend",Oa),this.render=function(b,U){if(void 0===U||!0===U.isCamera){if(!0!==M){if(!0===b.autoUpdate&&b.updateMatrixWorld(),null===U.parent&&U.updateMatrixWorld(),!0===qe.enabled&&!0===qe.isPresenting&&(!0===qe.cameraAutoUpdate&&qe.updateCamera(U),U=qe.getCamera()),!0===b.isScene&&b.onBeforeRender(m,b,U,v),d=fe.get(b,g.length),d.init(),g.push(d),ae.multiplyMatrices(U.projectionMatrix,U.matrixWorldInverse),B.setFromProjectionMatrix(ae),ee=this.localClippingEnabled,Q=Le.init(this.clippingPlanes,ee,U),u=he.get(b,p.length),u.init(),p.push(u),Ba(b,U,0,m.sortObjects),u.finish(),!0===m.sortObjects&&u.sort(q,Z),!0===Q&&Le.beginShadows(),oe.render(d.state.shadowsArray,b,U),!0===Q&&Le.endShadows(),!0===this.info.autoReset&&this.info.reset(),be.render(u,b),d.setupLights(m.physicallyCorrectLights),U.isArrayCamera){const j=U.cameras;for(let J=0,de=j.length;J<de;J++){const ge=j[J];Ga(u,b,ge,ge.viewport)}}else Ga(u,b,U);null!==v&&(X.updateMultisampleRenderTarget(v),X.updateRenderTargetMipmap(v)),!0===b.isScene&&b.onAfterRender(m,b,U),F.buffers.depth.setTest(!0),F.buffers.depth.setMask(!0),F.buffers.color.setMask(!0),F.setPolygonOffset(!1),kt.resetDefaultState(),_=-1,x=null,g.pop(),d=g.length>0?g[g.length-1]:null,p.pop(),u=p.length>0?p[p.length-1]:null}}else console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.")},this.getActiveCubeFace=function(){return w},this.getActiveMipmapLevel=function(){return f},this.getRenderTarget=function(){return v},this.setRenderTargetTextures=function(b,U,G){H.get(b.texture).__webglTexture=U,H.get(b.depthTexture).__webglTexture=G;const j=H.get(b);j.__hasExternalTextures=!0,j.__hasExternalTextures&&(j.__autoAllocateDepthBuffer=void 0===G,j.__autoAllocateDepthBuffer||b.useRenderToTexture&&(console.warn("render-to-texture extension was disabled because an external texture was provided"),b.useRenderToTexture=!1,b.useRenderbuffer=!0))},this.setRenderTargetFramebuffer=function(b,U){const G=H.get(b);G.__webglFramebuffer=U,G.__useDefaultFramebuffer=void 0===U},this.setRenderTarget=function(b,U=0,G=0){v=b,w=U,f=G;let j=!0;if(b){const ue=H.get(b);void 0!==ue.__useDefaultFramebuffer?(F.bindFramebuffer(36160,null),j=!1):void 0===ue.__webglFramebuffer?X.setupRenderTarget(b):ue.__hasExternalTextures&&X.rebindTextures(b,H.get(b.texture).__webglTexture,H.get(b.depthTexture).__webglTexture)}let J=null,de=!1,ge=!1;if(b){const ue=b.texture;(ue.isDataTexture3D||ue.isDataTexture2DArray)&&(ge=!0);const xe=H.get(b).__webglFramebuffer;b.isWebGLCubeRenderTarget?(J=xe[U],de=!0):J=b.useRenderbuffer?H.get(b).__webglMultisampledFramebuffer:xe,T.copy(b.viewport),A.copy(b.scissor),D=b.scissorTest}else T.copy(I).multiplyScalar(R).floor(),A.copy(Y).multiplyScalar(R).floor(),D=K;if(F.bindFramebuffer(36160,J)&&k.drawBuffers&&j){let ue=!1;if(b)if(b.isWebGLMultipleRenderTargets){const xe=b.texture;if($.length!==xe.length||36064!==$[0]){for(let we=0,Me=xe.length;we<Me;we++)$[we]=36064+we;$.length=xe.length,ue=!0}}else 1===$.length&&36064===$[0]||($[0]=36064,$.length=1,ue=!0);else 1===$.length&&1029===$[0]||($[0]=1029,$.length=1,ue=!0);ue&&(k.isWebGL2?te.drawBuffers($):C.get("WEBGL_draw_buffers").drawBuffersWEBGL($))}if(F.viewport(T),F.scissor(A),F.setScissorTest(D),de){const ue=H.get(b.texture);te.framebufferTexture2D(36160,36064,34069+U,ue.__webglTexture,G)}else if(ge){const ue=H.get(b.texture);te.framebufferTextureLayer(36160,36064,ue.__webglTexture,G||0,U||0)}_=-1},this.readRenderTargetPixels=function(b,U,G,j,J,de,ge){if(!b||!b.isWebGLRenderTarget)return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");let ue=H.get(b).__webglFramebuffer;if(b.isWebGLCubeRenderTarget&&void 0!==ge&&(ue=ue[ge]),ue){F.bindFramebuffer(36160,ue);try{const xe=b.texture,we=xe.format,Me=xe.type;if(1023!==we&&lt.convert(we)!==te.getParameter(35739))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");const ve=1016===Me&&(C.has("EXT_color_buffer_half_float")||k.isWebGL2&&C.has("EXT_color_buffer_float"));if(!(1009===Me||lt.convert(Me)===te.getParameter(35738)||1015===Me&&(k.isWebGL2||C.has("OES_texture_float")||C.has("WEBGL_color_buffer_float"))||ve))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");36053===te.checkFramebufferStatus(36160)?U>=0&&U<=b.width-j&&G>=0&&G<=b.height-J&&te.readPixels(U,G,j,J,lt.convert(we),lt.convert(Me),de):console.error("THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.")}finally{const xe=null!==v?H.get(v).__webglFramebuffer:null;F.bindFramebuffer(36160,xe)}}},this.copyFramebufferToTexture=function(b,U,G=0){if(!0!==U.isFramebufferTexture)return void console.error("THREE.WebGLRenderer: copyFramebufferToTexture() can only be used with FramebufferTexture.");const j=Math.pow(2,-G),J=Math.floor(U.image.width*j),de=Math.floor(U.image.height*j);X.setTexture2D(U,0),te.copyTexSubImage2D(3553,G,0,0,b.x,b.y,J,de),F.unbindTexture()},this.copyTextureToTexture=function(b,U,G,j=0){const J=U.image.width,de=U.image.height,ge=lt.convert(G.format),ue=lt.convert(G.type);X.setTexture2D(G,0),te.pixelStorei(37440,G.flipY),te.pixelStorei(37441,G.premultiplyAlpha),te.pixelStorei(3317,G.unpackAlignment),U.isDataTexture?te.texSubImage2D(3553,j,b.x,b.y,J,de,ge,ue,U.image.data):U.isCompressedTexture?te.compressedTexSubImage2D(3553,j,b.x,b.y,U.mipmaps[0].width,U.mipmaps[0].height,ge,U.mipmaps[0].data):te.texSubImage2D(3553,j,b.x,b.y,ge,ue,U.image),0===j&&G.generateMipmaps&&te.generateMipmap(3553),F.unbindTexture()},this.copyTextureToTexture3D=function(b,U,G,j,J=0){if(m.isWebGL1Renderer)return void console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");const de=b.max.x-b.min.x+1,ge=b.max.y-b.min.y+1,ue=b.max.z-b.min.z+1,xe=lt.convert(j.format),we=lt.convert(j.type);let Me;if(j.isDataTexture3D)X.setTexture3D(j,0),Me=32879;else{if(!j.isDataTexture2DArray)return void console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");X.setTexture2DArray(j,0),Me=35866}te.pixelStorei(37440,j.flipY),te.pixelStorei(37441,j.premultiplyAlpha),te.pixelStorei(3317,j.unpackAlignment);const ve=te.getParameter(3314),Ie=te.getParameter(32878),xn=te.getParameter(3316),$e=te.getParameter(3315),Ji=te.getParameter(32877),Rt=G.isCompressedTexture?G.mipmaps[0]:G.image;te.pixelStorei(3314,Rt.width),te.pixelStorei(32878,Rt.height),te.pixelStorei(3316,b.min.x),te.pixelStorei(3315,b.min.y),te.pixelStorei(32877,b.min.z),G.isDataTexture||G.isDataTexture3D?te.texSubImage3D(Me,J,U.x,U.y,U.z,de,ge,ue,xe,we,Rt.data):G.isCompressedTexture?(console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."),te.compressedTexSubImage3D(Me,J,U.x,U.y,U.z,de,ge,ue,xe,Rt.data)):te.texSubImage3D(Me,J,U.x,U.y,U.z,de,ge,ue,xe,we,Rt),te.pixelStorei(3314,ve),te.pixelStorei(32878,Ie),te.pixelStorei(3316,xn),te.pixelStorei(3315,$e),te.pixelStorei(32877,Ji),0===J&&j.generateMipmaps&&te.generateMipmap(Me),F.unbindTexture()},this.initTexture=function(b){X.setTexture2D(b,0),F.unbindTexture()},this.resetState=function(){w=0,f=0,v=null,F.reset(),kt.reset()},"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}ra.prototype.isWebGLRenderer=!0;class aa extends Ye{constructor(){super(),this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0,"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),null!==e.background&&(this.background=e.background.clone()),null!==e.environment&&(this.environment=e.environment.clone()),null!==e.fog&&(this.fog=e.fog.clone()),null!==e.overrideMaterial&&(this.overrideMaterial=e.overrideMaterial.clone()),this.autoUpdate=e.autoUpdate,this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const t=super.toJSON(e);return null!==this.fog&&(t.object.fog=this.fog.toJSON()),t}}aa.prototype.isScene=!0;class mn extends $t{constructor(e){super(),this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new ye(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new ye(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new le(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapIntensity=e.envMapIntensity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this}}mn.prototype.isMeshStandardMaterial=!0;class Oi extends Ye{constructor(e,t=1){super(),this.type="Light",this.color=new ye(e),this.intensity=t}dispose(){}copy(e){return super.copy(e),this.color.copy(e.color),this.intensity=e.intensity,this}toJSON(e){const t=super.toJSON(e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,void 0!==this.groundColor&&(t.object.groundColor=this.groundColor.getHex()),void 0!==this.distance&&(t.object.distance=this.distance),void 0!==this.angle&&(t.object.angle=this.angle),void 0!==this.decay&&(t.object.decay=this.decay),void 0!==this.penumbra&&(t.object.penumbra=this.penumbra),void 0!==this.shadow&&(t.object.shadow=this.shadow.toJSON()),t}}Oi.prototype.isLight=!0;const sa=new Ce,oa=new P,la=new P,ca=new Ce,gn=new P,Bi=new P;class ha extends class{constructor(e){this.camera=e,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new le(512,512),this.map=null,this.mapPass=null,this.matrix=new Ce,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new Ei,this._frameExtents=new le(1,1),this._viewportCount=1,this._viewports=[new Fe(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(e){const t=this.camera,n=this.matrix;oa.setFromMatrixPosition(e.matrixWorld),t.position.copy(oa),la.setFromMatrixPosition(e.target.matrixWorld),t.lookAt(la),t.updateMatrixWorld(),sa.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(sa),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(t.projectionMatrix),n.multiply(t.matrixWorldInverse)}getViewport(e){return this._viewports[e]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(e){return this.camera=e.camera.clone(),this.bias=e.bias,this.radius=e.radius,this.mapSize.copy(e.mapSize),this}clone(){return(new this.constructor).copy(this)}toJSON(){const e={};return 0!==this.bias&&(e.bias=this.bias),0!==this.normalBias&&(e.normalBias=this.normalBias),1!==this.radius&&(e.radius=this.radius),512===this.mapSize.x&&512===this.mapSize.y||(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}}{constructor(){super(new Qe(90,1,.5,500)),this._frameExtents=new le(4,2),this._viewportCount=6,this._viewports=[new Fe(2,1,1,1),new Fe(0,1,1,1),new Fe(3,1,1,1),new Fe(1,1,1,1),new Fe(3,0,1,1),new Fe(1,0,1,1)],this._cubeDirections=[new P(1,0,0),new P(-1,0,0),new P(0,0,1),new P(0,0,-1),new P(0,1,0),new P(0,-1,0)],this._cubeUps=[new P(0,1,0),new P(0,1,0),new P(0,1,0),new P(0,1,0),new P(0,0,1),new P(0,0,-1)]}updateMatrices(e,t=0){const n=this.camera,i=this.matrix,r=e.distance||n.far;r!==n.far&&(n.far=r,n.updateProjectionMatrix()),gn.setFromMatrixPosition(e.matrixWorld),n.position.copy(gn),Bi.copy(n.position),Bi.add(this._cubeDirections[t]),n.up.copy(this._cubeUps[t]),n.lookAt(Bi),n.updateMatrixWorld(),i.makeTranslation(-gn.x,-gn.y,-gn.z),ca.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(ca)}}ha.prototype.isPointLightShadow=!0;class da extends Oi{constructor(e,t,n=0,i=1){super(e,t),this.type="PointLight",this.distance=n,this.decay=i,this.shadow=new ha}get power(){return 4*this.intensity*Math.PI}set power(e){this.intensity=e/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this}}da.prototype.isPointLight=!0;class ua extends Oi{constructor(e,t){super(e,t),this.type="AmbientLight"}}ua.prototype.isAmbientLight=!0;class pa{constructor(e=!0){this.autoStart=e,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=fa(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let e=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const t=fa();e=(t-this.oldTime)/1e3,this.oldTime=t,this.elapsedTime+=e}return e}}function fa(){return("undefined"==typeof performance?Date:performance).now()}class ma{constructor(e=1,t=0,n=0){return this.radius=e,this.phi=t,this.theta=n,this}set(e,t,n){return this.radius=e,this.phi=t,this.theta=n,this}copy(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this}makeSafe(){return this.phi=Math.max(1e-6,Math.min(Math.PI-1e-6,this.phi)),this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,n){return this.radius=Math.sqrt(e*e+t*t+n*n),0===this.radius?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e,n),this.phi=Math.acos(tt(t/this.radius,-1,1))),this}clone(){return(new this.constructor).copy(this)}}function ga(a,e,t,n,i,r,c,o){const l=(M,w,f,v)=>[new le(M/c,1-v/o),new le(f/c,1-v/o),new le(f/c,1-w/o),new le(M/c,1-w/o)],s=l(e+r,t,e+n+r,t+r),h=l(e+n+r,t,e+2*n+r,t+r),u=l(e,t+r,e+r,t+r+i),d=l(e+r,t+r,e+n+r,t+r+i),p=l(e+n+r,t+r,e+n+2*r,t+i+r),g=l(e+n+2*r,t+r,e+2*n+2*r,t+i+r),m=a.attributes.uv;m.copyVector2sArray([p[3],p[2],p[0],p[1],u[3],u[2],u[0],u[1],s[3],s[2],s[0],s[1],h[0],h[1],h[3],h[2],d[3],d[2],d[0],d[1],g[3],g[2],g[0],g[1]]),m.needsUpdate=!0}function Ke(a,e,t,n,i,r){ga(a,e,t,n,i,r,64,64)}function Gi(a,e,t,n,i,r){ga(a,e,t,n,i,r,64,32)}class It extends ze{constructor(e,t){super(),this.innerLayer=e,this.outerLayer=t,e.name="inner",t.name="outer"}}class xa extends ze{constructor(e){super(),this.modelListeners=[],this.slim=!1;const t=new mn({map:e,side:0}),n=new mn({map:e,side:2,transparent:!0,alphaTest:1e-5}),i=t.clone();i.polygonOffset=!0,i.polygonOffsetFactor=1,i.polygonOffsetUnits=1;const r=n.clone();r.polygonOffset=!0,r.polygonOffsetFactor=1,r.polygonOffsetUnits=1;const c=new Ne(8,8,8);Ke(c,0,0,8,8,8);const o=new Ee(c,t),l=new Ne(9,9,9);Ke(l,32,0,8,8,8);const s=new Ee(l,n);this.head=new It(o,s),this.head.name="head",this.head.add(o,s),o.position.y=4,s.position.y=4,this.add(this.head);const h=new Ne(8,12,4);Ke(h,16,16,8,12,4);const u=new Ee(h,t),d=new Ne(8.5,12.5,4.5);Ke(d,16,32,8,12,4);const p=new Ee(d,n);this.body=new It(u,p),this.body.name="body",this.body.add(u,p),this.body.position.y=-6,this.add(this.body);const g=new Ne,m=new Ee(g,i);this.modelListeners.push(()=>{m.scale.x=this.slim?3:4,m.scale.y=12,m.scale.z=4,Ke(g,40,16,this.slim?3:4,12,4)});const M=new Ne,w=new Ee(M,r);this.modelListeners.push(()=>{w.scale.x=this.slim?3.5:4.5,w.scale.y=12.5,w.scale.z=4.5,Ke(M,40,32,this.slim?3:4,12,4)});const f=new ze;f.add(m,w),this.modelListeners.push(()=>{f.position.x=this.slim?-.5:-1}),f.position.y=-4,this.rightArm=new It(m,w),this.rightArm.name="rightArm",this.rightArm.add(f),this.rightArm.position.x=-5,this.rightArm.position.y=-2,this.add(this.rightArm);const v=new Ne,_=new Ee(v,i);this.modelListeners.push(()=>{_.scale.x=this.slim?3:4,_.scale.y=12,_.scale.z=4,Ke(v,32,48,this.slim?3:4,12,4)});const x=new Ne,T=new Ee(x,r);this.modelListeners.push(()=>{T.scale.x=this.slim?3.5:4.5,T.scale.y=12.5,T.scale.z=4.5,Ke(x,48,48,this.slim?3:4,12,4)});const A=new ze;A.add(_,T),this.modelListeners.push(()=>{A.position.x=this.slim?.5:1}),A.position.y=-4,this.leftArm=new It(_,T),this.leftArm.name="leftArm",this.leftArm.add(A),this.leftArm.position.x=5,this.leftArm.position.y=-2,this.add(this.leftArm);const D=new Ne(4,12,4);Ke(D,0,16,4,12,4);const z=new Ee(D,i),O=new Ne(4.5,12.5,4.5);Ke(O,0,32,4,12,4);const R=new Ee(O,r),q=new ze;q.add(z,R),q.position.y=-6,this.rightLeg=new It(z,R),this.rightLeg.name="rightLeg",this.rightLeg.add(q),this.rightLeg.position.x=-1.9,this.rightLeg.position.y=-12,this.rightLeg.position.z=-.1,this.add(this.rightLeg);const Z=new Ne(4,12,4);Ke(Z,16,48,4,12,4);const I=new Ee(Z,i),Y=new Ne(4.5,12.5,4.5);Ke(Y,0,48,4,12,4);const K=new Ee(Y,r),$=new ze;$.add(I,K),$.position.y=-6,this.leftLeg=new It(I,K),this.leftLeg.name="leftLeg",this.leftLeg.add($),this.leftLeg.position.x=1.9,this.leftLeg.position.y=-12,this.leftLeg.position.z=-.1,this.add(this.leftLeg),this.modelType="default"}get modelType(){return this.slim?"slim":"default"}set modelType(e){this.slim="slim"===e,this.modelListeners.forEach(t=>t())}getBodyParts(){return this.children.filter(e=>e instanceof It)}setInnerLayerVisible(e){this.getBodyParts().forEach(t=>t.innerLayer.visible=e)}setOuterLayerVisible(e){this.getBodyParts().forEach(t=>t.outerLayer.visible=e)}}class _a extends ze{constructor(e){super();const t=new mn({map:e,side:2,transparent:!0,alphaTest:1e-5}),n=new Ne(10,16,1);Gi(n,0,0,10,16,1),this.cape=new Ee(n,t),this.cape.position.y=-8,this.cape.position.z=.5,this.add(this.cape)}}class va extends ze{constructor(e){super();const t=new mn({map:e,side:2,transparent:!0,alphaTest:1e-5}),n=new Ne(12,22,4);Gi(n,22,0,10,20,2);const i=new Ee(n,t);i.position.x=-5,i.position.y=-10,i.position.z=-1,this.leftWing=new ze,this.leftWing.add(i),this.add(this.leftWing);const r=new Ne(12,22,4);Gi(r,22,0,10,20,2);const c=new Ee(r,t);c.scale.x=-1,c.position.x=5,c.position.y=-10,c.position.z=-1,this.rightWing=new ze,this.rightWing.add(c),this.add(this.rightWing),this.leftWing.position.x=5,this.leftWing.rotation.x=.2617994,this.leftWing.rotation.y=.01,this.leftWing.rotation.z=.2617994,this.updateRightWing()}updateRightWing(){this.rightWing.position.x=-this.leftWing.position.x,this.rightWing.position.y=this.leftWing.position.y,this.rightWing.rotation.x=this.leftWing.rotation.x,this.rightWing.rotation.y=-this.leftWing.rotation.y,this.rightWing.rotation.z=-this.leftWing.rotation.z}}class ya extends ze{constructor(e,t){super(),this.skin=new xa(e),this.skin.name="skin",this.skin.position.y=8,this.add(this.skin),this.cape=new _a(t),this.cape.name="cape",this.cape.position.y=8,this.cape.position.z=-2,this.cape.rotation.x=10.8*Math.PI/180,this.cape.rotation.y=Math.PI,this.add(this.cape),this.elytra=new va(t),this.elytra.name="elytra",this.elytra.position.y=8,this.elytra.position.z=-2,this.elytra.visible=!1,this.add(this.elytra)}get backEquipment(){return this.cape.visible?"cape":this.elytra.visible?"elytra":null}set backEquipment(e){this.cape.visible="cape"===e,this.elytra.visible="elytra"===e}}function ki(a){return a instanceof HTMLImageElement||a instanceof HTMLVideoElement||a instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&a instanceof ImageBitmap||"undefined"!=typeof OffscreenCanvas&&a instanceof OffscreenCanvas}function Hi(a,e,t,n,i){const r=a.getImageData(e,t,n,i);for(let c=0;c<n;c++)for(let o=0;o<i;o++)if(255!==r.data[4*(c+o*n)+3])return!0;return!1}function Wi(a){return a/64}function Ma(a,e,t){if(t){if(Hi(a,0,0,e,e))return}else if(Hi(a,0,0,e,e/2))return;const n=Wi(e),i=(r,c,o,l)=>a.clearRect(r*n,c*n,o*n,l*n);i(40,0,8,8),i(48,0,8,8),i(32,8,8,8),i(40,8,8,8),i(48,8,8,8),i(56,8,8,8),t&&(i(4,32,4,4),i(8,32,4,4),i(0,36,4,12),i(4,36,4,12),i(8,36,4,12),i(12,36,4,12),i(20,32,8,4),i(28,32,8,4),i(16,36,4,12),i(20,36,8,12),i(28,36,4,12),i(32,36,8,12),i(44,32,4,4),i(48,32,4,4),i(40,36,4,12),i(44,36,4,12),i(48,36,4,12),i(52,36,12,12),i(4,48,4,4),i(8,48,4,4),i(0,52,4,12),i(4,52,4,12),i(8,52,4,12),i(12,52,4,12),i(52,48,4,4),i(56,48,4,4),i(48,52,4,12),i(52,52,4,12),i(56,52,4,12),i(60,52,4,12))}async function Vi(a){const e=document.createElement("img");return new Promise((t,n)=>{e.onload=()=>t(e),e.onerror=n,e.crossOrigin="anonymous","string"==typeof a?e.src=a:(void 0!==a.crossOrigin&&(e.crossOrigin=a.crossOrigin),void 0!==a.referrerPolicy&&(e.referrerPolicy=a.referrerPolicy),e.src=a.src)})}function Xi(a,e,t){a instanceof Function?a(e,t):a.play(e,t)}class Ho{constructor(e){this.speed=1,this.paused=!1,this.progress=0,this.lastTime=0,this.started=!1,this.toResetAndRemove=!1,this.animation=e}play(e,t){if(this.toResetAndRemove)return Xi(this.animation,e,0),void this.remove();let n;this.started?n=t-this.lastTime:(n=0,this.started=!0),this.lastTime=t,this.paused||(this.progress+=n*this.speed),Xi(this.animation,e,this.progress)}reset(){this.progress=0}remove(){}resetAndRemove(){this.toResetAndRemove=!0}}class ba{constructor(){this.handles=new Set}add(e){const t=new Ho(e);return t.remove=()=>{this.handles.delete(t)},this.handles.add(t),t}play(e,t){this.handles.forEach(n=>n.play(e,t))}}class Sa extends ba{constructor(){super(...arguments),this.speed=1,this.progress=0,this.clock=new pa(!0)}get animation(){return this}get paused(){return!this.clock.running}set paused(e){e?this.clock.stop():this.clock.start()}runAnimationLoop(e){0!==this.handles.size&&(this.progress+=this.clock.getDelta()*this.speed,this.play(e,this.progress))}reset(){this.progress=0}}class wa{constructor(e={}){this.animations=new Sa,this.globalLight=new ua(16777215,.4),this.cameraLight=new da(16777215,.6),this.backgroundTexture=null,this._disposed=!1,this._renderPaused=!1,this.canvas=void 0===e.canvas?document.createElement("canvas"):e.canvas,this.skinCanvas=document.createElement("canvas"),this.skinTexture=new Be(this.skinCanvas),this.skinTexture.magFilter=1003,this.skinTexture.minFilter=1003,this.capeCanvas=document.createElement("canvas"),this.capeTexture=new Be(this.capeCanvas),this.capeTexture.magFilter=1003,this.capeTexture.minFilter=1003,this.scene=new aa,this.camera=new Qe,this.camera.add(this.cameraLight),this.scene.add(this.camera),this.scene.add(this.globalLight),this.renderer=new ra({canvas:this.canvas,alpha:!1!==e.alpha,preserveDrawingBuffer:!0===e.preserveDrawingBuffer}),this.renderer.setPixelRatio(window.devicePixelRatio),this.playerObject=new ya(this.skinTexture,this.capeTexture),this.playerObject.name="player",this.playerObject.skin.visible=!1,this.playerObject.cape.visible=!1,this.playerWrapper=new ze,this.playerWrapper.add(this.playerObject),this.scene.add(this.playerWrapper),void 0!==e.skin&&this.loadSkin(e.skin,e.model),void 0!==e.cape&&this.loadCape(e.cape),void 0!==e.width&&(this.width=e.width),void 0!==e.height&&(this.height=e.height),void 0!==e.background&&(this.background=e.background),void 0!==e.panorama&&this.loadPanorama(e.panorama),this.camera.position.z=1,this._zoom=void 0===e.zoom?.9:e.zoom,this.fov=void 0===e.fov?50:e.fov,!0===e.renderPaused?(this._renderPaused=!0,this.animationID=null):this.animationID=window.requestAnimationFrame(()=>this.draw()),this.onContextLost=t=>{t.preventDefault(),null!==this.animationID&&(window.cancelAnimationFrame(this.animationID),this.animationID=null)},this.onContextRestored=()=>{this._renderPaused||this._disposed||null!==this.animationID||(this.animationID=window.requestAnimationFrame(()=>this.draw()))},this.canvas.addEventListener("webglcontextlost",this.onContextLost,!1),this.canvas.addEventListener("webglcontextrestored",this.onContextRestored,!1)}loadSkin(e,t="auto-detect",n={}){if(null===e)this.resetSkin();else{if(!ki(e))return Vi(e).then(i=>this.loadSkin(i,t,n));{!function Go(a,e){let t=!1;if(e.width!==e.height){if(e.width!==2*e.height)throw new Error(`Bad skin size: ${e.width}x${e.height}`);t=!0}const n=a.getContext("2d");if(t){const i=e.width;a.width=i,a.height=i,n.clearRect(0,0,i,i),n.drawImage(e,0,0,i,i/2),function(r,c){const o=Wi(c),l=(s,h,u,d,p,g,m)=>function(M,w,f,v,_,x,T,A){const D=M.getImageData(w,f,v,_);if(A)for(let z=0;z<_;z++)for(let O=0;O<v/2;O++){const R=4*(O+z*v),q=4*(v-O-1+z*v),Z=D.data[R],I=D.data[R+1],Y=D.data[R+2],K=D.data[R+3],B=D.data[q+1],Q=D.data[q+2],ee=D.data[q+3];D.data[R]=D.data[q],D.data[R+1]=B,D.data[R+2]=Q,D.data[R+3]=ee,D.data[q]=Z,D.data[q+1]=I,D.data[q+2]=Y,D.data[q+3]=K}M.putImageData(D,x,T)}(r,s*o,h*o,u*o,d*o,p*o,g*o,m);l(4,16,4,4,20,48,!0),l(8,16,4,4,24,48,!0),l(0,20,4,12,24,52,!0),l(4,20,4,12,20,52,!0),l(8,20,4,12,16,52,!0),l(12,20,4,12,28,52,!0),l(44,16,4,4,36,48,!0),l(48,16,4,4,40,48,!0),l(40,20,4,12,40,52,!0),l(44,20,4,12,36,52,!0),l(48,20,4,12,32,52,!0),l(52,20,4,12,44,52,!0)}(n,i),Ma(n,a.width,!1)}else a.width=e.width,a.height=e.height,n.clearRect(0,0,e.width,e.height),n.drawImage(e,0,0,a.width,a.height),Ma(n,a.width,!0)}(this.skinCanvas,e);const i="auto-detect"===t?function(r){const c=Wi(r.width),o=r.getContext("2d"),l=(h,u,d,p)=>Hi(o,h*c,u*c,d*c,p*c),s=(h,u,d,p)=>function(g,m,M,w,f){const v=g.getImageData(m,M,w,f);for(let _=0;_<w;_++)for(let x=0;x<f;x++){const T=4*(_+x*w);if(0!==v.data[T+0]||0!==v.data[T+1]||0!==v.data[T+2]||255!==v.data[T+3])return!1}return!0}(o,h*c,u*c,d*c,p*c);return l(50,16,2,4)||l(54,20,2,12)||l(42,48,2,4)||l(46,52,2,12)||s(50,16,2,4)&&s(54,20,2,12)&&s(42,48,2,4)&&s(46,52,2,12)?"slim":"default"}(this.skinCanvas):t;this.skinTexture.needsUpdate=!0,this.playerObject.skin.modelType=i,!1!==n.makeVisible&&(this.playerObject.skin.visible=!0)}}}resetSkin(){this.playerObject.skin.visible=!1}loadCape(e,t={}){if(null===e)this.resetCape();else{if(!ki(e))return Vi(e).then(n=>this.loadCape(n,t));(function ko(a,e){const t=function(i){if(i.width===2*i.height)return i.width/64;if(17*i.width==22*i.height)return i.width/22;if(11*i.width==23*i.height)return i.width/46;throw new Error(`Bad cape size: ${i.width}x${i.height}`)}(e);a.width=64*t,a.height=32*t;const n=a.getContext("2d");n.clearRect(0,0,a.width,a.height),n.drawImage(e,0,0,e.width,e.height)})(this.capeCanvas,e),this.capeTexture.needsUpdate=!0,!1!==t.makeVisible&&(this.playerObject.backEquipment=void 0===t.backEquipment?"cape":t.backEquipment)}}resetCape(){this.playerObject.backEquipment=null}loadPanorama(e){return this.loadBackground(e,303)}loadBackground(e,t){if(!ki(e))return Vi(e).then(n=>this.loadBackground(n,t));null!==this.backgroundTexture&&this.backgroundTexture.dispose(),this.backgroundTexture=new Be,this.backgroundTexture.image=e,void 0!==t&&(this.backgroundTexture.mapping=t),this.backgroundTexture.needsUpdate=!0,this.scene.background=this.backgroundTexture}draw(){this.animations.runAnimationLoop(this.playerObject),this.render(),this.animationID=window.requestAnimationFrame(()=>this.draw())}render(){this.renderer.render(this.scene,this.camera)}setSize(e,t){this.camera.aspect=e/t,this.camera.updateProjectionMatrix(),this.renderer.setSize(e,t)}dispose(){this._disposed=!0,this.canvas.removeEventListener("webglcontextlost",this.onContextLost,!1),this.canvas.removeEventListener("webglcontextrestored",this.onContextRestored,!1),null!==this.animationID&&(window.cancelAnimationFrame(this.animationID),this.animationID=null),this.renderer.dispose(),this.skinTexture.dispose(),this.capeTexture.dispose(),null!==this.backgroundTexture&&(this.backgroundTexture.dispose(),this.backgroundTexture=null)}get disposed(){return this._disposed}get renderPaused(){return this._renderPaused}set renderPaused(e){this._renderPaused=e,this._renderPaused&&null!==this.animationID?(window.cancelAnimationFrame(this.animationID),this.animationID=null):this._renderPaused||this._disposed||this.renderer.getContext().isContextLost()||null!=this.animationID||(this.animationID=window.requestAnimationFrame(()=>this.draw()))}get width(){return this.renderer.getSize(new le).width}set width(e){this.setSize(e,this.height)}get height(){return this.renderer.getSize(new le).height}set height(e){this.setSize(this.width,e)}get background(){return this.scene.background}set background(e){this.scene.background=null===e||e instanceof ye||e instanceof Be?e:new ye(e),null!==this.backgroundTexture&&e!==this.backgroundTexture&&(this.backgroundTexture.dispose(),this.backgroundTexture=null)}adjustCameraDistance(){let e=4.5+16.5/Math.tan(this.fov/180*Math.PI/2)/this.zoom;e<10?e=10:e>256&&(e=256),this.camera.position.multiplyScalar(e/this.camera.position.length()),this.camera.updateProjectionMatrix()}get fov(){return this.camera.fov}set fov(e){this.camera.fov=e,this.adjustCameraDistance()}get zoom(){return this._zoom}set zoom(e){this._zoom=e,this.adjustCameraDistance()}}const Aa={type:"change"},Yi={type:"start"},Ta={type:"end"};class Wo extends Ut{constructor(e,t){super(),void 0===t&&console.warn('THREE.OrbitControls: The second parameter "domElement" is now mandatory.'),t===document&&console.error('THREE.OrbitControls: "document" should not be used as the target "domElement". Please use "renderer.domElement" instead.'),this.object=e,this.domElement=t,this.domElement.style.touchAction="none",this.enabled=!0,this.target=new P,this.minDistance=0,this.maxDistance=1/0,this.minZoom=0,this.maxZoom=1/0,this.minPolarAngle=0,this.maxPolarAngle=Math.PI,this.minAzimuthAngle=-1/0,this.maxAzimuthAngle=1/0,this.enableDamping=!1,this.dampingFactor=.05,this.enableZoom=!0,this.zoomSpeed=1,this.enableRotate=!0,this.rotateSpeed=1,this.enablePan=!0,this.panSpeed=1,this.screenSpacePanning=!0,this.keyPanSpeed=7,this.autoRotate=!1,this.autoRotateSpeed=2,this.keys={LEFT:"ArrowLeft",UP:"ArrowUp",RIGHT:"ArrowRight",BOTTOM:"ArrowDown"},this.mouseButtons={LEFT:0,MIDDLE:1,RIGHT:2},this.touches={ONE:0,TWO:2},this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object.zoom,this._domElementKeyEvents=null,this.getPolarAngle=function(){return o.phi},this.getAzimuthalAngle=function(){return o.theta},this.getDistance=function(){return this.object.position.distanceTo(this.target)},this.listenToKeyEvents=function(L){L.addEventListener("keydown",F),this._domElementKeyEvents=L},this.saveState=function(){n.target0.copy(n.target),n.position0.copy(n.object.position),n.zoom0=n.object.zoom},this.reset=function(){n.target.copy(n.target0),n.object.position.copy(n.position0),n.object.zoom=n.zoom0,n.object.updateProjectionMatrix(),n.dispatchEvent(Aa),n.update(),r=i.NONE},this.update=function(){const L=new P,N=(new St).setFromUnitVectors(e.up,new P(0,1,0)),V=N.clone().invert(),ne=new P,ce=new St,se=2*Math.PI;return function(){const he=n.object.position;L.copy(he).sub(n.target),L.applyQuaternion(N),o.setFromVector3(L),n.autoRotate&&r===i.NONE&&D(2*Math.PI/60/60*n.autoRotateSpeed),n.enableDamping?(o.theta+=l.theta*n.dampingFactor,o.phi+=l.phi*n.dampingFactor):(o.theta+=l.theta,o.phi+=l.phi);let fe=n.minAzimuthAngle,Le=n.maxAzimuthAngle;return isFinite(fe)&&isFinite(Le)&&(fe<-Math.PI?fe+=se:fe>Math.PI&&(fe-=se),Le<-Math.PI?Le+=se:Le>Math.PI&&(Le-=se),o.theta=fe<=Le?Math.max(fe,Math.min(Le,o.theta)):o.theta>(fe+Le)/2?Math.max(fe,o.theta):Math.min(Le,o.theta)),o.phi=Math.max(n.minPolarAngle,Math.min(n.maxPolarAngle,o.phi)),o.makeSafe(),o.radius*=s,o.radius=Math.max(n.minDistance,Math.min(n.maxDistance,o.radius)),!0===n.enableDamping?n.target.addScaledVector(h,n.dampingFactor):n.target.add(h),L.setFromSpherical(o),L.applyQuaternion(V),he.copy(n.target).add(L),n.object.lookAt(n.target),!0===n.enableDamping?(l.theta*=1-n.dampingFactor,l.phi*=1-n.dampingFactor,h.multiplyScalar(1-n.dampingFactor)):(l.set(0,0,0),h.set(0,0,0)),s=1,!!(u||ne.distanceToSquared(n.object.position)>c||8*(1-ce.dot(n.object.quaternion))>c)&&(n.dispatchEvent(Aa),ne.copy(n.object.position),ce.copy(n.object.quaternion),u=!1,!0)}}(),this.dispose=function(){n.domElement.removeEventListener("contextmenu",y),n.domElement.removeEventListener("pointerdown",pe),n.domElement.removeEventListener("pointercancel",C),n.domElement.removeEventListener("wheel",k),n.domElement.removeEventListener("pointermove",E),n.domElement.removeEventListener("pointerup",S),null!==n._domElementKeyEvents&&n._domElementKeyEvents.removeEventListener("keydown",F)};const n=this,i={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_PAN:4,TOUCH_DOLLY_PAN:5,TOUCH_DOLLY_ROTATE:6};let r=i.NONE;const c=1e-6,o=new ma,l=new ma;let s=1;const h=new P;let u=!1;const d=new le,p=new le,g=new le,m=new le,M=new le,w=new le,f=new le,v=new le,_=new le,x=[],T={};function A(){return Math.pow(.95,n.zoomSpeed)}function D(L){l.theta-=L}function z(L){l.phi-=L}const O=function(){const L=new P;return function(N,V){L.setFromMatrixColumn(V,0),L.multiplyScalar(-N),h.add(L)}}(),R=function(){const L=new P;return function(N,V){!0===n.screenSpacePanning?L.setFromMatrixColumn(V,1):(L.setFromMatrixColumn(V,0),L.crossVectors(n.object.up,L)),L.multiplyScalar(N),h.add(L)}}(),q=function(){const L=new P;return function(N,V){const ne=n.domElement;if(n.object.isPerspectiveCamera){L.copy(n.object.position).sub(n.target);let se=L.length();se*=Math.tan(n.object.fov/2*Math.PI/180),O(2*N*se/ne.clientHeight,n.object.matrix),R(2*V*se/ne.clientHeight,n.object.matrix)}else n.object.isOrthographicCamera?(O(N*(n.object.right-n.object.left)/n.object.zoom/ne.clientWidth,n.object.matrix),R(V*(n.object.top-n.object.bottom)/n.object.zoom/ne.clientHeight,n.object.matrix)):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."),n.enablePan=!1)}}();function Z(L){n.object.isPerspectiveCamera?s/=L:n.object.isOrthographicCamera?(n.object.zoom=Math.max(n.minZoom,Math.min(n.maxZoom,n.object.zoom*L)),n.object.updateProjectionMatrix(),u=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),n.enableZoom=!1)}function I(L){n.object.isPerspectiveCamera?s*=L:n.object.isOrthographicCamera?(n.object.zoom=Math.max(n.minZoom,Math.min(n.maxZoom,n.object.zoom/L)),n.object.updateProjectionMatrix(),u=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),n.enableZoom=!1)}function Y(L){d.set(L.clientX,L.clientY)}function K(L){m.set(L.clientX,L.clientY)}function $(){1===x.length?d.set(x[0].pageX,x[0].pageY):d.set(.5*(x[0].pageX+x[1].pageX),.5*(x[0].pageY+x[1].pageY))}function B(){1===x.length?m.set(x[0].pageX,x[0].pageY):m.set(.5*(x[0].pageX+x[1].pageX),.5*(x[0].pageY+x[1].pageY))}function Q(){const L=x[0].pageX-x[1].pageX,N=x[0].pageY-x[1].pageY,V=Math.sqrt(L*L+N*N);f.set(0,V)}function ee(L){if(1==x.length)p.set(L.pageX,L.pageY);else{const V=W(L);p.set(.5*(L.pageX+V.x),.5*(L.pageY+V.y))}g.subVectors(p,d).multiplyScalar(n.rotateSpeed);const N=n.domElement;D(2*Math.PI*g.x/N.clientHeight),z(2*Math.PI*g.y/N.clientHeight),d.copy(p)}function re(L){if(1===x.length)M.set(L.pageX,L.pageY);else{const N=W(L);M.set(.5*(L.pageX+N.x),.5*(L.pageY+N.y))}w.subVectors(M,m).multiplyScalar(n.panSpeed),q(w.x,w.y),m.copy(M)}function ae(L){const N=W(L),V=L.pageX-N.x,ne=L.pageY-N.y,ce=Math.sqrt(V*V+ne*ne);v.set(0,ce),_.set(0,Math.pow(v.y/f.y,n.zoomSpeed)),Z(_.y),f.copy(v)}function pe(L){!1!==n.enabled&&(0===x.length&&(n.domElement.setPointerCapture(L.pointerId),n.domElement.addEventListener("pointermove",E),n.domElement.addEventListener("pointerup",S)),x.push(L),"touch"===L.pointerType?function(N){switch(X(N),x.length){case 1:switch(n.touches.ONE){case 0:if(!1===n.enableRotate)return;$(),r=i.TOUCH_ROTATE;break;case 1:if(!1===n.enablePan)return;B(),r=i.TOUCH_PAN;break;default:r=i.NONE}break;case 2:switch(n.touches.TWO){case 2:if(!1===n.enableZoom&&!1===n.enablePan)return;n.enableZoom&&Q(),n.enablePan&&B(),r=i.TOUCH_DOLLY_PAN;break;case 3:if(!1===n.enableZoom&&!1===n.enableRotate)return;n.enableZoom&&Q(),n.enableRotate&&$(),r=i.TOUCH_DOLLY_ROTATE;break;default:r=i.NONE}break;default:r=i.NONE}r!==i.NONE&&n.dispatchEvent(Yi)}(L):function(N){let V;switch(N.button){case 0:V=n.mouseButtons.LEFT;break;case 1:V=n.mouseButtons.MIDDLE;break;case 2:V=n.mouseButtons.RIGHT;break;default:V=-1}switch(V){case 1:if(!1===n.enableZoom)return;f.set((ne=N).clientX,ne.clientY),r=i.DOLLY;break;case 0:if(N.ctrlKey||N.metaKey||N.shiftKey){if(!1===n.enablePan)return;K(N),r=i.PAN}else{if(!1===n.enableRotate)return;Y(N),r=i.ROTATE}break;case 2:if(N.ctrlKey||N.metaKey||N.shiftKey){if(!1===n.enableRotate)return;Y(N),r=i.ROTATE}else{if(!1===n.enablePan)return;K(N),r=i.PAN}break;default:r=i.NONE}var ne;r!==i.NONE&&n.dispatchEvent(Yi)}(L))}function E(L){!1!==n.enabled&&("touch"===L.pointerType?function(N){switch(X(N),r){case i.TOUCH_ROTATE:if(!1===n.enableRotate)return;ee(N),n.update();break;case i.TOUCH_PAN:if(!1===n.enablePan)return;re(N),n.update();break;case i.TOUCH_DOLLY_PAN:if(!1===n.enableZoom&&!1===n.enablePan)return;V=N,n.enableZoom&&ae(V),n.enablePan&&re(V),n.update();break;case i.TOUCH_DOLLY_ROTATE:if(!1===n.enableZoom&&!1===n.enableRotate)return;(function(V){n.enableZoom&&ae(V),n.enableRotate&&ee(V)})(N),n.update();break;default:r=i.NONE}var V}(L):function(N){if(!1!==n.enabled)switch(r){case i.ROTATE:if(!1===n.enableRotate)return;!function(V){p.set(V.clientX,V.clientY),g.subVectors(p,d).multiplyScalar(n.rotateSpeed);const ne=n.domElement;D(2*Math.PI*g.x/ne.clientHeight),z(2*Math.PI*g.y/ne.clientHeight),d.copy(p),n.update()}(N);break;case i.DOLLY:if(!1===n.enableZoom)return;v.set((V=N).clientX,V.clientY),_.subVectors(v,f),_.y>0?Z(A()):_.y<0&&I(A()),f.copy(v),n.update();break;case i.PAN:if(!1===n.enablePan)return;!function(V){M.set(V.clientX,V.clientY),w.subVectors(M,m).multiplyScalar(n.panSpeed),q(w.x,w.y),m.copy(M),n.update()}(N)}var V}(L))}function S(L){H(L),0===x.length&&(n.domElement.releasePointerCapture(L.pointerId),n.domElement.removeEventListener("pointermove",E),n.domElement.removeEventListener("pointerup",S)),n.dispatchEvent(Ta),r=i.NONE}function C(L){H(L)}function k(L){var N;!1!==n.enabled&&!1!==n.enableZoom&&r===i.NONE&&(L.preventDefault(),n.dispatchEvent(Yi),(N=L).deltaY<0?I(A()):N.deltaY>0&&Z(A()),n.update(),n.dispatchEvent(Ta))}function F(L){!1!==n.enabled&&!1!==n.enablePan&&function(N){let V=!1;switch(N.code){case n.keys.UP:q(0,n.keyPanSpeed),V=!0;break;case n.keys.BOTTOM:q(0,-n.keyPanSpeed),V=!0;break;case n.keys.LEFT:q(n.keyPanSpeed,0),V=!0;break;case n.keys.RIGHT:q(-n.keyPanSpeed,0),V=!0}V&&(N.preventDefault(),n.update())}(L)}function y(L){!1!==n.enabled&&L.preventDefault()}function H(L){delete T[L.pointerId];for(let N=0;N<x.length;N++)if(x[N].pointerId==L.pointerId)return void x.splice(N,1)}function X(L){let N=T[L.pointerId];void 0===N&&(N=new le,T[L.pointerId]=N),N.set(L.pageX,L.pageY)}function W(L){return T[(L.pointerId===x[0].pointerId?x[1]:x[0]).pointerId]}n.domElement.addEventListener("contextmenu",y),n.domElement.addEventListener("pointerdown",pe),n.domElement.addEventListener("pointercancel",C),n.domElement.addEventListener("wheel",k,{passive:!1}),this.update()}}var Ea={uniforms:{tDiffuse:{value:null},opacity:{value:1}},vertexShader:"varying vec2 vUv;void main(){vUv=uv;gl_Position=projectionMatrix*modelViewMatrix*vec4(position,1.0);}",fragmentShader:"uniform float opacity;uniform sampler2D tDiffuse;varying vec2 vUv;void main(){vec4 texel=texture2D(tDiffuse,vUv);gl_FragColor=opacity*texel;}"};class jn{constructor(){this.enabled=!0,this.needsSwap=!0,this.clear=!1,this.renderToScreen=!1}setSize(){}render(){console.error("THREE.Pass: .render() must be implemented in derived pass.")}}const Vo=new Gn(-1,1,1,-1,0,1),ji=new ut;ji.setAttribute("position",new ot([-1,3,0,-1,-1,0,3,-1,0],3)),ji.setAttribute("uv",new ot([0,2,0,0,2,0],2));class Xo{constructor(e){this._mesh=new Ee(ji,e)}dispose(){this._mesh.geometry.dispose()}render(e){e.render(this._mesh,Vo)}get material(){return this._mesh.material}set material(e){this._mesh.material=e}}class Qi extends jn{constructor(e,t){super(),this.textureID=void 0!==t?t:"tDiffuse",e instanceof Ct?(this.uniforms=e.uniforms,this.material=e):e&&(this.uniforms=vr.clone(e.uniforms),this.material=new Ct({defines:Object.assign({},e.defines),uniforms:this.uniforms,vertexShader:e.vertexShader,fragmentShader:e.fragmentShader})),this.fsQuad=new Xo(this.material)}render(e,t,n){this.uniforms[this.textureID]&&(this.uniforms[this.textureID].value=n.texture),this.fsQuad.material=this.material,this.renderToScreen?(e.setRenderTarget(null),this.fsQuad.render(e)):(e.setRenderTarget(t),this.clear&&e.clear(e.autoClearColor,e.autoClearDepth,e.autoClearStencil),this.fsQuad.render(e))}}class La extends jn{constructor(e,t){super(),this.scene=e,this.camera=t,this.clear=!0,this.needsSwap=!1,this.inverse=!1}render(e,t,n){const i=e.getContext(),r=e.state;let c,o;r.buffers.color.setMask(!1),r.buffers.depth.setMask(!1),r.buffers.color.setLocked(!0),r.buffers.depth.setLocked(!0),this.inverse?(c=0,o=1):(c=1,o=0),r.buffers.stencil.setTest(!0),r.buffers.stencil.setOp(i.REPLACE,i.REPLACE,i.REPLACE),r.buffers.stencil.setFunc(i.ALWAYS,c,4294967295),r.buffers.stencil.setClear(o),r.buffers.stencil.setLocked(!0),e.setRenderTarget(n),this.clear&&e.clear(),e.render(this.scene,this.camera),e.setRenderTarget(t),this.clear&&e.clear(),e.render(this.scene,this.camera),r.buffers.color.setLocked(!1),r.buffers.depth.setLocked(!1),r.buffers.stencil.setLocked(!1),r.buffers.stencil.setFunc(i.EQUAL,1,4294967295),r.buffers.stencil.setOp(i.KEEP,i.KEEP,i.KEEP),r.buffers.stencil.setLocked(!0)}}class Yo extends jn{constructor(){super(),this.needsSwap=!1}render(e){e.state.buffers.stencil.setLocked(!1),e.state.buffers.stencil.setTest(!1)}}class jo{constructor(e,t){if(this.renderer=e,void 0===t){const n={minFilter:1006,magFilter:1006,format:1023},i=e.getSize(new le);this._pixelRatio=e.getPixelRatio(),this._width=i.width,this._height=i.height,(t=new it(this._width*this._pixelRatio,this._height*this._pixelRatio,n)).texture.name="EffectComposer.rt1"}else this._pixelRatio=1,this._width=t.width,this._height=t.height;this.renderTarget1=t,this.renderTarget2=t.clone(),this.renderTarget2.texture.name="EffectComposer.rt2",this.writeBuffer=this.renderTarget1,this.readBuffer=this.renderTarget2,this.renderToScreen=!0,this.passes=[],void 0===Ea&&console.error("THREE.EffectComposer relies on CopyShader"),void 0===Qi&&console.error("THREE.EffectComposer relies on ShaderPass"),this.copyPass=new Qi(Ea),this.clock=new pa}swapBuffers(){const e=this.readBuffer;this.readBuffer=this.writeBuffer,this.writeBuffer=e}addPass(e){this.passes.push(e),e.setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)}insertPass(e,t){this.passes.splice(t,0,e),e.setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)}removePass(e){const t=this.passes.indexOf(e);-1!==t&&this.passes.splice(t,1)}isLastEnabledPass(e){for(let t=e+1;t<this.passes.length;t++)if(this.passes[t].enabled)return!1;return!0}render(e){void 0===e&&(e=this.clock.getDelta());const t=this.renderer.getRenderTarget();let n=!1;for(let i=0,r=this.passes.length;i<r;i++){const c=this.passes[i];if(!1!==c.enabled){if(c.renderToScreen=this.renderToScreen&&this.isLastEnabledPass(i),c.render(this.renderer,this.writeBuffer,this.readBuffer,e,n),c.needsSwap){if(n){const o=this.renderer.getContext(),l=this.renderer.state.buffers.stencil;l.setFunc(o.NOTEQUAL,1,4294967295),this.copyPass.render(this.renderer,this.writeBuffer,this.readBuffer,e),l.setFunc(o.EQUAL,1,4294967295)}this.swapBuffers()}void 0!==La&&(c instanceof La?n=!0:c instanceof Yo&&(n=!1))}}this.renderer.setRenderTarget(t)}reset(e){if(void 0===e){const t=this.renderer.getSize(new le);this._pixelRatio=this.renderer.getPixelRatio(),this._width=t.width,this._height=t.height,(e=this.renderTarget1.clone()).setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)}this.renderTarget1.dispose(),this.renderTarget2.dispose(),this.renderTarget1=e,this.renderTarget2=e.clone(),this.writeBuffer=this.renderTarget1,this.readBuffer=this.renderTarget2}setSize(e,t){this._width=e,this._height=t;const n=this._width*this._pixelRatio,i=this._height*this._pixelRatio;this.renderTarget1.setSize(n,i),this.renderTarget2.setSize(n,i);for(let r=0;r<this.passes.length;r++)this.passes[r].setSize(n,i)}setPixelRatio(e){this._pixelRatio=e,this.setSize(this._width,this._height)}}new Gn(-1,1,1,-1,0,1);const Pa=new ut;Pa.setAttribute("position",new ot([-1,3,0,-1,-1,0,3,-1,0],3)),Pa.setAttribute("uv",new ot([0,2,0,0,2,0],2));class Qo extends jn{constructor(e,t,n,i,r){super(),this.scene=e,this.camera=t,this.overrideMaterial=n,this.clearColor=i,this.clearAlpha=void 0!==r?r:0,this.clear=!0,this.clearDepth=!1,this.needsSwap=!1,this._oldClearColor=new ye}render(e,t,n){const i=e.autoClear;let r,c;e.autoClear=!1,void 0!==this.overrideMaterial&&(c=this.scene.overrideMaterial,this.scene.overrideMaterial=this.overrideMaterial),this.clearColor&&(e.getClearColor(this._oldClearColor),r=e.getClearAlpha(),e.setClearColor(this.clearColor,this.clearAlpha)),this.clearDepth&&e.clearDepth(),e.setRenderTarget(this.renderToScreen?null:n),this.clear&&e.clear(e.autoClearColor,e.autoClearDepth,e.autoClearStencil),e.render(this.scene,this.camera),this.clearColor&&e.setClearColor(this._oldClearColor,r),void 0!==this.overrideMaterial&&(this.scene.overrideMaterial=c),e.autoClear=i}}const qo={uniforms:{tDiffuse:{value:null},resolution:{value:new le(1/1024,1/512)}},vertexShader:"varying vec2 vUv;void main(){vUv=uv;gl_Position=projectionMatrix*modelViewMatrix*vec4(position,1.0);}",fragmentShader:"precision highp float;uniform sampler2D tDiffuse;uniform vec2 resolution;varying vec2 vUv;\n#define FXAA_PC 1\n#define FXAA_GLSL_100 1\n#define FXAA_QUALITY_PRESET 12\n#define FXAA_GREEN_AS_LUMA 1\n#ifndef FXAA_PC_CONSOLE\n#define FXAA_PC_CONSOLE 0\n#endif\n#ifndef FXAA_GLSL_120\n#define FXAA_GLSL_120 0\n#endif\n#ifndef FXAA_GLSL_130\n#define FXAA_GLSL_130 0\n#endif\n#ifndef FXAA_HLSL_3\n#define FXAA_HLSL_3 0\n#endif\n#ifndef FXAA_HLSL_4\n#define FXAA_HLSL_4 0\n#endif\n#ifndef FXAA_HLSL_5\n#define FXAA_HLSL_5 0\n#endif\n#ifndef FXAA_GREEN_AS_LUMA\n#define FXAA_GREEN_AS_LUMA 0\n#endif\n#ifndef FXAA_EARLY_EXIT\n#define FXAA_EARLY_EXIT 1\n#endif\n#ifndef FXAA_DISCARD\n#define FXAA_DISCARD 0\n#endif\n#ifndef FXAA_FAST_PIXEL_OFFSET\n#ifdef GL_EXT_gpu_shader4\n#define FXAA_FAST_PIXEL_OFFSET 1\n#endif\n#ifdef GL_NV_gpu_shader5\n#define FXAA_FAST_PIXEL_OFFSET 1\n#endif\n#ifdef GL_ARB_gpu_shader5\n#define FXAA_FAST_PIXEL_OFFSET 1\n#endif\n#ifndef FXAA_FAST_PIXEL_OFFSET\n#define FXAA_FAST_PIXEL_OFFSET 0\n#endif\n#endif\n#ifndef FXAA_GATHER4_ALPHA\n#if (FXAA_HLSL_5==1)\n#define FXAA_GATHER4_ALPHA 1\n#endif\n#ifdef GL_ARB_gpu_shader5\n#define FXAA_GATHER4_ALPHA 1\n#endif\n#ifdef GL_NV_gpu_shader5\n#define FXAA_GATHER4_ALPHA 1\n#endif\n#ifndef FXAA_GATHER4_ALPHA\n#define FXAA_GATHER4_ALPHA 0\n#endif\n#endif\n#ifndef FXAA_QUALITY_PRESET\n#define FXAA_QUALITY_PRESET 12\n#endif\n#if (FXAA_QUALITY_PRESET==10)\n#define FXAA_QUALITY_PS 3\n#define FXAA_QUALITY_P0 1.5\n#define FXAA_QUALITY_P1 3.0\n#define FXAA_QUALITY_P2 12.0\n#endif\n#if (FXAA_QUALITY_PRESET==11)\n#define FXAA_QUALITY_PS 4\n#define FXAA_QUALITY_P0 1.0\n#define FXAA_QUALITY_P1 1.5\n#define FXAA_QUALITY_P2 3.0\n#define FXAA_QUALITY_P3 12.0\n#endif\n#if (FXAA_QUALITY_PRESET==12)\n#define FXAA_QUALITY_PS 5\n#define FXAA_QUALITY_P0 1.0\n#define FXAA_QUALITY_P1 1.5\n#define FXAA_QUALITY_P2 2.0\n#define FXAA_QUALITY_P3 4.0\n#define FXAA_QUALITY_P4 12.0\n#endif\n#if (FXAA_QUALITY_PRESET==13)\n#define FXAA_QUALITY_PS 6\n#define FXAA_QUALITY_P0 1.0\n#define FXAA_QUALITY_P1 1.5\n#define FXAA_QUALITY_P2 2.0\n#define FXAA_QUALITY_P3 2.0\n#define FXAA_QUALITY_P4 4.0\n#define FXAA_QUALITY_P5 12.0\n#endif\n#if (FXAA_QUALITY_PRESET==14)\n#define FXAA_QUALITY_PS 7\n#define FXAA_QUALITY_P0 1.0\n#define FXAA_QUALITY_P1 1.5\n#define FXAA_QUALITY_P2 2.0\n#define FXAA_QUALITY_P3 2.0\n#define FXAA_QUALITY_P4 2.0\n#define FXAA_QUALITY_P5 4.0\n#define FXAA_QUALITY_P6 12.0\n#endif\n#if (FXAA_QUALITY_PRESET==15)\n#define FXAA_QUALITY_PS 8\n#define FXAA_QUALITY_P0 1.0\n#define FXAA_QUALITY_P1 1.5\n#define FXAA_QUALITY_P2 2.0\n#define FXAA_QUALITY_P3 2.0\n#define FXAA_QUALITY_P4 2.0\n#define FXAA_QUALITY_P5 2.0\n#define FXAA_QUALITY_P6 4.0\n#define FXAA_QUALITY_P7 12.0\n#endif\n#if (FXAA_QUALITY_PRESET==20)\n#define FXAA_QUALITY_PS 3\n#define FXAA_QUALITY_P0 1.5\n#define FXAA_QUALITY_P1 2.0\n#define FXAA_QUALITY_P2 8.0\n#endif\n#if (FXAA_QUALITY_PRESET==21)\n#define FXAA_QUALITY_PS 4\n#define FXAA_QUALITY_P0 1.0\n#define FXAA_QUALITY_P1 1.5\n#define FXAA_QUALITY_P2 2.0\n#define FXAA_QUALITY_P3 8.0\n#endif\n#if (FXAA_QUALITY_PRESET==22)\n#define FXAA_QUALITY_PS 5\n#define FXAA_QUALITY_P0 1.0\n#define FXAA_QUALITY_P1 1.5\n#define FXAA_QUALITY_P2 2.0\n#define FXAA_QUALITY_P3 2.0\n#define FXAA_QUALITY_P4 8.0\n#endif\n#if (FXAA_QUALITY_PRESET==23)\n#define FXAA_QUALITY_PS 6\n#define FXAA_QUALITY_P0 1.0\n#define FXAA_QUALITY_P1 1.5\n#define FXAA_QUALITY_P2 2.0\n#define FXAA_QUALITY_P3 2.0\n#define FXAA_QUALITY_P4 2.0\n#define FXAA_QUALITY_P5 8.0\n#endif\n#if (FXAA_QUALITY_PRESET==24)\n#define FXAA_QUALITY_PS 7\n#define FXAA_QUALITY_P0 1.0\n#define FXAA_QUALITY_P1 1.5\n#define FXAA_QUALITY_P2 2.0\n#define FXAA_QUALITY_P3 2.0\n#define FXAA_QUALITY_P4 2.0\n#define FXAA_QUALITY_P5 3.0\n#define FXAA_QUALITY_P6 8.0\n#endif\n#if (FXAA_QUALITY_PRESET==25)\n#define FXAA_QUALITY_PS 8\n#define FXAA_QUALITY_P0 1.0\n#define FXAA_QUALITY_P1 1.5\n#define FXAA_QUALITY_P2 2.0\n#define FXAA_QUALITY_P3 2.0\n#define FXAA_QUALITY_P4 2.0\n#define FXAA_QUALITY_P5 2.0\n#define FXAA_QUALITY_P6 4.0\n#define FXAA_QUALITY_P7 8.0\n#endif\n#if (FXAA_QUALITY_PRESET==26)\n#define FXAA_QUALITY_PS 9\n#define FXAA_QUALITY_P0 1.0\n#define FXAA_QUALITY_P1 1.5\n#define FXAA_QUALITY_P2 2.0\n#define FXAA_QUALITY_P3 2.0\n#define FXAA_QUALITY_P4 2.0\n#define FXAA_QUALITY_P5 2.0\n#define FXAA_QUALITY_P6 2.0\n#define FXAA_QUALITY_P7 4.0\n#define FXAA_QUALITY_P8 8.0\n#endif\n#if (FXAA_QUALITY_PRESET==27)\n#define FXAA_QUALITY_PS 10\n#define FXAA_QUALITY_P0 1.0\n#define FXAA_QUALITY_P1 1.5\n#define FXAA_QUALITY_P2 2.0\n#define FXAA_QUALITY_P3 2.0\n#define FXAA_QUALITY_P4 2.0\n#define FXAA_QUALITY_P5 2.0\n#define FXAA_QUALITY_P6 2.0\n#define FXAA_QUALITY_P7 2.0\n#define FXAA_QUALITY_P8 4.0\n#define FXAA_QUALITY_P9 8.0\n#endif\n#if (FXAA_QUALITY_PRESET==28)\n#define FXAA_QUALITY_PS 11\n#define FXAA_QUALITY_P0 1.0\n#define FXAA_QUALITY_P1 1.5\n#define FXAA_QUALITY_P2 2.0\n#define FXAA_QUALITY_P3 2.0\n#define FXAA_QUALITY_P4 2.0\n#define FXAA_QUALITY_P5 2.0\n#define FXAA_QUALITY_P6 2.0\n#define FXAA_QUALITY_P7 2.0\n#define FXAA_QUALITY_P8 2.0\n#define FXAA_QUALITY_P9 4.0\n#define FXAA_QUALITY_P10 8.0\n#endif\n#if (FXAA_QUALITY_PRESET==29)\n#define FXAA_QUALITY_PS 12\n#define FXAA_QUALITY_P0 1.0\n#define FXAA_QUALITY_P1 1.5\n#define FXAA_QUALITY_P2 2.0\n#define FXAA_QUALITY_P3 2.0\n#define FXAA_QUALITY_P4 2.0\n#define FXAA_QUALITY_P5 2.0\n#define FXAA_QUALITY_P6 2.0\n#define FXAA_QUALITY_P7 2.0\n#define FXAA_QUALITY_P8 2.0\n#define FXAA_QUALITY_P9 2.0\n#define FXAA_QUALITY_P10 4.0\n#define FXAA_QUALITY_P11 8.0\n#endif\n#if (FXAA_QUALITY_PRESET==39)\n#define FXAA_QUALITY_PS 12\n#define FXAA_QUALITY_P0 1.0\n#define FXAA_QUALITY_P1 1.0\n#define FXAA_QUALITY_P2 1.0\n#define FXAA_QUALITY_P3 1.0\n#define FXAA_QUALITY_P4 1.0\n#define FXAA_QUALITY_P5 1.5\n#define FXAA_QUALITY_P6 2.0\n#define FXAA_QUALITY_P7 2.0\n#define FXAA_QUALITY_P8 2.0\n#define FXAA_QUALITY_P9 2.0\n#define FXAA_QUALITY_P10 4.0\n#define FXAA_QUALITY_P11 8.0\n#endif\n#if (FXAA_GLSL_100==1)||(FXAA_GLSL_120==1)||(FXAA_GLSL_130==1)\n#define FxaaBool bool\n#define FxaaDiscard discard\n#define FxaaFloat float\n#define FxaaFloat2 vec2\n#define FxaaFloat3 vec3\n#define FxaaFloat4 vec4\n#define FxaaHalf float\n#define FxaaHalf2 vec2\n#define FxaaHalf3 vec3\n#define FxaaHalf4 vec4\n#define FxaaInt2 ivec2\n#define FxaaSat(x)clamp(x,0.0,1.0)\n#define FxaaTex sampler2D\n#else\n#define FxaaBool bool\n#define FxaaDiscard clip(-1)\n#define FxaaFloat float\n#define FxaaFloat2 float2\n#define FxaaFloat3 float3\n#define FxaaFloat4 float4\n#define FxaaHalf half\n#define FxaaHalf2 half2\n#define FxaaHalf3 half3\n#define FxaaHalf4 half4\n#define FxaaSat(x)saturate(x)\n#endif\n#if (FXAA_GLSL_100==1)\n#define FxaaTexTop(t,p)texture2D(t,p,0.0)\n#define FxaaTexOff(t,p,o,r)texture2D(t,p+(o*r),0.0)\n#endif\n#if (FXAA_GLSL_120==1)\n#define FxaaTexTop(t,p)texture2DLod(t,p,0.0)\n#if (FXAA_FAST_PIXEL_OFFSET==1)\n#define FxaaTexOff(t,p,o,r)texture2DLodOffset(t,p,0.0,o)\n#else\n#define FxaaTexOff(t,p,o,r)texture2DLod(t,p+(o*r),0.0)\n#endif\n#if (FXAA_GATHER4_ALPHA==1)\n#define FxaaTexAlpha4(t,p)textureGather(t,p,3)\n#define FxaaTexOffAlpha4(t,p,o)textureGatherOffset(t,p,o,3)\n#define FxaaTexGreen4(t,p)textureGather(t,p,1)\n#define FxaaTexOffGreen4(t,p,o)textureGatherOffset(t,p,o,1)\n#endif\n#endif\n#if (FXAA_GLSL_130==1)\n#define FxaaTexTop(t,p)textureLod(t,p,0.0)\n#define FxaaTexOff(t,p,o,r)textureLodOffset(t,p,0.0,o)\n#if (FXAA_GATHER4_ALPHA==1)\n#define FxaaTexAlpha4(t,p)textureGather(t,p,3)\n#define FxaaTexOffAlpha4(t,p,o)textureGatherOffset(t,p,o,3)\n#define FxaaTexGreen4(t,p)textureGather(t,p,1)\n#define FxaaTexOffGreen4(t,p,o)textureGatherOffset(t,p,o,1)\n#endif\n#endif\n#if (FXAA_HLSL_3==1)\n#define FxaaInt2 float2\n#define FxaaTex sampler2D\n#define FxaaTexTop(t,p)tex2Dlod(t,float4(p,0.0,0.0))\n#define FxaaTexOff(t,p,o,r)tex2Dlod(t,float4(p+(o*r),0,0))\n#endif\n#if (FXAA_HLSL_4==1)\n#define FxaaInt2 int2\nstruct FxaaTex{SamplerState smpl;Texture2D tex;};\n#define FxaaTexTop(t,p)t.tex.SampleLevel(t.smpl,p,0.0)\n#define FxaaTexOff(t,p,o,r)t.tex.SampleLevel(t.smpl,p,0.0,o)\n#endif\n#if (FXAA_HLSL_5==1)\n#define FxaaInt2 int2\nstruct FxaaTex{SamplerState smpl;Texture2D tex;};\n#define FxaaTexTop(t,p)t.tex.SampleLevel(t.smpl,p,0.0)\n#define FxaaTexOff(t,p,o,r)t.tex.SampleLevel(t.smpl,p,0.0,o)\n#define FxaaTexAlpha4(t,p)t.tex.GatherAlpha(t.smpl,p)\n#define FxaaTexOffAlpha4(t,p,o)t.tex.GatherAlpha(t.smpl,p,o)\n#define FxaaTexGreen4(t,p)t.tex.GatherGreen(t.smpl,p)\n#define FxaaTexOffGreen4(t,p,o)t.tex.GatherGreen(t.smpl,p,o)\n#endif\n#if (FXAA_GREEN_AS_LUMA==0)\nFxaaFloat FxaaLuma(FxaaFloat4 rgba){return rgba.w;}\n#else\nFxaaFloat FxaaLuma(FxaaFloat4 rgba){return rgba.y;}\n#endif\n#if (FXAA_PC==1)\nFxaaFloat4 FxaaPixelShader(FxaaFloat2 pos,FxaaFloat4 fxaaConsolePosPos,FxaaTex tex,FxaaTex fxaaConsole360TexExpBiasNegOne,FxaaTex fxaaConsole360TexExpBiasNegTwo,FxaaFloat2 fxaaQualityRcpFrame,FxaaFloat4 fxaaConsoleRcpFrameOpt,FxaaFloat4 fxaaConsoleRcpFrameOpt2,FxaaFloat4 fxaaConsole360RcpFrameOpt2,FxaaFloat fxaaQualitySubpix,FxaaFloat fxaaQualityEdgeThreshold,FxaaFloat fxaaQualityEdgeThresholdMin,FxaaFloat fxaaConsoleEdgeSharpness,FxaaFloat fxaaConsoleEdgeThreshold,FxaaFloat fxaaConsoleEdgeThresholdMin,FxaaFloat4 fxaaConsole360ConstDir){FxaaFloat2 posM;posM.x=pos.x;posM.y=pos.y;\n#if (FXAA_GATHER4_ALPHA==1)\n#if (FXAA_DISCARD==0)\nFxaaFloat4 rgbyM=FxaaTexTop(tex,posM);\n#if (FXAA_GREEN_AS_LUMA==0)\n#define lumaM rgbyM.w\n#else\n#define lumaM rgbyM.y\n#endif\n#endif\n#if (FXAA_GREEN_AS_LUMA==0)\nFxaaFloat4 luma4A=FxaaTexAlpha4(tex,posM);FxaaFloat4 luma4B=FxaaTexOffAlpha4(tex,posM,FxaaInt2(-1,-1));\n#else\nFxaaFloat4 luma4A=FxaaTexGreen4(tex,posM);FxaaFloat4 luma4B=FxaaTexOffGreen4(tex,posM,FxaaInt2(-1,-1));\n#endif\n#if (FXAA_DISCARD==1)\n#define lumaM luma4A.w\n#endif\n#define lumaE luma4A.z\n#define lumaS luma4A.x\n#define lumaSE luma4A.y\n#define lumaNW luma4B.w\n#define lumaN luma4B.z\n#define lumaW luma4B.x\n#else\nFxaaFloat4 rgbyM=FxaaTexTop(tex,posM);\n#if (FXAA_GREEN_AS_LUMA==0)\n#define lumaM rgbyM.w\n#else\n#define lumaM rgbyM.y\n#endif\n#if (FXAA_GLSL_100==1)\nFxaaFloat lumaS=FxaaLuma(FxaaTexOff(tex,posM,FxaaFloat2(0.0,1.0),fxaaQualityRcpFrame.xy));FxaaFloat lumaE=FxaaLuma(FxaaTexOff(tex,posM,FxaaFloat2(1.0,0.0),fxaaQualityRcpFrame.xy));FxaaFloat lumaN=FxaaLuma(FxaaTexOff(tex,posM,FxaaFloat2(0.0,-1.0),fxaaQualityRcpFrame.xy));FxaaFloat lumaW=FxaaLuma(FxaaTexOff(tex,posM,FxaaFloat2(-1.0,0.0),fxaaQualityRcpFrame.xy));\n#else\nFxaaFloat lumaS=FxaaLuma(FxaaTexOff(tex,posM,FxaaInt2(0,1),fxaaQualityRcpFrame.xy));FxaaFloat lumaE=FxaaLuma(FxaaTexOff(tex,posM,FxaaInt2(1,0),fxaaQualityRcpFrame.xy));FxaaFloat lumaN=FxaaLuma(FxaaTexOff(tex,posM,FxaaInt2(0,-1),fxaaQualityRcpFrame.xy));FxaaFloat lumaW=FxaaLuma(FxaaTexOff(tex,posM,FxaaInt2(-1,0),fxaaQualityRcpFrame.xy));\n#endif\n#endif\nFxaaFloat maxSM=max(lumaS,lumaM);FxaaFloat minSM=min(lumaS,lumaM);FxaaFloat maxESM=max(lumaE,maxSM);FxaaFloat minESM=min(lumaE,minSM);FxaaFloat maxWN=max(lumaN,lumaW);FxaaFloat minWN=min(lumaN,lumaW);FxaaFloat rangeMax=max(maxWN,maxESM);FxaaFloat rangeMin=min(minWN,minESM);FxaaFloat rangeMaxScaled=rangeMax*fxaaQualityEdgeThreshold;FxaaFloat range=rangeMax-rangeMin;FxaaFloat rangeMaxClamped=max(fxaaQualityEdgeThresholdMin,rangeMaxScaled);FxaaBool earlyExit=range<rangeMaxClamped;if(earlyExit)\n#if (FXAA_DISCARD==1)\nFxaaDiscard;\n#else\nreturn rgbyM;\n#endif\n#if (FXAA_GATHER4_ALPHA==0)\n#if (FXAA_GLSL_100==1)\nFxaaFloat lumaNW=FxaaLuma(FxaaTexOff(tex,posM,FxaaFloat2(-1.0,-1.0),fxaaQualityRcpFrame.xy));FxaaFloat lumaSE=FxaaLuma(FxaaTexOff(tex,posM,FxaaFloat2(1.0,1.0),fxaaQualityRcpFrame.xy));FxaaFloat lumaNE=FxaaLuma(FxaaTexOff(tex,posM,FxaaFloat2(1.0,-1.0),fxaaQualityRcpFrame.xy));FxaaFloat lumaSW=FxaaLuma(FxaaTexOff(tex,posM,FxaaFloat2(-1.0,1.0),fxaaQualityRcpFrame.xy));\n#else\nFxaaFloat lumaNW=FxaaLuma(FxaaTexOff(tex,posM,FxaaInt2(-1,-1),fxaaQualityRcpFrame.xy));FxaaFloat lumaSE=FxaaLuma(FxaaTexOff(tex,posM,FxaaInt2(1,1),fxaaQualityRcpFrame.xy));FxaaFloat lumaNE=FxaaLuma(FxaaTexOff(tex,posM,FxaaInt2(1,-1),fxaaQualityRcpFrame.xy));FxaaFloat lumaSW=FxaaLuma(FxaaTexOff(tex,posM,FxaaInt2(-1,1),fxaaQualityRcpFrame.xy));\n#endif\n#else\nFxaaFloat lumaNE=FxaaLuma(FxaaTexOff(tex,posM,FxaaInt2(1,-1),fxaaQualityRcpFrame.xy));FxaaFloat lumaSW=FxaaLuma(FxaaTexOff(tex,posM,FxaaInt2(-1,1),fxaaQualityRcpFrame.xy));\n#endif\nFxaaFloat lumaNS=lumaN+lumaS;FxaaFloat lumaWE=lumaW+lumaE;FxaaFloat subpixRcpRange=1.0/range;FxaaFloat subpixNSWE=lumaNS+lumaWE;FxaaFloat edgeHorz1=(-2.0*lumaM)+lumaNS;FxaaFloat edgeVert1=(-2.0*lumaM)+lumaWE;FxaaFloat lumaNESE=lumaNE+lumaSE;FxaaFloat lumaNWNE=lumaNW+lumaNE;FxaaFloat edgeHorz2=(-2.0*lumaE)+lumaNESE;FxaaFloat edgeVert2=(-2.0*lumaN)+lumaNWNE;FxaaFloat lumaNWSW=lumaNW+lumaSW;FxaaFloat lumaSWSE=lumaSW+lumaSE;FxaaFloat edgeHorz4=(abs(edgeHorz1)*2.0)+abs(edgeHorz2);FxaaFloat edgeVert4=(abs(edgeVert1)*2.0)+abs(edgeVert2);FxaaFloat edgeHorz3=(-2.0*lumaW)+lumaNWSW;FxaaFloat edgeVert3=(-2.0*lumaS)+lumaSWSE;FxaaFloat edgeHorz=abs(edgeHorz3)+edgeHorz4;FxaaFloat edgeVert=abs(edgeVert3)+edgeVert4;FxaaFloat subpixNWSWNESE=lumaNWSW+lumaNESE;FxaaFloat lengthSign=fxaaQualityRcpFrame.x;FxaaBool horzSpan=edgeHorz>=edgeVert;FxaaFloat subpixA=subpixNSWE*2.0+subpixNWSWNESE;if(!horzSpan)lumaN=lumaW;if(!horzSpan)lumaS=lumaE;if(horzSpan)lengthSign=fxaaQualityRcpFrame.y;FxaaFloat subpixB=(subpixA*(1.0/12.0))-lumaM;FxaaFloat gradientN=lumaN-lumaM;FxaaFloat gradientS=lumaS-lumaM;FxaaFloat lumaNN=lumaN+lumaM;FxaaFloat lumaSS=lumaS+lumaM;FxaaBool pairN=abs(gradientN)>=abs(gradientS);FxaaFloat gradient=max(abs(gradientN),abs(gradientS));if(pairN)lengthSign=-lengthSign;FxaaFloat subpixC=FxaaSat(abs(subpixB)*subpixRcpRange);FxaaFloat2 posB;posB.x=posM.x;posB.y=posM.y;FxaaFloat2 offNP;offNP.x=(!horzSpan)?0.0:fxaaQualityRcpFrame.x;offNP.y=(horzSpan)?0.0:fxaaQualityRcpFrame.y;if(!horzSpan)posB.x+=lengthSign*0.5;if(horzSpan)posB.y+=lengthSign*0.5;FxaaFloat2 posN;posN.x=posB.x-offNP.x*FXAA_QUALITY_P0;posN.y=posB.y-offNP.y*FXAA_QUALITY_P0;FxaaFloat2 posP;posP.x=posB.x+offNP.x*FXAA_QUALITY_P0;posP.y=posB.y+offNP.y*FXAA_QUALITY_P0;FxaaFloat subpixD=((-2.0)*subpixC)+3.0;FxaaFloat lumaEndN=FxaaLuma(FxaaTexTop(tex,posN));FxaaFloat subpixE=subpixC*subpixC;FxaaFloat lumaEndP=FxaaLuma(FxaaTexTop(tex,posP));if(!pairN)lumaNN=lumaSS;FxaaFloat gradientScaled=gradient*1.0/4.0;FxaaFloat lumaMM=lumaM-lumaNN*0.5;FxaaFloat subpixF=subpixD*subpixE;FxaaBool lumaMLTZero=lumaMM<0.0;lumaEndN-=lumaNN*0.5;lumaEndP-=lumaNN*0.5;FxaaBool doneN=abs(lumaEndN)>=gradientScaled;FxaaBool doneP=abs(lumaEndP)>=gradientScaled;if(!doneN)posN.x-=offNP.x*FXAA_QUALITY_P1;if(!doneN)posN.y-=offNP.y*FXAA_QUALITY_P1;FxaaBool doneNP=(!doneN)||(!doneP);if(!doneP)posP.x+=offNP.x*FXAA_QUALITY_P1;if(!doneP)posP.y+=offNP.y*FXAA_QUALITY_P1;if(doneNP){if(!doneN)lumaEndN=FxaaLuma(FxaaTexTop(tex,posN.xy));if(!doneP)lumaEndP=FxaaLuma(FxaaTexTop(tex,posP.xy));if(!doneN)lumaEndN=lumaEndN-lumaNN*0.5;if(!doneP)lumaEndP=lumaEndP-lumaNN*0.5;doneN=abs(lumaEndN)>=gradientScaled;doneP=abs(lumaEndP)>=gradientScaled;if(!doneN)posN.x-=offNP.x*FXAA_QUALITY_P2;if(!doneN)posN.y-=offNP.y*FXAA_QUALITY_P2;doneNP=(!doneN)||(!doneP);if(!doneP)posP.x+=offNP.x*FXAA_QUALITY_P2;if(!doneP)posP.y+=offNP.y*FXAA_QUALITY_P2;\n#if (FXAA_QUALITY_PS>3)\nif(doneNP){if(!doneN)lumaEndN=FxaaLuma(FxaaTexTop(tex,posN.xy));if(!doneP)lumaEndP=FxaaLuma(FxaaTexTop(tex,posP.xy));if(!doneN)lumaEndN=lumaEndN-lumaNN*0.5;if(!doneP)lumaEndP=lumaEndP-lumaNN*0.5;doneN=abs(lumaEndN)>=gradientScaled;doneP=abs(lumaEndP)>=gradientScaled;if(!doneN)posN.x-=offNP.x*FXAA_QUALITY_P3;if(!doneN)posN.y-=offNP.y*FXAA_QUALITY_P3;doneNP=(!doneN)||(!doneP);if(!doneP)posP.x+=offNP.x*FXAA_QUALITY_P3;if(!doneP)posP.y+=offNP.y*FXAA_QUALITY_P3;\n#if (FXAA_QUALITY_PS>4)\nif(doneNP){if(!doneN)lumaEndN=FxaaLuma(FxaaTexTop(tex,posN.xy));if(!doneP)lumaEndP=FxaaLuma(FxaaTexTop(tex,posP.xy));if(!doneN)lumaEndN=lumaEndN-lumaNN*0.5;if(!doneP)lumaEndP=lumaEndP-lumaNN*0.5;doneN=abs(lumaEndN)>=gradientScaled;doneP=abs(lumaEndP)>=gradientScaled;if(!doneN)posN.x-=offNP.x*FXAA_QUALITY_P4;if(!doneN)posN.y-=offNP.y*FXAA_QUALITY_P4;doneNP=(!doneN)||(!doneP);if(!doneP)posP.x+=offNP.x*FXAA_QUALITY_P4;if(!doneP)posP.y+=offNP.y*FXAA_QUALITY_P4;\n#if (FXAA_QUALITY_PS>5)\nif(doneNP){if(!doneN)lumaEndN=FxaaLuma(FxaaTexTop(tex,posN.xy));if(!doneP)lumaEndP=FxaaLuma(FxaaTexTop(tex,posP.xy));if(!doneN)lumaEndN=lumaEndN-lumaNN*0.5;if(!doneP)lumaEndP=lumaEndP-lumaNN*0.5;doneN=abs(lumaEndN)>=gradientScaled;doneP=abs(lumaEndP)>=gradientScaled;if(!doneN)posN.x-=offNP.x*FXAA_QUALITY_P5;if(!doneN)posN.y-=offNP.y*FXAA_QUALITY_P5;doneNP=(!doneN)||(!doneP);if(!doneP)posP.x+=offNP.x*FXAA_QUALITY_P5;if(!doneP)posP.y+=offNP.y*FXAA_QUALITY_P5;\n#if (FXAA_QUALITY_PS>6)\nif(doneNP){if(!doneN)lumaEndN=FxaaLuma(FxaaTexTop(tex,posN.xy));if(!doneP)lumaEndP=FxaaLuma(FxaaTexTop(tex,posP.xy));if(!doneN)lumaEndN=lumaEndN-lumaNN*0.5;if(!doneP)lumaEndP=lumaEndP-lumaNN*0.5;doneN=abs(lumaEndN)>=gradientScaled;doneP=abs(lumaEndP)>=gradientScaled;if(!doneN)posN.x-=offNP.x*FXAA_QUALITY_P6;if(!doneN)posN.y-=offNP.y*FXAA_QUALITY_P6;doneNP=(!doneN)||(!doneP);if(!doneP)posP.x+=offNP.x*FXAA_QUALITY_P6;if(!doneP)posP.y+=offNP.y*FXAA_QUALITY_P6;\n#if (FXAA_QUALITY_PS>7)\nif(doneNP){if(!doneN)lumaEndN=FxaaLuma(FxaaTexTop(tex,posN.xy));if(!doneP)lumaEndP=FxaaLuma(FxaaTexTop(tex,posP.xy));if(!doneN)lumaEndN=lumaEndN-lumaNN*0.5;if(!doneP)lumaEndP=lumaEndP-lumaNN*0.5;doneN=abs(lumaEndN)>=gradientScaled;doneP=abs(lumaEndP)>=gradientScaled;if(!doneN)posN.x-=offNP.x*FXAA_QUALITY_P7;if(!doneN)posN.y-=offNP.y*FXAA_QUALITY_P7;doneNP=(!doneN)||(!doneP);if(!doneP)posP.x+=offNP.x*FXAA_QUALITY_P7;if(!doneP)posP.y+=offNP.y*FXAA_QUALITY_P7;\n#if (FXAA_QUALITY_PS>8)\nif(doneNP){if(!doneN)lumaEndN=FxaaLuma(FxaaTexTop(tex,posN.xy));if(!doneP)lumaEndP=FxaaLuma(FxaaTexTop(tex,posP.xy));if(!doneN)lumaEndN=lumaEndN-lumaNN*0.5;if(!doneP)lumaEndP=lumaEndP-lumaNN*0.5;doneN=abs(lumaEndN)>=gradientScaled;doneP=abs(lumaEndP)>=gradientScaled;if(!doneN)posN.x-=offNP.x*FXAA_QUALITY_P8;if(!doneN)posN.y-=offNP.y*FXAA_QUALITY_P8;doneNP=(!doneN)||(!doneP);if(!doneP)posP.x+=offNP.x*FXAA_QUALITY_P8;if(!doneP)posP.y+=offNP.y*FXAA_QUALITY_P8;\n#if (FXAA_QUALITY_PS>9)\nif(doneNP){if(!doneN)lumaEndN=FxaaLuma(FxaaTexTop(tex,posN.xy));if(!doneP)lumaEndP=FxaaLuma(FxaaTexTop(tex,posP.xy));if(!doneN)lumaEndN=lumaEndN-lumaNN*0.5;if(!doneP)lumaEndP=lumaEndP-lumaNN*0.5;doneN=abs(lumaEndN)>=gradientScaled;doneP=abs(lumaEndP)>=gradientScaled;if(!doneN)posN.x-=offNP.x*FXAA_QUALITY_P9;if(!doneN)posN.y-=offNP.y*FXAA_QUALITY_P9;doneNP=(!doneN)||(!doneP);if(!doneP)posP.x+=offNP.x*FXAA_QUALITY_P9;if(!doneP)posP.y+=offNP.y*FXAA_QUALITY_P9;\n#if (FXAA_QUALITY_PS>10)\nif(doneNP){if(!doneN)lumaEndN=FxaaLuma(FxaaTexTop(tex,posN.xy));if(!doneP)lumaEndP=FxaaLuma(FxaaTexTop(tex,posP.xy));if(!doneN)lumaEndN=lumaEndN-lumaNN*0.5;if(!doneP)lumaEndP=lumaEndP-lumaNN*0.5;doneN=abs(lumaEndN)>=gradientScaled;doneP=abs(lumaEndP)>=gradientScaled;if(!doneN)posN.x-=offNP.x*FXAA_QUALITY_P10;if(!doneN)posN.y-=offNP.y*FXAA_QUALITY_P10;doneNP=(!doneN)||(!doneP);if(!doneP)posP.x+=offNP.x*FXAA_QUALITY_P10;if(!doneP)posP.y+=offNP.y*FXAA_QUALITY_P10;\n#if (FXAA_QUALITY_PS>11)\nif(doneNP){if(!doneN)lumaEndN=FxaaLuma(FxaaTexTop(tex,posN.xy));if(!doneP)lumaEndP=FxaaLuma(FxaaTexTop(tex,posP.xy));if(!doneN)lumaEndN=lumaEndN-lumaNN*0.5;if(!doneP)lumaEndP=lumaEndP-lumaNN*0.5;doneN=abs(lumaEndN)>=gradientScaled;doneP=abs(lumaEndP)>=gradientScaled;if(!doneN)posN.x-=offNP.x*FXAA_QUALITY_P11;if(!doneN)posN.y-=offNP.y*FXAA_QUALITY_P11;doneNP=(!doneN)||(!doneP);if(!doneP)posP.x+=offNP.x*FXAA_QUALITY_P11;if(!doneP)posP.y+=offNP.y*FXAA_QUALITY_P11;\n#if (FXAA_QUALITY_PS>12)\nif(doneNP){if(!doneN)lumaEndN=FxaaLuma(FxaaTexTop(tex,posN.xy));if(!doneP)lumaEndP=FxaaLuma(FxaaTexTop(tex,posP.xy));if(!doneN)lumaEndN=lumaEndN-lumaNN*0.5;if(!doneP)lumaEndP=lumaEndP-lumaNN*0.5;doneN=abs(lumaEndN)>=gradientScaled;doneP=abs(lumaEndP)>=gradientScaled;if(!doneN)posN.x-=offNP.x*FXAA_QUALITY_P12;if(!doneN)posN.y-=offNP.y*FXAA_QUALITY_P12;doneNP=(!doneN)||(!doneP);if(!doneP)posP.x+=offNP.x*FXAA_QUALITY_P12;if(!doneP)posP.y+=offNP.y*FXAA_QUALITY_P12;}\n#endif\n}\n#endif\n}\n#endif\n}\n#endif\n}\n#endif\n}\n#endif\n}\n#endif\n}\n#endif\n}\n#endif\n}\n#endif\n}FxaaFloat dstN=posM.x-posN.x;FxaaFloat dstP=posP.x-posM.x;if(!horzSpan)dstN=posM.y-posN.y;if(!horzSpan)dstP=posP.y-posM.y;FxaaBool goodSpanN=(lumaEndN<0.0)!=lumaMLTZero;FxaaFloat spanLength=(dstP+dstN);FxaaBool goodSpanP=(lumaEndP<0.0)!=lumaMLTZero;FxaaFloat spanLengthRcp=1.0/spanLength;FxaaBool directionN=dstN<dstP;FxaaFloat dst=min(dstN,dstP);FxaaBool goodSpan=directionN?goodSpanN:goodSpanP;FxaaFloat subpixG=subpixF*subpixF;FxaaFloat pixelOffset=(dst*(-spanLengthRcp))+0.5;FxaaFloat subpixH=subpixG*fxaaQualitySubpix;FxaaFloat pixelOffsetGood=goodSpan?pixelOffset:0.0;FxaaFloat pixelOffsetSubpix=max(pixelOffsetGood,subpixH);if(!horzSpan)posM.x+=pixelOffsetSubpix*lengthSign;if(horzSpan)posM.y+=pixelOffsetSubpix*lengthSign;\n#if (FXAA_DISCARD==1)\nreturn FxaaTexTop(tex,posM);\n#else\nreturn FxaaFloat4(FxaaTexTop(tex,posM).xyz,lumaM);\n#endif\n}\n#endif\nvoid main(){gl_FragColor=FxaaPixelShader(vUv,vec4(0.0),tDiffuse,tDiffuse,tDiffuse,resolution,vec4(0.0),vec4(0.0),vec4(0.0),0.75,0.166,0.0833,0.0,0.0,0.0,vec4(0.0));gl_FragColor.a=texture2D(tDiffuse,vUv).a;}"};Se.BodyPart=It,Se.CapeObject=_a,Se.CompositeAnimation=ba,Se.ElytraObject=va,Se.FXAASkinViewer=class extends wa{constructor(a){void 0===a?a={alpha:!1,background:"white"}:(a.alpha=!1,void 0===a.background&&(a.background="white")),super(a),this.composer=new jo(this.renderer),this.renderPass=new Qo(this.scene,this.camera),this.fxaaPass=new Qi(qo),this.composer.addPass(this.renderPass),this.composer.addPass(this.fxaaPass),this.updateComposerSize(),this.renderer.setClearColor("white")}setSize(a,e){super.setSize(a,e),void 0!==this.composer&&this.updateComposerSize()}updateComposerSize(){this.composer.setSize(this.width,this.height);const a=this.renderer.getPixelRatio();this.composer.setPixelRatio(a),this.fxaaPass.material.uniforms.resolution.value.x=1/(this.width*a),this.fxaaPass.material.uniforms.resolution.value.y=1/(this.height*a)}render(){this.composer.render()}dispose(){super.dispose(),this.fxaaPass.fsQuad.dispose()}},Se.FlyingAnimation=(a,e)=>{e<0&&(e=0);const t=(n=(e*=20)*e/100)<=0?0:n>=1?1:n;var n;a.rotation.x=t*Math.PI/2,a.skin.head.rotation.x=t>.5?Math.PI/4-a.rotation.x:0;const c=.25*Math.PI*t;a.skin.leftArm.rotation.z=c,a.skin.rightArm.rotation.z=-c;const l=Math.PI/2,s=Math.pow(.9,e);a.elytra.leftWing.rotation.x=.34906584+-.08726644*s,a.elytra.leftWing.rotation.z=l+s*(.2617994-l),a.elytra.updateRightWing()},Se.IdleAnimation=(a,e)=>{const t=a.skin;e*=2;const n=.02*Math.PI;t.leftArm.rotation.z=.03*Math.cos(e)+n,t.rightArm.rotation.z=.03*Math.cos(e+Math.PI)-n;const i=.06*Math.PI;a.cape.rotation.x=.01*Math.sin(e)+i},Se.PlayerObject=ya,Se.RootAnimation=Sa,Se.RotatingAnimation=(a,e)=>{a.rotation.y=e},Se.RunningAnimation=(a,e)=>{const t=a.skin;e=15*e+.5*Math.PI,t.leftLeg.rotation.x=1.3*Math.cos(e+Math.PI),t.rightLeg.rotation.x=1.3*Math.cos(e),t.leftArm.rotation.x=1.5*Math.cos(e),t.rightArm.rotation.x=1.5*Math.cos(e+Math.PI);const n=.1*Math.PI;t.leftArm.rotation.z=.1*Math.cos(e)+n,t.rightArm.rotation.z=.1*Math.cos(e+Math.PI)-n,a.position.y=Math.cos(2*e),a.position.x=.15*Math.cos(e),a.rotation.z=.01*Math.cos(e+Math.PI);const i=.3*Math.PI;a.cape.rotation.x=.1*Math.sin(2*e)+i},Se.SkinObject=xa,Se.SkinViewer=wa,Se.WalkingAnimation=(a,e)=>{const t=a.skin;e*=8,t.leftLeg.rotation.x=.5*Math.sin(e),t.rightLeg.rotation.x=.5*Math.sin(e+Math.PI),t.leftArm.rotation.x=.5*Math.sin(e+Math.PI),t.rightArm.rotation.x=.5*Math.sin(e);const n=.02*Math.PI;t.leftArm.rotation.z=.03*Math.cos(e)+n,t.rightArm.rotation.z=.03*Math.cos(e+Math.PI)-n,t.head.rotation.y=.2*Math.sin(e/4),t.head.rotation.x=.1*Math.sin(e/5);const i=.06*Math.PI;a.cape.rotation.x=.06*Math.sin(e/1.5)+i},Se.createOrbitControls=function(a){const e=new Wo(a.camera,a.renderer.domElement);return e.enablePan=!1,e.target=new P(0,0,0),e.minDistance=10,e.maxDistance=256,e.update(),e},Se.invokeAnimation=Xi,Object.defineProperty(Se,"__esModule",{value:!0})});